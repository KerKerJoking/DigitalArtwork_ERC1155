{
	"id": "ac721c782da0ab99c29217ffe8516ee1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Standard_ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\n\r\ncontract Standart_ERC1155 is ERC1155 {\r\n    uint256 public nextTokenId;\r\n\r\n    // The URI uses a placeholder {id} to be replaced by the token id in hex format\r\n    constructor() ERC1155(\"https://example.com/api/item/{id}.json\") {}\r\n\r\n    // Simple mint function to mint a token with a specified amount and auto-incremented id\r\n    function mint(uint256 amount) external {\r\n        _mint(msg.sender, nextTokenId, amount, \"\");\r\n        nextTokenId++;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/SlotDerivation.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Comparators.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol": {
				"ERC1155Utils": {
					"abi": [],
					"devdoc": {
						"details": "Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":439:3533  library ERC1155Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":439:3533  library ERC1155Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201f0812f0e98455109b71b18fa6baf38efac159d1d88063e597b22efe2f2bcb1c64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201f0812f0e98455109b71b18fa6baf38efac159d1d88063e597b22efe2f2bcb1c64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F ADDMOD SLT CREATE 0xE9 DUP5 SSTORE LT SWAP12 PUSH18 0xB18FA6BAF38EFAC159D1D88063E597B22EFE 0x2F 0x2B 0xCB SHR PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "439:3094:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;439:3094:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201f0812f0e98455109b71b18fa6baf38efac159d1d88063e597b22efe2f2bcb1c64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F ADDMOD SLT CREATE 0xE9 DUP5 SSTORE LT SWAP12 PUSH18 0xB18FA6BAF38EFAC159D1D88063E597B22EFE 0x2F 0x2B 0xCB SHR PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "439:3094:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"checkOnERC1155BatchReceived(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"checkOnERC1155Received(address,address,address,uint256,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 439,
									"end": 3533,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f0812f0e98455109b71b18fa6baf38efac159d1d88063e597b22efe2f2bcb1c64736f6c63430008140033",
									".code": [
										{
											"begin": 439,
											"end": 3533,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 439,
											"end": 3533,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 439,
											"end": 3533,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 439,
											"end": 3533,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 439,
											"end": 3533,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 3533,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 439,
											"end": 3533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 3533,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 439,
											"end": 3533,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Comparators.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"Standard_ERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":459:18340  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":459:18340  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dbdd6e2e5d98269a784c69be515921ee85351ef01ea54dfdbe17f6f9f49925ff64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dbdd6e2e5d98269a784c69be515921ee85351ef01ea54dfdbe17f6f9f49925ff64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xDD PUSH15 0x2E5D98269A784C69BE515921EE8535 0x1E CREATE 0x1E 0xA5 0x4D REVERT 0xBE OR 0xF6 0xF9 DELEGATECALL SWAP10 0x25 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "459:17881:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:17881:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dbdd6e2e5d98269a784c69be515921ee85351ef01ea54dfdbe17f6f9f49925ff64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xDD PUSH15 0x2E5D98269A784C69BE515921EE8535 0x1E CREATE 0x1E 0xA5 0x4D REVERT 0xBE OR 0xF6 0xF9 DELEGATECALL SWAP10 0x25 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "459:17881:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_begin(uint256[] memory)": "infinite",
								"_castToUint256Array(address[] memory)": "infinite",
								"_castToUint256Array(bytes32[] memory)": "infinite",
								"_castToUint256Comp(function (address,address) pure returns (bool))": "infinite",
								"_castToUint256Comp(function (bytes32,bytes32) pure returns (bool))": "infinite",
								"_end(uint256[] memory)": "infinite",
								"_mload(uint256)": "infinite",
								"_quickSort(uint256,uint256,function (uint256,uint256) pure returns (bool))": "infinite",
								"_swap(uint256,uint256)": "infinite",
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"lowerBound(uint256[] storage pointer,uint256)": "infinite",
								"lowerBoundMemory(uint256[] memory,uint256)": "infinite",
								"sort(address[] memory)": "infinite",
								"sort(address[] memory,function (address,address) pure returns (bool))": "infinite",
								"sort(bytes32[] memory)": "infinite",
								"sort(bytes32[] memory,function (bytes32,bytes32) pure returns (bool))": "infinite",
								"sort(uint256[] memory)": "infinite",
								"sort(uint256[] memory,function (uint256,uint256) pure returns (bool))": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(bytes32[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite",
								"unsafeSetLength(address[] storage pointer,uint256)": "infinite",
								"unsafeSetLength(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeSetLength(uint256[] storage pointer,uint256)": "infinite",
								"upperBound(uint256[] storage pointer,uint256)": "infinite",
								"upperBoundMemory(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 459,
									"end": 18340,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbdd6e2e5d98269a784c69be515921ee85351ef01ea54dfdbe17f6f9f49925ff64736f6c63430008140033",
									".code": [
										{
											"begin": 459,
											"end": 18340,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 459,
											"end": 18340,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 459,
											"end": 18340,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 459,
											"end": 18340,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 459,
											"end": 18340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 18340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 459,
											"end": 18340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 18340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 459,
											"end": 18340,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Comparators.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"Standard_ERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Comparators.sol": {
				"Comparators": {
					"abi": [],
					"devdoc": {
						"details": "Provides a set of functions to compare values. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Comparators.sol\":224:442  library Comparators {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Comparators.sol\":224:442  library Comparators {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200289483e97275a1dd62531591f6a33cd909c44f94ad8d354739c9281401160bc64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200289483e97275a1dd62531591f6a33cd909c44f94ad8d354739c9281401160bc64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL DUP10 BASEFEE RETURNDATACOPY SWAP8 0x27 GAS SAR 0xD6 0x25 BALANCE MSIZE 0x1F PUSH11 0x33CD909C44F94AD8D35473 SWAP13 SWAP3 DUP2 BLOCKHASH GT PUSH1 0xBC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "224:218:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200289483e97275a1dd62531591f6a33cd909c44f94ad8d354739c9281401160bc64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL DUP10 BASEFEE RETURNDATACOPY SWAP8 0x27 GAS SAR 0xD6 0x25 BALANCE MSIZE 0x1F PUSH11 0x33CD909C44F94AD8D35473 SWAP13 SWAP3 DUP2 BLOCKHASH GT PUSH1 0xBC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "224:218:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"gt(uint256,uint256)": "infinite",
								"lt(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 224,
									"end": 442,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200289483e97275a1dd62531591f6a33cd909c44f94ad8d354739c9281401160bc64736f6c63430008140033",
									".code": [
										{
											"begin": 224,
											"end": 442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 224,
											"end": 442,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 224,
											"end": 442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 442,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 442,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 442,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 224,
											"end": 442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 442,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Comparators.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"Standard_ERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e432238a159b8c6bf35903e7c1e9e7694928bd1cf74ef6b39b784df2555a1a7d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e432238a159b8c6bf35903e7c1e9e7694928bd1cf74ef6b39b784df2555a1a7d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 ORIGIN 0x23 DUP11 ISZERO SWAP12 DUP13 PUSH12 0xF35903E7C1E9E7694928BD1C 0xF7 0x4E 0xF6 0xB3 SWAP12 PUSH25 0x4DF2555A1A7D64736F6C634300081400330000000000000000 ",
							"sourceMap": "657:1315:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e432238a159b8c6bf35903e7c1e9e7694928bd1cf74ef6b39b784df2555a1a7d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 ORIGIN 0x23 DUP11 ISZERO SWAP12 DUP13 PUSH12 0xF35903E7C1E9E7694928BD1C 0xF7 0x4E 0xF6 0xB3 SWAP12 PUSH25 0x4DF2555A1A7D64736F6C634300081400330000000000000000 ",
							"sourceMap": "657:1315:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e432238a159b8c6bf35903e7c1e9e7694928bd1cf74ef6b39b784df2555a1a7d64736f6c63430008140033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Comparators.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"Standard_ERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/SlotDerivation.sol": {
				"SlotDerivation": {
					"abi": [],
					"devdoc": {
						"details": "Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1598:5321  library SlotDerivation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/SlotDerivation.sol\":1598:5321  library SlotDerivation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206f0ac7df1ed0ba9b9eb70328ce0899f5da2dcf54d89cae94ac1e65e538200ea664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206f0ac7df1ed0ba9b9eb70328ce0899f5da2dcf54d89cae94ac1e65e538200ea664736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xAC7DF1ED0BA9B9EB70328CE0899F5DA 0x2D 0xCF SLOAD 0xD8 SWAP13 0xAE SWAP5 0xAC 0x1E PUSH6 0xE538200EA664 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "1598:3723:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1598:3723:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206f0ac7df1ed0ba9b9eb70328ce0899f5da2dcf54d89cae94ac1e65e538200ea664736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xAC7DF1ED0BA9B9EB70328CE0899F5DA 0x2D 0xCF SLOAD 0xD8 SWAP13 0xAE SWAP5 0xAC 0x1E PUSH6 0xE538200EA664 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "1598:3723:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"deriveArray(bytes32)": "infinite",
								"deriveMapping(bytes32,address)": "infinite",
								"deriveMapping(bytes32,bool)": "infinite",
								"deriveMapping(bytes32,bytes memory)": "infinite",
								"deriveMapping(bytes32,bytes32)": "infinite",
								"deriveMapping(bytes32,int256)": "infinite",
								"deriveMapping(bytes32,string memory)": "infinite",
								"deriveMapping(bytes32,uint256)": "infinite",
								"erc7201Slot(string memory)": "infinite",
								"offset(bytes32,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 5321,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f0ac7df1ed0ba9b9eb70328ce0899f5da2dcf54d89cae94ac1e65e538200ea664736f6c63430008140033",
									".code": [
										{
											"begin": 1598,
											"end": 5321,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 5321,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Comparators.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"Standard_ERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202ccbceb70e59d6a22cbb9a76e8fe8f849bd1129f54e67720fb927b19f458329964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ccbceb70e59d6a22cbb9a76e8fe8f849bd1129f54e67720fb927b19f458329964736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xCB 0xCE 0xB7 0xE MSIZE 0xD6 LOG2 0x2C 0xBB SWAP11 PUSH23 0xE8FE8F849BD1129F54E67720FB927B19F458329964736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "1407:2774:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ccbceb70e59d6a22cbb9a76e8fe8f849bd1129f54e67720fb927b19f458329964736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xCB 0xCE 0xB7 0xE MSIZE 0xD6 LOG2 0x2C 0xBB SWAP11 PUSH23 0xE8FE8F849BD1129F54E67720FB927B19F458329964736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "1407:2774:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ccbceb70e59d6a22cbb9a76e8fe8f849bd1129f54e67720fb927b19f458329964736f6c63430008140033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Comparators.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"Standard_ERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c1fc64485c9434a2f5e1637d3e170352fb35abf0af1f3effa4ae6ccc849505e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c1fc64485c9434a2f5e1637d3e170352fb35abf0af1f3effa4ae6ccc849505e64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0x1F 0xC6 PREVRANDAO DUP6 0xC9 NUMBER 0x4A 0x2F 0x5E AND CALLDATACOPY 0xD3 0xE1 PUSH17 0x352FB35ABF0AF1F3EFFA4AE6CCC849505E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "281:28026:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c1fc64485c9434a2f5e1637d3e170352fb35abf0af1f3effa4ae6ccc849505e64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0x1F 0xC6 PREVRANDAO DUP6 0xC9 NUMBER 0x4A 0x2F 0x5E AND CALLDATACOPY 0xD3 0xE1 PUSH17 0x352FB35ABF0AF1F3EFFA4AE6CCC849505E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "281:28026:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c1fc64485c9434a2f5e1637d3e170352fb35abf0af1f3effa4ae6ccc849505e64736f6c63430008140033",
									".code": [
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Comparators.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"Standard_ERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f7a12a235e55a5dddc921f252cc53a01b13b54b2d7e3c4ecb11d150054a80eec64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f7a12a235e55a5dddc921f252cc53a01b13b54b2d7e3c4ecb11d150054a80eec64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 LOG1 0x2A 0x23 0x5E SSTORE 0xA5 0xDD 0xDC SWAP3 0x1F 0x25 0x2C 0xC5 GASPRICE ADD 0xB1 EXTCODESIZE SLOAD 0xB2 0xD7 0xE3 0xC4 0xEC 0xB1 SAR ISZERO STOP SLOAD 0xA8 0xE 0xEC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "769:34173:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f7a12a235e55a5dddc921f252cc53a01b13b54b2d7e3c4ecb11d150054a80eec64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 LOG1 0x2A 0x23 0x5E SSTORE 0xA5 0xDD 0xDC SWAP3 0x1F 0x25 0x2C 0xC5 GASPRICE ADD 0xB1 EXTCODESIZE SLOAD 0xB2 0xD7 0xE3 0xC4 0xEC 0xB1 SAR ISZERO STOP SLOAD 0xA8 0xE 0xEC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "769:34173:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7a12a235e55a5dddc921f252cc53a01b13b54b2d7e3c4ecb11d150054a80eec64736f6c63430008140033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Comparators.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"Standard_ERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Standard_ERC1155.sol": {
				"Standart_ERC1155": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Standard_ERC1155.sol\":123:581  contract Standart_ERC1155 is ERC1155 {... */\n  mstore(0x40, 0x80)\n    /* \"Standard_ERC1155.sol\":287:353  constructor() ERC1155(\"https://example.com/api/item/{id}.json\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1249:1311  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x26\n  dup2\n  mstore\n  0x20\n  add\n  data_4187f743cd1820c5afef0906cd3b4419c90fc3a98b6271dccd633167a3271d81\n  0x26\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1291:1304  _setURI(uri_) */\n  tag_5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1299:1303  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1291:1298  _setURI */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1291:1304  _setURI(uri_) */\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1249:1311  constructor(string memory uri_) {... */\n  pop\n    /* \"Standard_ERC1155.sol\":123:581  contract Standart_ERC1155 is ERC1155 {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10290:10376  function _setURI(string memory newuri) internal virtual {... */\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10356:10360  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10356:10369  _uri = newuri */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10363:10369  newuri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10356:10360  _uri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10356:10369  _uri = newuri */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10290:10376  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_12:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_13:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_20:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_21:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_15:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_25\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_25:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_26:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_26)\ntag_28:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_24:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_11:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_32\n  tag_12\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1582:1679   */\n  tag_33\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_34\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_13\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_15\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_36\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_37:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_28)\n    /* \"#utility.yul\":1810:2473   */\ntag_36:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_40:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_40)\ntag_42:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_43:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_17:\n    /* \"Standard_ERC1155.sol\":123:581  contract Standart_ERC1155 is ERC1155 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4187f743cd1820c5afef0906cd3b4419c90fc3a98b6271dccd633167a3271d81 68747470733a2f2f6578616d706c652e636f6d2f6170692f6974656d2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"Standard_ERC1155.sol\":123:581  contract Standart_ERC1155 is ERC1155 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75794a3c\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x75794a3c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2245:2377  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2245:2377  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1378:1683  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1378:1683  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_18\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2082:2185  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4012:4441  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2534:3086  function balanceOfBatch(... */\n    tag_7:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n        /* \"Standard_ERC1155.sol\":167:193  uint256 public nextTokenId */\n    tag_8:\n      tag_14\n      sload(0x03)\n      dup2\n      jump\n        /* \"Standard_ERC1155.sol\":454:578  function mint(uint256 amount) external {... */\n    tag_9:\n      tag_32\n      tag_46\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3154:3298  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_10:\n      tag_32\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3522  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_11:\n      tag_20\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3589:3940  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_12:\n      tag_32\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2245:2377  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2322:2329  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2348:2361  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2348:2370  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2245:2377  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_61:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1378:1683  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1480:1484  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1515:1556  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1515:1624  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_63\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1572:1624  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1515:1624  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1515:1676  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_61\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1640:1676  super.supportsInterface(interfaceId) */\n      tag_61\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2082:2185  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2142:2155  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2174:2178  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2167:2178  return _uri */\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_69\n      jump\t// in\n    tag_70:\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_72\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_71)\n    tag_72:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_73:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2082:2185  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4012:4441  function safeBatchTransferFrom(... */\n    tag_35:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4263  from != sender */\n      dup7\n      and\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4298  from != sender && !isApprovedForAll(from, sender) */\n      tag_77\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4268:4298  isApprovedForAll(from, sender) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4289  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4291:4297  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4268:4284  isApprovedForAll */\n      tag_55\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4268:4298  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4267:4298  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4298  from != sender && !isApprovedForAll(from, sender) */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4245:4374  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4321:4363  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      shl(0xe1, 0x711bec91)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8499:8514   */\n      dup1\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4321:4363  ERC1155MissingApprovalForAll(sender, from) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8481:8515   */\n      mstore\n        /* \"#utility.yul\":8551:8566   */\n      dup8\n      and\n        /* \"#utility.yul\":8531:8549   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8524:8567   */\n      mstore\n        /* \"#utility.yul\":8416:8434   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4321:4363  ERC1155MissingApprovalForAll(sender, from) */\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4245:4374  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4383:4434  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4406:4410  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4412:4414  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4419  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4421:4427  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4429:4433  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4383:4405  _safeBatchTransferFrom */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4383:4434  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4196:4441  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4012:4441  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2534:3086  function balanceOfBatch(... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2658:2674  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2709:2712  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2709:2719  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2690:2698  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2690:2705  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2690:2719  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2686:2807  if (accounts.length != ids.length) {... */\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2768:2778  ids.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2795  accounts.length */\n      dup4\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2742:2796  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      shl(0xe0, 0x5b059991)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":8752:8777   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":8793:8811   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8786:8820   */\n      mstore\n        /* \"#utility.yul\":8725:8743   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2742:2796  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      tag_80\n        /* \"#utility.yul\":8578:8826   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2686:2807  if (accounts.length != ids.length) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2817:2847  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2864:2872  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2864:2879  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2850:2880  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_89\n      jumpi\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_91:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2817:2880  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2896:2905  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2891:3049  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2915:2923  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2915:2930  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2912  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2930  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2891:3049  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16302:16306  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16293:16307  mul(pos, 0x20) */\n      dup1\n      dup3\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16273:16308  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup7\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16267:16309  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2970:3038  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_95\n      swap1\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16302:16306  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16293:16307  mul(pos, 0x20) */\n      dup1\n      dup5\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16273:16308  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup8\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16267:16309  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2245:2377  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      tag_17\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2970:3038  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2951:2964  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2965:2966  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2951:2967  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2951:3038  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2932:2935  ++i */\n      tag_103\n      dup2\n      tag_104\n      jump\t// in\n    tag_103:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2891:3049  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_92)\n    tag_93:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3066:3079  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2534:3086  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Standard_ERC1155.sol\":454:578  function mint(uint256 amount) external {... */\n    tag_47:\n        /* \"Standard_ERC1155.sol\":504:546  _mint(msg.sender, nextTokenId, amount, \"\") */\n      tag_106\n        /* \"Standard_ERC1155.sol\":510:520  msg.sender */\n      caller\n        /* \"Standard_ERC1155.sol\":522:533  nextTokenId */\n      sload(0x03)\n        /* \"Standard_ERC1155.sol\":535:541  amount */\n      dup4\n        /* \"Standard_ERC1155.sol\":504:546  _mint(msg.sender, nextTokenId, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"Standard_ERC1155.sol\":504:509  _mint */\n      tag_107\n        /* \"Standard_ERC1155.sol\":504:546  _mint(msg.sender, nextTokenId, amount, \"\") */\n      jump\t// in\n    tag_106:\n        /* \"Standard_ERC1155.sol\":557:568  nextTokenId */\n      0x03\n        /* \"Standard_ERC1155.sol\":557:570  nextTokenId++ */\n      dup1\n      sload\n      swap1\n        /* \"Standard_ERC1155.sol\":557:568  nextTokenId */\n      0x00\n        /* \"Standard_ERC1155.sol\":557:570  nextTokenId++ */\n      tag_108\n      dup4\n      tag_104\n      jump\t// in\n    tag_108:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Standard_ERC1155.sol\":454:578  function mint(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3154:3298  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3272:3280  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3282:3290  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3257  _setApprovalForAll */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3154:3298  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3522  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3478:3505  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3455:3459  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3478:3505  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3478:3496  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3478:3505  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3478:3515  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3522  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3589:3940  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3755:3769  from != sender */\n      dup7\n      and\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3755:3804  from != sender && !isApprovedForAll(from, sender) */\n      tag_116\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3774:3804  isApprovedForAll(from, sender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3791:3795  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3797:3803  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3774:3790  isApprovedForAll */\n      tag_55\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3774:3804  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3773:3804  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3755:3804  from != sender && !isApprovedForAll(from, sender) */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3751:3880  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3827:3869  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      shl(0xe1, 0x711bec91)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8499:8514   */\n      dup1\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3827:3869  ERC1155MissingApprovalForAll(sender, from) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8481:8515   */\n      mstore\n        /* \"#utility.yul\":8551:8566   */\n      dup8\n      and\n        /* \"#utility.yul\":8531:8549   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8524:8567   */\n      mstore\n        /* \"#utility.yul\":8416:8434   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3827:3869  ERC1155MissingApprovalForAll(sender, from) */\n      tag_80\n        /* \"#utility.yul\":8269:8573   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3751:3880  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3889:3933  _safeTransferFrom(from, to, id, value, data) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3907:3911  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3913:3915  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3917:3919  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3926  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3928:3932  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3889:3906  _safeTransferFrom */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3889:3933  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9023:9468  function _safeBatchTransferFrom(... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9216:9232  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9212:9300  if (to == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9255:9289  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9286:9287  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9255:9289  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9381:9432   */\n      mstore\n        /* \"#utility.yul\":9354:9372   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9255:9289  ERC1155InvalidReceiver(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9235:9438   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9212:9300  if (to == address(0)) {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9313:9331  from == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9309:9397  if (from == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9354:9386  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9383:9384  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9354:9386  ERC1155InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9381:9432   */\n      mstore\n        /* \"#utility.yul\":9354:9372   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9354:9386  ERC1155InvalidSender(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9235:9438   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9309:9397  if (from == address(0)) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9406:9461  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9433:9437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9439:9441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9443:9446  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9454  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9456:9460  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9406:9432  _updateWithAcceptanceCheck */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9406:9461  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9023:9468  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10754:11100  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10850:10866  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10846:10934  if (to == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10889:10923  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10920:10921  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10889:10923  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9381:9432   */\n      mstore\n        /* \"#utility.yul\":9354:9372   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10889:10923  ERC1155InvalidReceiver(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9235:9438   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10846:10934  if (to == address(0)) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13974:13978  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13968:13979  mload(0x40) */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14045  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14029:14046  mstore(array1, 1) */\n      dup1\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14175:14179  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14163:14180  add(array1, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14156:14191  mstore(add(array1, 0x20), element1) */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14292:14309  add(array1, 0x40) */\n      dup2\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14322:14339  mstore(array2, 1) */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13815:13838  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14359:14376  add(array2, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14352:14387  mstore(add(array2, 0x20), element2) */\n      dup6\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14495:14512  add(array2, 0x40) */\n      0x80\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14482:14513  mstore(0x40, add(array2, 0x40)) */\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13968:13979  mload(0x40) */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11032:11093  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_82\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11071:11073  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13968:13979  mload(0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14292:14309  add(array1, 0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11088:11092  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11032:11058  _updateWithAcceptanceCheck */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11032:11093  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13276:13591  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13383:13405  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13379:13473  if (operator == address(0)) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13428:13462  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      shl(0xe8, 0xced3e1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13459:13460  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13428:13462  ERC1155InvalidOperator(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9381:9432   */\n      mstore\n        /* \"#utility.yul\":9354:9372   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13428:13462  ERC1155InvalidOperator(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9235:9438   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13379:13473  if (operator == address(0)) {... */\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13482:13507  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13482:13500  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13482:13507  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13482:13517  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13482:13528  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13543:13584  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13543:13584  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13543:13584  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13276:13591  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8159:8622  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8281:8297  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8277:8365  if (to == address(0)) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8320:8354  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8351:8352  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8320:8354  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9381:9432   */\n      mstore\n        /* \"#utility.yul\":9354:9372   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8320:8354  ERC1155InvalidReceiver(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9235:9438   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8277:8365  if (to == address(0)) {... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8378:8396  from == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8374:8462  if (from == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8419:8451  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8448:8449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8419:8451  ERC1155InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9381:9432   */\n      mstore\n        /* \"#utility.yul\":9354:9372   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8419:8451  ERC1155InvalidSender(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9235:9438   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8374:8462  if (from == address(0)) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13974:13978  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13968:13979  mload(0x40) */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14045  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14029:14046  mstore(array1, 1) */\n      dup1\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14175:14179  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14163:14180  add(array1, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14156:14191  mstore(add(array1, 0x20), element1) */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14292:14309  add(array1, 0x40) */\n      dup2\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14322:14339  mstore(array2, 1) */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13815:13838  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14359:14376  add(array2, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14352:14387  mstore(add(array2, 0x20), element2) */\n      dup6\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14495:14512  add(array2, 0x40) */\n      0x80\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14482:14513  mstore(0x40, add(array2, 0x40)) */\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13968:13979  mload(0x40) */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8560:8615  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8587:8591  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8593:8595  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13968:13979  mload(0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14292:14309  add(array1, 0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8610:8614  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8560:8586  _updateWithAcceptanceCheck */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8560:8615  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8267:8622  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8159:8622  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7002:7702  function _updateWithAcceptanceCheck(... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7203:7233  _update(from, to, ids, values) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7211:7215  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7217:7219  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7221:7224  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7226:7232  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7203:7210  _update */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7203:7233  _update(from, to, ids, values) */\n      jump\t// in\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7247:7263  to != address(0) */\n      dup5\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7243:7696  if (to != address(0)) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7328:7338  ids.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7342:7343  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7328:7343  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7324:7686  if (ids.length == 1) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16302:16306  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16273:16308  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup5\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16267:16309  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16273:16308  add(add(arr, 0x20), mul(pos, 0x20)) */\n      swap1\n      dup5\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16267:16309  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7481:7553  ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data) */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7517:7525  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7527:7531  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7533:7535  to */\n      dup10\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16267:16309  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      dup6\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7548:7552  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7481:7516  ERC1155Utils.checkOnERC1155Received */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7481:7553  ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7345:7568  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7324:7686  if (ids.length == 1) {... */\n      jump(tag_82)\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7592:7671  ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7633:7641  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7643:7647  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7649:7651  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7653:7656  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7664  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7666:7670  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7592:7632  ERC1155Utils.checkOnERC1155BatchReceived */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7592:7671  ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5142:6423  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5277:5283  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5277:5290  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5263:5266  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5263:5273  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5263:5290  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5259:5376  if (ids.length != values.length) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5339:5349  ids.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5351:5364  values.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5313:5365  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      shl(0xe0, 0x5b059991)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":8752:8777   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":8793:8811   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8786:8820   */\n      mstore\n        /* \"#utility.yul\":8725:8743   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5313:5365  ERC1155InvalidArrayLength(ids.length, values.length) */\n      tag_80\n        /* \"#utility.yul\":8578:8826   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5259:5376  if (ids.length != values.length) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5386:5402  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:6119  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5452:5455  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5452:5462  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5448:5449  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5448:5462  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:6119  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16302:16306  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16293:16307  mul(pos, 0x20) */\n      dup2\n      dup2\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16273:16308  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup6\n      dup2\n      add\n      dup3\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16267:16309  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16273:16308  add(add(arr, 0x20), mul(pos, 0x20)) */\n      swap1\n      dup6\n      add\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16267:16309  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5598:5616  from != address(0) */\n      dup9\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5594:6014  if (from != address(0)) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5636:5655  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5658:5671  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5658:5677  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5699:5718  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5695:5824  if (fromBalance < value) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5749:5805  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      shl(0xe0, 0x03dee4c5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9692:9724   */\n      dup11\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5749:5805  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9674:9725   */\n      mstore\n        /* \"#utility.yul\":9741:9759   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9734:9768   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":9784:9802   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":9777:9811   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9827:9845   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":9820:9854   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9646:9665   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5749:5805  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      tag_80\n        /* \"#utility.yul\":9443:9860   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5695:5824  if (fromBalance < value) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5940:5949  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5940:5953  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5940:5959  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5962:5981  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5940:5981  _balances[id][from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5594:6014  if (from != address(0)) {... */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6032:6048  to != address(0) */\n      dup8\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6028:6109  if (to != address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:6077  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:6081  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:6085  _balances[id][to] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:6094  _balances[id][to] += value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6089:6094  value */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:6077  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:6094  _balances[id][to] += value */\n      tag_179\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6089:6094  value */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:6094  _balances[id][to] += value */\n      tag_180\n      jump\t// in\n    tag_179:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6028:6109  if (to != address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5469:6119  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5464:5467  ++i */\n      dup1\n      tag_181\n      swap1\n      tag_104\n      jump\t// in\n    tag_181:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:6119  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_169)\n    tag_170:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6133:6136  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6133:6143  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6147:6148  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6133:6148  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6129:6417  if (ids.length == 1) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16302:16306  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16273:16308  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16267:16309  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6164:6174  uint256 id */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16302:16306  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16273:16308  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup5\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":16267:16309  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6164:6202  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6310:6312  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6279:6324  TransferSingle(operator, from, to, id, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6304:6308  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6279:6324  TransferSingle(operator, from, to, id, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6294:6302  operator */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6279:6324  TransferSingle(operator, from, to, id, value) */\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6314:6316  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6318:6323  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6279:6324  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_185\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":8752:8777   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":8808:8810   */\n      0x20\n        /* \"#utility.yul\":8793:8811   */\n      dup3\n      add\n        /* \"#utility.yul\":8786:8820   */\n      mstore\n        /* \"#utility.yul\":8740:8742   */\n      0x40\n        /* \"#utility.yul\":8725:8743   */\n      add\n      swap1\n        /* \"#utility.yul\":8578:8826   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6279:6324  TransferSingle(operator, from, to, id, value) */\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6150:6335  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6129:6417  if (ids.length == 1) {... */\n      jump(tag_130)\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6390:6392  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6360:6406  TransferBatch(operator, from, to, ids, values) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6384:6388  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6360:6406  TransferBatch(operator, from, to, ids, values) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6374:6382  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6360:6406  TransferBatch(operator, from, to, ids, values) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6394:6397  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6399:6405  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6360:6406  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_187\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5249:6423  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5142:6423  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":998:1957  function checkOnERC1155Received(... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1197:1211  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1197:1215  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1193:1951  if (to.code.length > 0) {... */\n      tag_82\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1235:1306  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1235:1273  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1235:1306  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      tag_191\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1274:1282  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1284:1288  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1290:1292  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1294:1299  value */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1301:1305  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1235:1306  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      0x04\n      add\n      tag_192\n      jump\t// in\n    tag_191:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_193\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_194\n      swap2\n      dup2\n      add\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      0x01\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1231:1941  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_196\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_201\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_200)\n    tag_201:\n      0x60\n      swap2\n      pop\n    tag_200:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1605:1611  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1605:1618  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1622:1623  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1605:1623  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1601:1927  if (reason.length == 0) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1710:1751  IERC1155Errors.ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9399:9431   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1710:1751  IERC1155Errors.ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9381:9432   */\n      mstore\n        /* \"#utility.yul\":9354:9372   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1710:1751  IERC1155Errors.ERC1155InvalidReceiver(to) */\n      tag_80\n        /* \"#utility.yul\":9235:9438   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1601:1927  if (reason.length == 0) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1879:1885  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1873:1886  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1864:1870  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1860:1862  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1856:1871  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1849:1887  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1231:1941  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_196:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1355:1410  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1351:1540  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1480:1521  IERC1155Errors.ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9399:9431   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1480:1521  IERC1155Errors.ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9381:9432   */\n      mstore\n        /* \"#utility.yul\":9354:9372   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":1480:1521  IERC1155Errors.ERC1155InvalidReceiver(to) */\n      tag_80\n        /* \"#utility.yul\":9235:9438   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2505:3531  function checkOnERC1155BatchReceived(... */\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2729:2743  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2729:2747  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2725:3525  if (to.code.length > 0) {... */\n      tag_82\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2767:2845  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2767:2810  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2767:2845  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      tag_210\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2811:2819  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2821:2825  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2827:2830  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2832:2838  values */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2840:2844  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2767:2845  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      0x04\n      add\n      tag_211\n      jump\t// in\n    tag_210:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_212\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_213\n      swap2\n      dup2\n      add\n      swap1\n      tag_195\n      jump\t// in\n    tag_213:\n      0x01\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2763:3515  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_214\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_201\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_200)\n    tag_214:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2924:2984  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":2920:3114  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":3054:3095  IERC1155Errors.ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9399:9431   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":3054:3095  IERC1155Errors.ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9381:9432   */\n      mstore\n        /* \"#utility.yul\":9354:9372   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":3054:3095  IERC1155Errors.ERC1155InvalidReceiver(to) */\n      tag_80\n        /* \"#utility.yul\":9235:9438   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_226:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_237:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_16:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_239:\n        /* \"#utility.yul\":360:389   */\n      tag_240\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_226\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_227:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_243:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_22:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_245:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_246\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_227\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_28:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_249:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1819   */\n    tag_228:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_251:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_251)\n    tag_253:\n        /* \"#utility.yul\":1542:1545   */\n      pop\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1738:1742   */\n      0x20\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup7\n        /* \"#utility.yul\":1720:1736   */\n      add\n        /* \"#utility.yul\":1716:1743   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      mstore\n        /* \"#utility.yul\":1808:1812   */\n      0x20\n        /* \"#utility.yul\":1801:1803   */\n      0x1f\n        /* \"#utility.yul\":1797:1804   */\n      not\n        /* \"#utility.yul\":1792:1794   */\n      0x1f\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1780:1795   */\n      add\n        /* \"#utility.yul\":1776:1805   */\n      and\n        /* \"#utility.yul\":1771:1774   */\n      dup6\n        /* \"#utility.yul\":1767:1806   */\n      add\n        /* \"#utility.yul\":1763:1813   */\n      add\n        /* \"#utility.yul\":1756:1813   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2044   */\n    tag_31:\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":1936:1940   */\n      0x00\n        /* \"#utility.yul\":1993:2038   */\n      tag_246\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup4\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1993:2038   */\n      tag_228\n      jump\t// in\n        /* \"#utility.yul\":2049:2176   */\n    tag_90:\n        /* \"#utility.yul\":2110:2120   */\n      0x4e487b71\n        /* \"#utility.yul\":2105:2108   */\n      0xe0\n        /* \"#utility.yul\":2101:2121   */\n      shl\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2091:2122   */\n      mstore\n        /* \"#utility.yul\":2141:2145   */\n      0x41\n        /* \"#utility.yul\":2138:2139   */\n      0x04\n        /* \"#utility.yul\":2131:2146   */\n      mstore\n        /* \"#utility.yul\":2165:2169   */\n      0x24\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2170   */\n      revert\n        /* \"#utility.yul\":2181:2456   */\n    tag_229:\n        /* \"#utility.yul\":2252:2254   */\n      0x40\n        /* \"#utility.yul\":2246:2255   */\n      mload\n        /* \"#utility.yul\":2317:2319   */\n      0x1f\n        /* \"#utility.yul\":2298:2311   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2294:2321   */\n      and\n        /* \"#utility.yul\":2282:2322   */\n      dup2\n      add\n        /* \"#utility.yul\":2352:2370   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2337:2371   */\n      dup2\n      gt\n        /* \"#utility.yul\":2373:2395   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2334:2396   */\n      or\n        /* \"#utility.yul\":2331:2419   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":2399:2417   */\n      tag_259\n      tag_90\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2435:2437   */\n      0x40\n        /* \"#utility.yul\":2428:2450   */\n      mstore\n        /* \"#utility.yul\":2181:2456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2461:2644   */\n    tag_230:\n        /* \"#utility.yul\":2521:2525   */\n      0x00\n        /* \"#utility.yul\":2554:2572   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2546:2552   */\n      dup3\n        /* \"#utility.yul\":2543:2573   */\n      gt\n        /* \"#utility.yul\":2540:2596   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":2576:2594   */\n      tag_262\n      tag_90\n      jump\t// in\n    tag_262:\n      pop\n        /* \"#utility.yul\":2621:2622   */\n      0x05\n        /* \"#utility.yul\":2617:2631   */\n      shl\n        /* \"#utility.yul\":2633:2637   */\n      0x20\n        /* \"#utility.yul\":2613:2638   */\n      add\n      swap1\n        /* \"#utility.yul\":2461:2644   */\n      jump\t// out\n        /* \"#utility.yul\":2649:3311   */\n    tag_231:\n        /* \"#utility.yul\":2703:2708   */\n      0x00\n        /* \"#utility.yul\":2756:2759   */\n      dup3\n        /* \"#utility.yul\":2749:2753   */\n      0x1f\n        /* \"#utility.yul\":2741:2747   */\n      dup4\n        /* \"#utility.yul\":2737:2754   */\n      add\n        /* \"#utility.yul\":2733:2760   */\n      slt\n        /* \"#utility.yul\":2723:2778   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":2774:2775   */\n      0x00\n        /* \"#utility.yul\":2771:2772   */\n      dup1\n        /* \"#utility.yul\":2764:2776   */\n      revert\n        /* \"#utility.yul\":2723:2778   */\n    tag_264:\n        /* \"#utility.yul\":2810:2816   */\n      dup2\n        /* \"#utility.yul\":2797:2817   */\n      calldataload\n        /* \"#utility.yul\":2836:2840   */\n      0x20\n        /* \"#utility.yul\":2860:2920   */\n      tag_265\n        /* \"#utility.yul\":2876:2919   */\n      tag_266\n        /* \"#utility.yul\":2916:2918   */\n      dup4\n        /* \"#utility.yul\":2876:2919   */\n      tag_230\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2860:2920   */\n      tag_229\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2954:2969   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":3040:3041   */\n      0x05\n        /* \"#utility.yul\":3036:3046   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":3024:3047   */\n      dup5\n      add\n        /* \"#utility.yul\":3020:3052   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":2985:2997   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3064:3079   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3061:3096   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":3092:3093   */\n      0x00\n        /* \"#utility.yul\":3089:3090   */\n      dup1\n        /* \"#utility.yul\":3082:3094   */\n      revert\n        /* \"#utility.yul\":3061:3096   */\n    tag_267:\n        /* \"#utility.yul\":3128:3130   */\n      dup3\n        /* \"#utility.yul\":3120:3126   */\n      dup7\n        /* \"#utility.yul\":3116:3131   */\n      add\n        /* \"#utility.yul\":3140:3282   */\n    tag_268:\n        /* \"#utility.yul\":3156:3162   */\n      dup5\n        /* \"#utility.yul\":3151:3154   */\n      dup2\n        /* \"#utility.yul\":3148:3163   */\n      lt\n        /* \"#utility.yul\":3140:3282   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3222:3239   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3210:3240   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3260:3272   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3173:3185   */\n      dup4\n      add\n        /* \"#utility.yul\":3140:3282   */\n      jump(tag_268)\n    tag_270:\n      pop\n        /* \"#utility.yul\":3300:3305   */\n      swap7\n        /* \"#utility.yul\":2649:3311   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3316:3846   */\n    tag_232:\n        /* \"#utility.yul\":3358:3363   */\n      0x00\n        /* \"#utility.yul\":3411:3414   */\n      dup3\n        /* \"#utility.yul\":3404:3408   */\n      0x1f\n        /* \"#utility.yul\":3396:3402   */\n      dup4\n        /* \"#utility.yul\":3392:3409   */\n      add\n        /* \"#utility.yul\":3388:3415   */\n      slt\n        /* \"#utility.yul\":3378:3433   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":3429:3430   */\n      0x00\n        /* \"#utility.yul\":3426:3427   */\n      dup1\n        /* \"#utility.yul\":3419:3431   */\n      revert\n        /* \"#utility.yul\":3378:3433   */\n    tag_272:\n        /* \"#utility.yul\":3465:3471   */\n      dup2\n        /* \"#utility.yul\":3452:3472   */\n      calldataload\n        /* \"#utility.yul\":3491:3509   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3487:3489   */\n      dup2\n        /* \"#utility.yul\":3484:3510   */\n      gt\n        /* \"#utility.yul\":3481:3533   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":3513:3531   */\n      tag_274\n      tag_90\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3557:3612   */\n      tag_275\n        /* \"#utility.yul\":3600:3602   */\n      0x1f\n        /* \"#utility.yul\":3581:3594   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3577:3604   */\n      and\n        /* \"#utility.yul\":3606:3610   */\n      0x20\n        /* \"#utility.yul\":3573:3611   */\n      add\n        /* \"#utility.yul\":3557:3612   */\n      tag_229\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3637:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3635   */\n      dup2\n        /* \"#utility.yul\":3621:3640   */\n      mstore\n        /* \"#utility.yul\":3683:3686   */\n      dup5\n        /* \"#utility.yul\":3676:3680   */\n      0x20\n        /* \"#utility.yul\":3671:3673   */\n      dup4\n        /* \"#utility.yul\":3663:3669   */\n      dup7\n        /* \"#utility.yul\":3659:3674   */\n      add\n        /* \"#utility.yul\":3655:3681   */\n      add\n        /* \"#utility.yul\":3652:3687   */\n      gt\n        /* \"#utility.yul\":3649:3704   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3697:3698   */\n      dup1\n        /* \"#utility.yul\":3690:3702   */\n      revert\n        /* \"#utility.yul\":3649:3704   */\n    tag_276:\n        /* \"#utility.yul\":3765:3767   */\n      dup2\n        /* \"#utility.yul\":3758:3762   */\n      0x20\n        /* \"#utility.yul\":3750:3756   */\n      dup6\n        /* \"#utility.yul\":3746:3763   */\n      add\n        /* \"#utility.yul\":3739:3743   */\n      0x20\n        /* \"#utility.yul\":3730:3737   */\n      dup4\n        /* \"#utility.yul\":3726:3744   */\n      add\n        /* \"#utility.yul\":3713:3768   */\n      calldatacopy\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3788:3804   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3806:3810   */\n      0x20\n        /* \"#utility.yul\":3784:3811   */\n      add\n        /* \"#utility.yul\":3777:3815   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3792:3799   */\n      swap4\n        /* \"#utility.yul\":3316:3846   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3851:4794   */\n    tag_34:\n        /* \"#utility.yul\":4005:4011   */\n      0x00\n        /* \"#utility.yul\":4013:4019   */\n      dup1\n        /* \"#utility.yul\":4021:4027   */\n      0x00\n        /* \"#utility.yul\":4029:4035   */\n      dup1\n        /* \"#utility.yul\":4037:4043   */\n      0x00\n        /* \"#utility.yul\":4090:4093   */\n      0xa0\n        /* \"#utility.yul\":4078:4087   */\n      dup7\n        /* \"#utility.yul\":4069:4076   */\n      dup9\n        /* \"#utility.yul\":4065:4088   */\n      sub\n        /* \"#utility.yul\":4061:4094   */\n      slt\n        /* \"#utility.yul\":4058:4111   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":4107:4108   */\n      0x00\n        /* \"#utility.yul\":4104:4105   */\n      dup1\n        /* \"#utility.yul\":4097:4109   */\n      revert\n        /* \"#utility.yul\":4058:4111   */\n    tag_278:\n        /* \"#utility.yul\":4130:4159   */\n      tag_279\n        /* \"#utility.yul\":4149:4158   */\n      dup7\n        /* \"#utility.yul\":4130:4159   */\n      tag_226\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4120:4159   */\n      swap5\n      pop\n        /* \"#utility.yul\":4178:4216   */\n      tag_280\n        /* \"#utility.yul\":4212:4214   */\n      0x20\n        /* \"#utility.yul\":4201:4210   */\n      dup8\n        /* \"#utility.yul\":4197:4215   */\n      add\n        /* \"#utility.yul\":4178:4216   */\n      tag_226\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4168:4216   */\n      swap4\n      pop\n        /* \"#utility.yul\":4267:4269   */\n      0x40\n        /* \"#utility.yul\":4256:4265   */\n      dup7\n        /* \"#utility.yul\":4252:4270   */\n      add\n        /* \"#utility.yul\":4239:4271   */\n      calldataload\n        /* \"#utility.yul\":4290:4308   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4331:4333   */\n      dup1\n        /* \"#utility.yul\":4323:4329   */\n      dup3\n        /* \"#utility.yul\":4320:4334   */\n      gt\n        /* \"#utility.yul\":4317:4351   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":4347:4348   */\n      0x00\n        /* \"#utility.yul\":4344:4345   */\n      dup1\n        /* \"#utility.yul\":4337:4349   */\n      revert\n        /* \"#utility.yul\":4317:4351   */\n    tag_281:\n        /* \"#utility.yul\":4370:4431   */\n      tag_282\n        /* \"#utility.yul\":4423:4430   */\n      dup10\n        /* \"#utility.yul\":4414:4420   */\n      dup4\n        /* \"#utility.yul\":4403:4412   */\n      dup11\n        /* \"#utility.yul\":4399:4421   */\n      add\n        /* \"#utility.yul\":4370:4431   */\n      tag_231\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4360:4431   */\n      swap5\n      pop\n        /* \"#utility.yul\":4484:4486   */\n      0x60\n        /* \"#utility.yul\":4473:4482   */\n      dup9\n        /* \"#utility.yul\":4469:4487   */\n      add\n        /* \"#utility.yul\":4456:4488   */\n      calldataload\n        /* \"#utility.yul\":4440:4488   */\n      swap2\n      pop\n        /* \"#utility.yul\":4513:4515   */\n      dup1\n        /* \"#utility.yul\":4503:4511   */\n      dup3\n        /* \"#utility.yul\":4500:4516   */\n      gt\n        /* \"#utility.yul\":4497:4533   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":4529:4530   */\n      0x00\n        /* \"#utility.yul\":4526:4527   */\n      dup1\n        /* \"#utility.yul\":4519:4531   */\n      revert\n        /* \"#utility.yul\":4497:4533   */\n    tag_283:\n        /* \"#utility.yul\":4552:4615   */\n      tag_284\n        /* \"#utility.yul\":4607:4614   */\n      dup10\n        /* \"#utility.yul\":4596:4604   */\n      dup4\n        /* \"#utility.yul\":4585:4594   */\n      dup11\n        /* \"#utility.yul\":4581:4605   */\n      add\n        /* \"#utility.yul\":4552:4615   */\n      tag_231\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4542:4615   */\n      swap4\n      pop\n        /* \"#utility.yul\":4668:4671   */\n      0x80\n        /* \"#utility.yul\":4657:4666   */\n      dup9\n        /* \"#utility.yul\":4653:4672   */\n      add\n        /* \"#utility.yul\":4640:4673   */\n      calldataload\n        /* \"#utility.yul\":4624:4673   */\n      swap2\n      pop\n        /* \"#utility.yul\":4698:4700   */\n      dup1\n        /* \"#utility.yul\":4688:4696   */\n      dup3\n        /* \"#utility.yul\":4685:4701   */\n      gt\n        /* \"#utility.yul\":4682:4718   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":4714:4715   */\n      0x00\n        /* \"#utility.yul\":4711:4712   */\n      dup1\n        /* \"#utility.yul\":4704:4716   */\n      revert\n        /* \"#utility.yul\":4682:4718   */\n    tag_285:\n      pop\n        /* \"#utility.yul\":4737:4788   */\n      tag_286\n        /* \"#utility.yul\":4780:4787   */\n      dup9\n        /* \"#utility.yul\":4769:4777   */\n      dup3\n        /* \"#utility.yul\":4758:4767   */\n      dup10\n        /* \"#utility.yul\":4754:4778   */\n      add\n        /* \"#utility.yul\":4737:4788   */\n      tag_232\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4727:4788   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3851:4794   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4799:5945   */\n    tag_38:\n        /* \"#utility.yul\":4917:4923   */\n      0x00\n        /* \"#utility.yul\":4925:4931   */\n      dup1\n        /* \"#utility.yul\":4978:4980   */\n      0x40\n        /* \"#utility.yul\":4966:4975   */\n      dup4\n        /* \"#utility.yul\":4957:4964   */\n      dup6\n        /* \"#utility.yul\":4953:4976   */\n      sub\n        /* \"#utility.yul\":4949:4981   */\n      slt\n        /* \"#utility.yul\":4946:4998   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":4994:4995   */\n      0x00\n        /* \"#utility.yul\":4991:4992   */\n      dup1\n        /* \"#utility.yul\":4984:4996   */\n      revert\n        /* \"#utility.yul\":4946:4998   */\n    tag_288:\n        /* \"#utility.yul\":5034:5043   */\n      dup3\n        /* \"#utility.yul\":5021:5044   */\n      calldataload\n        /* \"#utility.yul\":5063:5081   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5104:5106   */\n      dup1\n        /* \"#utility.yul\":5096:5102   */\n      dup3\n        /* \"#utility.yul\":5093:5107   */\n      gt\n        /* \"#utility.yul\":5090:5124   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5120:5121   */\n      0x00\n        /* \"#utility.yul\":5117:5118   */\n      dup1\n        /* \"#utility.yul\":5110:5122   */\n      revert\n        /* \"#utility.yul\":5090:5124   */\n    tag_289:\n        /* \"#utility.yul\":5158:5164   */\n      dup2\n        /* \"#utility.yul\":5147:5156   */\n      dup6\n        /* \"#utility.yul\":5143:5165   */\n      add\n        /* \"#utility.yul\":5133:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5203:5210   */\n      dup6\n        /* \"#utility.yul\":5196:5200   */\n      0x1f\n        /* \"#utility.yul\":5192:5194   */\n      dup4\n        /* \"#utility.yul\":5188:5201   */\n      add\n        /* \"#utility.yul\":5184:5211   */\n      slt\n        /* \"#utility.yul\":5174:5229   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":5225:5226   */\n      0x00\n        /* \"#utility.yul\":5222:5223   */\n      dup1\n        /* \"#utility.yul\":5215:5227   */\n      revert\n        /* \"#utility.yul\":5174:5229   */\n    tag_290:\n        /* \"#utility.yul\":5261:5263   */\n      dup2\n        /* \"#utility.yul\":5248:5264   */\n      calldataload\n        /* \"#utility.yul\":5283:5287   */\n      0x20\n        /* \"#utility.yul\":5307:5367   */\n      tag_291\n        /* \"#utility.yul\":5323:5366   */\n      tag_266\n        /* \"#utility.yul\":5363:5365   */\n      dup4\n        /* \"#utility.yul\":5323:5366   */\n      tag_230\n      jump\t// in\n        /* \"#utility.yul\":5307:5367   */\n    tag_291:\n        /* \"#utility.yul\":5401:5416   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":5483:5484   */\n      0x05\n        /* \"#utility.yul\":5479:5489   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":5471:5490   */\n      dup5\n      add\n        /* \"#utility.yul\":5467:5495   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":5432:5444   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5507:5526   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5504:5543   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":5539:5540   */\n      0x00\n        /* \"#utility.yul\":5536:5537   */\n      dup1\n        /* \"#utility.yul\":5529:5541   */\n      revert\n        /* \"#utility.yul\":5504:5543   */\n    tag_293:\n        /* \"#utility.yul\":5563:5574   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5583:5731   */\n    tag_294:\n        /* \"#utility.yul\":5599:5605   */\n      dup4\n        /* \"#utility.yul\":5594:5597   */\n      dup7\n        /* \"#utility.yul\":5591:5606   */\n      lt\n        /* \"#utility.yul\":5583:5731   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":5665:5688   */\n      tag_297\n        /* \"#utility.yul\":5684:5687   */\n      dup7\n        /* \"#utility.yul\":5665:5688   */\n      tag_226\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5653:5689   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5616:5628   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5709:5721   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5583:5731   */\n      jump(tag_294)\n    tag_296:\n        /* \"#utility.yul\":5750:5755   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5793:5811   */\n      dup7\n      add\n        /* \"#utility.yul\":5780:5812   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5824:5840   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5821:5857   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":5853:5854   */\n      0x00\n        /* \"#utility.yul\":5850:5851   */\n      dup1\n        /* \"#utility.yul\":5843:5855   */\n      revert\n        /* \"#utility.yul\":5821:5857   */\n    tag_298:\n      pop\n        /* \"#utility.yul\":5876:5939   */\n      tag_299\n        /* \"#utility.yul\":5931:5938   */\n      dup6\n        /* \"#utility.yul\":5920:5928   */\n      dup3\n        /* \"#utility.yul\":5909:5918   */\n      dup7\n        /* \"#utility.yul\":5905:5929   */\n      add\n        /* \"#utility.yul\":5876:5939   */\n      tag_231\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":5866:5939   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4799:5945   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5950:6385   */\n    tag_233:\n        /* \"#utility.yul\":6003:6006   */\n      0x00\n        /* \"#utility.yul\":6041:6046   */\n      dup2\n        /* \"#utility.yul\":6035:6047   */\n      mload\n        /* \"#utility.yul\":6068:6074   */\n      dup1\n        /* \"#utility.yul\":6063:6066   */\n      dup5\n        /* \"#utility.yul\":6056:6075   */\n      mstore\n        /* \"#utility.yul\":6094:6098   */\n      0x20\n        /* \"#utility.yul\":6123:6125   */\n      dup1\n        /* \"#utility.yul\":6118:6121   */\n      dup6\n        /* \"#utility.yul\":6114:6126   */\n      add\n        /* \"#utility.yul\":6107:6126   */\n      swap5\n      pop\n        /* \"#utility.yul\":6160:6162   */\n      dup1\n        /* \"#utility.yul\":6153:6158   */\n      dup5\n        /* \"#utility.yul\":6149:6163   */\n      add\n        /* \"#utility.yul\":6181:6182   */\n      0x00\n        /* \"#utility.yul\":6191:6360   */\n    tag_301:\n        /* \"#utility.yul\":6205:6211   */\n      dup4\n        /* \"#utility.yul\":6202:6203   */\n      dup2\n        /* \"#utility.yul\":6199:6212   */\n      lt\n        /* \"#utility.yul\":6191:6360   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":6266:6279   */\n      dup2\n      mload\n        /* \"#utility.yul\":6254:6280   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6300:6312   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6335:6350   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6220:6229   */\n      add\n        /* \"#utility.yul\":6191:6360   */\n      jump(tag_301)\n    tag_303:\n      pop\n        /* \"#utility.yul\":6376:6379   */\n      swap5\n      swap6\n        /* \"#utility.yul\":5950:6385   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6390:6651   */\n    tag_41:\n        /* \"#utility.yul\":6569:6571   */\n      0x20\n        /* \"#utility.yul\":6558:6567   */\n      dup2\n        /* \"#utility.yul\":6551:6572   */\n      mstore\n        /* \"#utility.yul\":6532:6536   */\n      0x00\n        /* \"#utility.yul\":6589:6645   */\n      tag_246\n        /* \"#utility.yul\":6641:6643   */\n      0x20\n        /* \"#utility.yul\":6630:6639   */\n      dup4\n        /* \"#utility.yul\":6626:6644   */\n      add\n        /* \"#utility.yul\":6618:6624   */\n      dup5\n        /* \"#utility.yul\":6589:6645   */\n      tag_233\n      jump\t// in\n        /* \"#utility.yul\":6656:7003   */\n    tag_50:\n        /* \"#utility.yul\":6721:6727   */\n      0x00\n        /* \"#utility.yul\":6729:6735   */\n      dup1\n        /* \"#utility.yul\":6782:6784   */\n      0x40\n        /* \"#utility.yul\":6770:6779   */\n      dup4\n        /* \"#utility.yul\":6761:6768   */\n      dup6\n        /* \"#utility.yul\":6757:6780   */\n      sub\n        /* \"#utility.yul\":6753:6785   */\n      slt\n        /* \"#utility.yul\":6750:6802   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":6798:6799   */\n      0x00\n        /* \"#utility.yul\":6795:6796   */\n      dup1\n        /* \"#utility.yul\":6788:6800   */\n      revert\n        /* \"#utility.yul\":6750:6802   */\n    tag_307:\n        /* \"#utility.yul\":6821:6850   */\n      tag_308\n        /* \"#utility.yul\":6840:6849   */\n      dup4\n        /* \"#utility.yul\":6821:6850   */\n      tag_226\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":6811:6850   */\n      swap2\n      pop\n        /* \"#utility.yul\":6900:6902   */\n      0x20\n        /* \"#utility.yul\":6889:6898   */\n      dup4\n        /* \"#utility.yul\":6885:6903   */\n      add\n        /* \"#utility.yul\":6872:6904   */\n      calldataload\n        /* \"#utility.yul\":6947:6952   */\n      dup1\n        /* \"#utility.yul\":6940:6953   */\n      iszero\n        /* \"#utility.yul\":6933:6954   */\n      iszero\n        /* \"#utility.yul\":6926:6931   */\n      dup2\n        /* \"#utility.yul\":6923:6955   */\n      eq\n        /* \"#utility.yul\":6913:6973   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":6969:6970   */\n      0x00\n        /* \"#utility.yul\":6966:6967   */\n      dup1\n        /* \"#utility.yul\":6959:6971   */\n      revert\n        /* \"#utility.yul\":6913:6973   */\n    tag_309:\n        /* \"#utility.yul\":6992:6997   */\n      dup1\n        /* \"#utility.yul\":6982:6997   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6656:7003   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7008:7268   */\n    tag_54:\n        /* \"#utility.yul\":7076:7082   */\n      0x00\n        /* \"#utility.yul\":7084:7090   */\n      dup1\n        /* \"#utility.yul\":7137:7139   */\n      0x40\n        /* \"#utility.yul\":7125:7134   */\n      dup4\n        /* \"#utility.yul\":7116:7123   */\n      dup6\n        /* \"#utility.yul\":7112:7135   */\n      sub\n        /* \"#utility.yul\":7108:7140   */\n      slt\n        /* \"#utility.yul\":7105:7157   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":7153:7154   */\n      0x00\n        /* \"#utility.yul\":7150:7151   */\n      dup1\n        /* \"#utility.yul\":7143:7155   */\n      revert\n        /* \"#utility.yul\":7105:7157   */\n    tag_311:\n        /* \"#utility.yul\":7176:7205   */\n      tag_312\n        /* \"#utility.yul\":7195:7204   */\n      dup4\n        /* \"#utility.yul\":7176:7205   */\n      tag_226\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7166:7205   */\n      swap2\n      pop\n        /* \"#utility.yul\":7224:7262   */\n      tag_313\n        /* \"#utility.yul\":7258:7260   */\n      0x20\n        /* \"#utility.yul\":7247:7256   */\n      dup5\n        /* \"#utility.yul\":7243:7261   */\n      add\n        /* \"#utility.yul\":7224:7262   */\n      tag_226\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7214:7262   */\n      swap1\n      pop\n        /* \"#utility.yul\":7008:7268   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7273:7879   */\n    tag_59:\n        /* \"#utility.yul\":7377:7383   */\n      0x00\n        /* \"#utility.yul\":7385:7391   */\n      dup1\n        /* \"#utility.yul\":7393:7399   */\n      0x00\n        /* \"#utility.yul\":7401:7407   */\n      dup1\n        /* \"#utility.yul\":7409:7415   */\n      0x00\n        /* \"#utility.yul\":7462:7465   */\n      0xa0\n        /* \"#utility.yul\":7450:7459   */\n      dup7\n        /* \"#utility.yul\":7441:7448   */\n      dup9\n        /* \"#utility.yul\":7437:7460   */\n      sub\n        /* \"#utility.yul\":7433:7466   */\n      slt\n        /* \"#utility.yul\":7430:7483   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":7479:7480   */\n      0x00\n        /* \"#utility.yul\":7476:7477   */\n      dup1\n        /* \"#utility.yul\":7469:7481   */\n      revert\n        /* \"#utility.yul\":7430:7483   */\n    tag_315:\n        /* \"#utility.yul\":7502:7531   */\n      tag_316\n        /* \"#utility.yul\":7521:7530   */\n      dup7\n        /* \"#utility.yul\":7502:7531   */\n      tag_226\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":7492:7531   */\n      swap5\n      pop\n        /* \"#utility.yul\":7550:7588   */\n      tag_317\n        /* \"#utility.yul\":7584:7586   */\n      0x20\n        /* \"#utility.yul\":7573:7582   */\n      dup8\n        /* \"#utility.yul\":7569:7587   */\n      add\n        /* \"#utility.yul\":7550:7588   */\n      tag_226\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":7540:7588   */\n      swap4\n      pop\n        /* \"#utility.yul\":7635:7637   */\n      0x40\n        /* \"#utility.yul\":7624:7633   */\n      dup7\n        /* \"#utility.yul\":7620:7638   */\n      add\n        /* \"#utility.yul\":7607:7639   */\n      calldataload\n        /* \"#utility.yul\":7597:7639   */\n      swap3\n      pop\n        /* \"#utility.yul\":7686:7688   */\n      0x60\n        /* \"#utility.yul\":7675:7684   */\n      dup7\n        /* \"#utility.yul\":7671:7689   */\n      add\n        /* \"#utility.yul\":7658:7690   */\n      calldataload\n        /* \"#utility.yul\":7648:7690   */\n      swap2\n      pop\n        /* \"#utility.yul\":7741:7744   */\n      0x80\n        /* \"#utility.yul\":7730:7739   */\n      dup7\n        /* \"#utility.yul\":7726:7745   */\n      add\n        /* \"#utility.yul\":7713:7746   */\n      calldataload\n        /* \"#utility.yul\":7769:7787   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7761:7767   */\n      dup2\n        /* \"#utility.yul\":7758:7788   */\n      gt\n        /* \"#utility.yul\":7755:7805   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":7801:7802   */\n      0x00\n        /* \"#utility.yul\":7798:7799   */\n      dup1\n        /* \"#utility.yul\":7791:7803   */\n      revert\n        /* \"#utility.yul\":7755:7805   */\n    tag_318:\n        /* \"#utility.yul\":7824:7873   */\n      tag_286\n        /* \"#utility.yul\":7865:7872   */\n      dup9\n        /* \"#utility.yul\":7856:7862   */\n      dup3\n        /* \"#utility.yul\":7845:7854   */\n      dup10\n        /* \"#utility.yul\":7841:7863   */\n      add\n        /* \"#utility.yul\":7824:7873   */\n      tag_232\n      jump\t// in\n        /* \"#utility.yul\":7884:8264   */\n    tag_69:\n        /* \"#utility.yul\":7963:7964   */\n      0x01\n        /* \"#utility.yul\":7959:7971   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8006:8018   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8027:8088   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":8081:8085   */\n      0x7f\n        /* \"#utility.yul\":8073:8079   */\n      dup3\n        /* \"#utility.yul\":8069:8086   */\n      and\n        /* \"#utility.yul\":8059:8086   */\n      swap2\n      pop\n        /* \"#utility.yul\":8027:8088   */\n    tag_321:\n        /* \"#utility.yul\":8134:8136   */\n      0x20\n        /* \"#utility.yul\":8126:8132   */\n      dup3\n        /* \"#utility.yul\":8123:8137   */\n      lt\n        /* \"#utility.yul\":8103:8121   */\n      dup2\n        /* \"#utility.yul\":8100:8138   */\n      sub\n        /* \"#utility.yul\":8097:8258   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":8180:8190   */\n      0x4e487b71\n        /* \"#utility.yul\":8175:8178   */\n      0xe0\n        /* \"#utility.yul\":8171:8191   */\n      shl\n        /* \"#utility.yul\":8168:8169   */\n      0x00\n        /* \"#utility.yul\":8161:8192   */\n      mstore\n        /* \"#utility.yul\":8215:8219   */\n      0x22\n        /* \"#utility.yul\":8212:8213   */\n      0x04\n        /* \"#utility.yul\":8205:8220   */\n      mstore\n        /* \"#utility.yul\":8243:8247   */\n      0x24\n        /* \"#utility.yul\":8240:8241   */\n      0x00\n        /* \"#utility.yul\":8233:8248   */\n      revert\n        /* \"#utility.yul\":8097:8258   */\n    tag_322:\n      pop\n        /* \"#utility.yul\":7884:8264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8831:8958   */\n    tag_102:\n        /* \"#utility.yul\":8892:8902   */\n      0x4e487b71\n        /* \"#utility.yul\":8887:8890   */\n      0xe0\n        /* \"#utility.yul\":8883:8903   */\n      shl\n        /* \"#utility.yul\":8880:8881   */\n      0x00\n        /* \"#utility.yul\":8873:8904   */\n      mstore\n        /* \"#utility.yul\":8923:8927   */\n      0x32\n        /* \"#utility.yul\":8920:8921   */\n      0x04\n        /* \"#utility.yul\":8913:8928   */\n      mstore\n        /* \"#utility.yul\":8947:8951   */\n      0x24\n        /* \"#utility.yul\":8944:8945   */\n      0x00\n        /* \"#utility.yul\":8937:8952   */\n      revert\n        /* \"#utility.yul\":8963:9090   */\n    tag_234:\n        /* \"#utility.yul\":9024:9034   */\n      0x4e487b71\n        /* \"#utility.yul\":9019:9022   */\n      0xe0\n        /* \"#utility.yul\":9015:9035   */\n      shl\n        /* \"#utility.yul\":9012:9013   */\n      0x00\n        /* \"#utility.yul\":9005:9036   */\n      mstore\n        /* \"#utility.yul\":9055:9059   */\n      0x11\n        /* \"#utility.yul\":9052:9053   */\n      0x04\n        /* \"#utility.yul\":9045:9060   */\n      mstore\n        /* \"#utility.yul\":9079:9083   */\n      0x24\n        /* \"#utility.yul\":9076:9077   */\n      0x00\n        /* \"#utility.yul\":9069:9084   */\n      revert\n        /* \"#utility.yul\":9095:9230   */\n    tag_104:\n        /* \"#utility.yul\":9134:9137   */\n      0x00\n        /* \"#utility.yul\":9155:9172   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9152:9195   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":9175:9193   */\n      tag_329\n      tag_234\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":9222:9223   */\n      0x01\n        /* \"#utility.yul\":9211:9224   */\n      add\n      swap1\n        /* \"#utility.yul\":9095:9230   */\n      jump\t// out\n        /* \"#utility.yul\":9865:9990   */\n    tag_180:\n        /* \"#utility.yul\":9930:9939   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9951:9961   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9948:9984   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":9964:9982   */\n      tag_61\n      tag_234\n      jump\t// in\n        /* \"#utility.yul\":9995:10460   */\n    tag_188:\n        /* \"#utility.yul\":10252:10254   */\n      0x40\n        /* \"#utility.yul\":10241:10250   */\n      dup2\n        /* \"#utility.yul\":10234:10255   */\n      mstore\n        /* \"#utility.yul\":10215:10219   */\n      0x00\n        /* \"#utility.yul\":10278:10334   */\n      tag_336\n        /* \"#utility.yul\":10330:10332   */\n      0x40\n        /* \"#utility.yul\":10319:10328   */\n      dup4\n        /* \"#utility.yul\":10315:10333   */\n      add\n        /* \"#utility.yul\":10307:10313   */\n      dup6\n        /* \"#utility.yul\":10278:10334   */\n      tag_233\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":10382:10391   */\n      dup3\n        /* \"#utility.yul\":10374:10380   */\n      dup2\n        /* \"#utility.yul\":10370:10392   */\n      sub\n        /* \"#utility.yul\":10365:10367   */\n      0x20\n        /* \"#utility.yul\":10354:10363   */\n      dup5\n        /* \"#utility.yul\":10350:10368   */\n      add\n        /* \"#utility.yul\":10343:10393   */\n      mstore\n        /* \"#utility.yul\":10410:10454   */\n      tag_337\n        /* \"#utility.yul\":10447:10453   */\n      dup2\n        /* \"#utility.yul\":10439:10445   */\n      dup6\n        /* \"#utility.yul\":10410:10454   */\n      tag_233\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10402:10454   */\n      swap6\n        /* \"#utility.yul\":9995:10460   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10465:11026   */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10762:10777   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":10744:10778   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10814:10829   */\n      dup6\n      and\n        /* \"#utility.yul\":10809:10811   */\n      0x20\n        /* \"#utility.yul\":10794:10812   */\n      dup3\n      add\n        /* \"#utility.yul\":10787:10830   */\n      mstore\n        /* \"#utility.yul\":10861:10863   */\n      0x40\n        /* \"#utility.yul\":10846:10864   */\n      dup2\n      add\n        /* \"#utility.yul\":10839:10873   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10904:10906   */\n      0x60\n        /* \"#utility.yul\":10889:10907   */\n      dup2\n      add\n        /* \"#utility.yul\":10882:10916   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10724:10727   */\n      0xa0\n        /* \"#utility.yul\":10947:10950   */\n      0x80\n        /* \"#utility.yul\":10932:10951   */\n      dup3\n      add\n        /* \"#utility.yul\":10925:10957   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10687:10691   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10974:11020   */\n      tag_339\n      swap1\n        /* \"#utility.yul\":11000:11019   */\n      dup4\n      add\n        /* \"#utility.yul\":10992:10998   */\n      dup5\n        /* \"#utility.yul\":10974:11020   */\n      tag_228\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10966:11020   */\n      swap8\n        /* \"#utility.yul\":10465:11026   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11031:11280   */\n    tag_195:\n        /* \"#utility.yul\":11100:11106   */\n      0x00\n        /* \"#utility.yul\":11153:11155   */\n      0x20\n        /* \"#utility.yul\":11141:11150   */\n      dup3\n        /* \"#utility.yul\":11132:11139   */\n      dup5\n        /* \"#utility.yul\":11128:11151   */\n      sub\n        /* \"#utility.yul\":11124:11156   */\n      slt\n        /* \"#utility.yul\":11121:11173   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":11169:11170   */\n      0x00\n        /* \"#utility.yul\":11166:11167   */\n      dup1\n        /* \"#utility.yul\":11159:11171   */\n      revert\n        /* \"#utility.yul\":11121:11173   */\n    tag_341:\n        /* \"#utility.yul\":11201:11210   */\n      dup2\n        /* \"#utility.yul\":11195:11211   */\n      mload\n        /* \"#utility.yul\":11220:11250   */\n      tag_246\n        /* \"#utility.yul\":11244:11249   */\n      dup2\n        /* \"#utility.yul\":11220:11250   */\n      tag_227\n      jump\t// in\n        /* \"#utility.yul\":11285:12112   */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11682:11697   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":11664:11698   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11734:11749   */\n      dup6\n      and\n        /* \"#utility.yul\":11729:11731   */\n      0x20\n        /* \"#utility.yul\":11714:11732   */\n      dup3\n      add\n        /* \"#utility.yul\":11707:11750   */\n      mstore\n        /* \"#utility.yul\":11644:11647   */\n      0xa0\n        /* \"#utility.yul\":11781:11783   */\n      0x40\n        /* \"#utility.yul\":11766:11784   */\n      dup3\n      add\n        /* \"#utility.yul\":11759:11790   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11607:11611   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11813:11870   */\n      tag_344\n      swap1\n        /* \"#utility.yul\":11850:11869   */\n      dup4\n      add\n        /* \"#utility.yul\":11842:11848   */\n      dup7\n        /* \"#utility.yul\":11813:11870   */\n      tag_233\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":11918:11927   */\n      dup3\n        /* \"#utility.yul\":11910:11916   */\n      dup2\n        /* \"#utility.yul\":11906:11928   */\n      sub\n        /* \"#utility.yul\":11901:11903   */\n      0x60\n        /* \"#utility.yul\":11890:11899   */\n      dup5\n        /* \"#utility.yul\":11886:11904   */\n      add\n        /* \"#utility.yul\":11879:11929   */\n      mstore\n        /* \"#utility.yul\":11952:11996   */\n      tag_345\n        /* \"#utility.yul\":11989:11995   */\n      dup2\n        /* \"#utility.yul\":11981:11987   */\n      dup7\n        /* \"#utility.yul\":11952:11996   */\n      tag_233\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11938:11996   */\n      swap1\n      pop\n        /* \"#utility.yul\":12045:12054   */\n      dup3\n        /* \"#utility.yul\":12037:12043   */\n      dup2\n        /* \"#utility.yul\":12033:12055   */\n      sub\n        /* \"#utility.yul\":12027:12030   */\n      0x80\n        /* \"#utility.yul\":12016:12025   */\n      dup5\n        /* \"#utility.yul\":12012:12031   */\n      add\n        /* \"#utility.yul\":12005:12056   */\n      mstore\n        /* \"#utility.yul\":12073:12106   */\n      tag_346\n        /* \"#utility.yul\":12099:12105   */\n      dup2\n        /* \"#utility.yul\":12091:12097   */\n      dup6\n        /* \"#utility.yul\":12073:12106   */\n      tag_228\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":12065:12106   */\n      swap9\n        /* \"#utility.yul\":11285:12112   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dc417623179b482c73464040cdc61c8e608e801ea9047c4976ffe2bd62ed7acf64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_6055": {
									"entryPoint": null,
									"id": 6055,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setURI_814": {
									"entryPoint": 61,
									"id": 814,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 79,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2732:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:17"
															},
															"nodeType": "YulIf",
															"src": "289:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:17"
															},
															"nodeType": "YulIf",
															"src": "359:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:17",
														"type": ""
													}
												],
												"src": "146:380:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:17",
														"type": ""
													}
												],
												"src": "531:121:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:17"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:17"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:17",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:17"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:17"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:17",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:17"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:17"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:17"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:17"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:17"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:17"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:17"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:17",
																			"statements": []
																		},
																		"src": "1104:82:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:17"
															},
															"nodeType": "YulIf",
															"src": "748:448:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:17",
														"type": ""
													}
												],
												"src": "657:545:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:17",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:17"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:17",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:17"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:17",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:17",
														"type": ""
													}
												],
												"src": "1207:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:17"
															},
															"nodeType": "YulIf",
															"src": "1517:56:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:17"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:17"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:17",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:17"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:17"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:17"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:17"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:17",
																					"statements": []
																				},
																				"src": "1964:236:17"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:17",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:17",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:17"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:17"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:17"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:17",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:17"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:17"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:17",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:17"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:17"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:17"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:17"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:17"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:17"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:17"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:17",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:17"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:17"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:17"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:17"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:17",
														"type": ""
													}
												],
												"src": "1378:1352:17"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051806060016040528060268152602001620012ff6026913962000036816200003d565b50620001b7565b60026200004b8282620000ef565b5050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200007857607f821691505b6020821081036200009757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620000ea575f81815260208120601f850160051c81016020861015620000c55750805b601f850160051c820191505b81811015620000e657828155600101620000d1565b5050505b505050565b81516001600160401b038111156200010b576200010b6200004f565b62000123816200011c845462000063565b846200009d565b602080601f83116001811462000159575f8415620001415750858301515b5f19600386901b1c1916600185901b178555620000e6565b5f85815260208120601f198616915b82811015620001895788860151825594840194600190910190840162000168565b5085821015620001a757878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b61113a80620001c55f395ff3fe608060405234801561000f575f80fd5b506004361061009a575f3560e01c806375794a3c1161006357806375794a3c1461013c578063a0712d6814610145578063a22cb46514610158578063e985e9c51461016b578063f242432a1461017e575f80fd5b8062fdd58e1461009e57806301ffc9a7146100c45780630e89341c146100e75780632eb2c2d6146101075780634e1273f41461011c575b5f80fd5b6100b16100ac366004610b14565b610191565b6040519081526020015b60405180910390f35b6100d76100d2366004610b54565b6101b8565b60405190151581526020016100bb565b6100fa6100f5366004610b76565b610207565b6040516100bb9190610bd0565b61011a610115366004610d1e565b610299565b005b61012f61012a366004610dc1565b610305565b6040516100bb9190610eb4565b6100b160035481565b61011a610153366004610b76565b6103d8565b61011a610166366004610ec6565b61040b565b6100d7610179366004610eff565b61041a565b61011a61018c366004610f30565b610447565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b14806101e857506001600160e01b031982166303a24d0760e21b145b806101b257506301ffc9a760e01b6001600160e01b03198316146101b2565b60606002805461021690610f90565b80601f016020809104026020016040519081016040528092919081815260200182805461024290610f90565b801561028d5780601f106102645761010080835404028352916020019161028d565b820191905f5260205f20905b81548152906001019060200180831161027057829003601f168201915b50505050509050919050565b336001600160a01b03861681148015906102ba57506102b8868261041a565b155b156102f05760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6102fd86868686866104a6565b505050505050565b606081518351146103365781518351604051635b05999160e01b8152600481019290925260248201526044016102e7565b5f835167ffffffffffffffff81111561035157610351610be2565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b5090505f5b84518110156103d0576020808202860101516103a390602080840287010151610191565b8282815181106103b5576103b5610fc8565b60209081029190910101526103c981610ff0565b905061037f565b509392505050565b6103f4336003548360405180602001604052805f81525061050b565b60038054905f61040383610ff0565b919050555050565b610416338383610566565b5050565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b03861681148015906104685750610466868261041a565b155b156104995760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044016102e7565b6102fd86868686866105fa565b6001600160a01b0384166104cf57604051632bfa23e760e11b81525f60048201526024016102e7565b6001600160a01b0385166104f757604051626a0d4560e21b81525f60048201526024016102e7565b6105048585858585610686565b5050505050565b6001600160a01b03841661053457604051632bfa23e760e11b81525f60048201526024016102e7565b604080516001808252602082018690528183019081526060820185905260808201909252906102fd5f87848487610686565b6001600160a01b03821661058e5760405162ced3e160e81b81525f60048201526024016102e7565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661062357604051632bfa23e760e11b81525f60048201526024016102e7565b6001600160a01b03851661064b57604051626a0d4560e21b81525f60048201526024016102e7565b6040805160018082526020820186905281830190815260608201859052608082019092529061067d8787848487610686565b50505050505050565b610692858585856106d9565b6001600160a01b0384161561050457825133906001036106cb57602084810151908401516106c48389898585896108f1565b50506102fd565b6102fd818787878787610a12565b80518251146107085781518151604051635b05999160e01b8152600481019290925260248201526044016102e7565b335f5b8351811015610813576020818102858101820151908501909101516001600160a01b038816156107bc575f828152602081815260408083206001600160a01b038c16845290915290205481811015610796576040516303dee4c560e01b81526001600160a01b038a1660048201526024810182905260448101839052606481018490526084016102e7565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615610800575f828152602081815260408083206001600160a01b038b168452909152812080548392906107fa908490611008565b90915550505b50508061080c90610ff0565b905061070b565b5082516001036108935760208301515f906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610884929190918252602082015260400190565b60405180910390a45050610504565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516108e292919061101b565b60405180910390a45050505050565b6001600160a01b0384163b156102fd5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906109359089908990889088908890600401611048565b6020604051808303815f875af192505050801561096f575060408051601f3d908101601f1916820190925261096c9181019061108c565b60015b6109d6573d80801561099c576040519150601f19603f3d011682016040523d82523d5f602084013e6109a1565b606091505b5080515f036109ce57604051632bfa23e760e11b81526001600160a01b03861660048201526024016102e7565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b1461067d57604051632bfa23e760e11b81526001600160a01b03861660048201526024016102e7565b6001600160a01b0384163b156102fd5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a5690899089908890889088906004016110a7565b6020604051808303815f875af1925050508015610a90575060408051601f3d908101601f19168201909252610a8d9181019061108c565b60015b610abd573d80801561099c576040519150601f19603f3d011682016040523d82523d5f602084013e6109a1565b6001600160e01b0319811663bc197c8160e01b1461067d57604051632bfa23e760e11b81526001600160a01b03861660048201526024016102e7565b80356001600160a01b0381168114610b0f575f80fd5b919050565b5f8060408385031215610b25575f80fd5b610b2e83610af9565b946020939093013593505050565b6001600160e01b031981168114610b51575f80fd5b50565b5f60208284031215610b64575f80fd5b8135610b6f81610b3c565b9392505050565b5f60208284031215610b86575f80fd5b5035919050565b5f81518084525f5b81811015610bb157602081850181015186830182015201610b95565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610b6f6020830184610b8d565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c1f57610c1f610be2565b604052919050565b5f67ffffffffffffffff821115610c4057610c40610be2565b5060051b60200190565b5f82601f830112610c59575f80fd5b81356020610c6e610c6983610c27565b610bf6565b82815260059290921b84018101918181019086841115610c8c575f80fd5b8286015b84811015610ca75780358352918301918301610c90565b509695505050505050565b5f82601f830112610cc1575f80fd5b813567ffffffffffffffff811115610cdb57610cdb610be2565b610cee601f8201601f1916602001610bf6565b818152846020838601011115610d02575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215610d32575f80fd5b610d3b86610af9565b9450610d4960208701610af9565b9350604086013567ffffffffffffffff80821115610d65575f80fd5b610d7189838a01610c4a565b94506060880135915080821115610d86575f80fd5b610d9289838a01610c4a565b93506080880135915080821115610da7575f80fd5b50610db488828901610cb2565b9150509295509295909350565b5f8060408385031215610dd2575f80fd5b823567ffffffffffffffff80821115610de9575f80fd5b818501915085601f830112610dfc575f80fd5b81356020610e0c610c6983610c27565b82815260059290921b84018101918181019089841115610e2a575f80fd5b948201945b83861015610e4f57610e4086610af9565b82529482019490820190610e2f565b96505086013592505080821115610e64575f80fd5b50610e7185828601610c4a565b9150509250929050565b5f8151808452602080850194508084015f5b83811015610ea957815187529582019590820190600101610e8d565b509495945050505050565b602081525f610b6f6020830184610e7b565b5f8060408385031215610ed7575f80fd5b610ee083610af9565b915060208301358015158114610ef4575f80fd5b809150509250929050565b5f8060408385031215610f10575f80fd5b610f1983610af9565b9150610f2760208401610af9565b90509250929050565b5f805f805f60a08688031215610f44575f80fd5b610f4d86610af9565b9450610f5b60208701610af9565b93506040860135925060608601359150608086013567ffffffffffffffff811115610f84575f80fd5b610db488828901610cb2565b600181811c90821680610fa457607f821691505b602082108103610fc257634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f6001820161100157611001610fdc565b5060010190565b808201808211156101b2576101b2610fdc565b604081525f61102d6040830185610e7b565b828103602084015261103f8185610e7b565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f9061108190830184610b8d565b979650505050505050565b5f6020828403121561109c575f80fd5b8151610b6f81610b3c565b6001600160a01b0386811682528516602082015260a0604082018190525f906110d290830186610e7b565b82810360608401526110e48186610e7b565b905082810360808401526110f88185610b8d565b9897505050505050505056fea2646970667358221220dc417623179b482c73464040cdc61c8e608e801ea9047c4976ffe2bd62ed7acf64736f6c6343000814003368747470733a2f2f6578616d706c652e636f6d2f6170692f6974656d2f7b69647d2e6a736f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x12FF PUSH1 0x26 SWAP2 CODECOPY PUSH3 0x36 DUP2 PUSH3 0x3D JUMP JUMPDEST POP PUSH3 0x1B7 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x4B DUP3 DUP3 PUSH3 0xEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x78 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0xC5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xE6 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xD1 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x10B JUMPI PUSH3 0x10B PUSH3 0x4F JUMP JUMPDEST PUSH3 0x123 DUP2 PUSH3 0x11C DUP5 SLOAD PUSH3 0x63 JUMP JUMPDEST DUP5 PUSH3 0x9D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x159 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x141 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0xE6 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x189 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x168 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x1A7 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x113A DUP1 PUSH3 0x1C5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75794A3C GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB JUMP JUMPDEST PUSH2 0xFA PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0xB1 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x11A PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x1E8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x1B2 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x216 SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x242 SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x264 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x270 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x2BA JUMPI POP PUSH2 0x2B8 DUP7 DUP3 PUSH2 0x41A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FD DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x4A6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x336 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x351 JUMPI PUSH2 0x351 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x37A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x3A3 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x191 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3B5 JUMPI PUSH2 0x3B5 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x3C9 DUP2 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x37F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3F4 CALLER PUSH1 0x3 SLOAD DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x50B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x403 DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH2 0x416 CALLER DUP4 DUP4 PUSH2 0x566 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x468 JUMPI POP PUSH2 0x466 DUP7 DUP3 PUSH2 0x41A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x2FD DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x504 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x686 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x2FD PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x67D DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x686 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x692 DUP6 DUP6 DUP6 DUP6 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x504 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x6CB JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x6C4 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x8F1 JUMP JUMPDEST POP POP PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x2FD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA12 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x708 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2E7 JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x813 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x7BC JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x800 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7FA SWAP1 DUP5 SWAP1 PUSH2 0x1008 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 PUSH2 0x80C SWAP1 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x70B JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x893 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x884 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x504 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8E2 SWAP3 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x935 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x96F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x96C SWAP2 DUP2 ADD SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9D6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xA56 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA90 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA8D SWAP2 DUP2 ADD SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xABD JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB25 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2E DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB51 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB64 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB6F DUP2 PUSH2 0xB3C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB86 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBB1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xB95 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xB6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB8D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC1F JUMPI PUSH2 0xC1F PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC40 JUMPI PUSH2 0xC40 PUSH2 0xBE2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC59 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC6E PUSH2 0xC69 DUP4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xC8C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCA7 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xC90 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDB PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0xCEE PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xBF6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD02 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD32 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD3B DUP7 PUSH2 0xAF9 JUMP JUMPDEST SWAP5 POP PUSH2 0xD49 PUSH1 0x20 DUP8 ADD PUSH2 0xAF9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD65 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD71 DUP10 DUP4 DUP11 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD86 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD92 DUP10 DUP4 DUP11 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB4 DUP9 DUP3 DUP10 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDFC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE0C PUSH2 0xC69 DUP4 PUSH2 0xC27 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0xE2A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE40 DUP7 PUSH2 0xAF9 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE2F JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xE64 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE71 DUP6 DUP3 DUP7 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA9 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xE8D JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xB6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE7B JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEE0 DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF10 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF19 DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF27 PUSH1 0x20 DUP5 ADD PUSH2 0xAF9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF44 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4D DUP7 PUSH2 0xAF9 JUMP JUMPDEST SWAP5 POP PUSH2 0xF5B PUSH1 0x20 DUP8 ADD PUSH2 0xAF9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF84 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP9 DUP3 DUP10 ADD PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFC2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1001 JUMPI PUSH2 0x1001 PUSH2 0xFDC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x1B2 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x102D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE7B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x103F DUP2 DUP6 PUSH2 0xE7B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1081 SWAP1 DUP4 ADD DUP5 PUSH2 0xB8D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB6F DUP2 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x10D2 SWAP1 DUP4 ADD DUP7 PUSH2 0xE7B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x10E4 DUP2 DUP7 PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x10F8 DUP2 DUP6 PUSH2 0xB8D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC COINBASE PUSH23 0x23179B482C73464040CDC61C8E608E801EA9047C4976FF 0xE2 0xBD PUSH3 0xED7ACF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER PUSH9 0x747470733A2F2F6578 PUSH2 0x6D70 PUSH13 0x652E636F6D2F6170692F697465 PUSH14 0x2F7B69647D2E6A736F6E00000000 ",
							"sourceMap": "123:458:16:-:0;;;287:66;;;;;;;;;;1249:62:1;;;;;;;;;;;;;;;;;1291:13;1299:4;1291:7;:13::i;:::-;1249:62;123:458:16;;10290:86:1;10356:4;:13;10363:6;10356:4;:13;:::i;:::-;;10290:86;:::o;14:127:17:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:17;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:17;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:17;;;2580:26;2531:89;-1:-1:-1;;1335:1:17;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:17;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:17;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:17;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:17:o;:::-;123:458:16;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1052": {
									"entryPoint": null,
									"id": 1052,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_mint_866": {
									"entryPoint": 1291,
									"id": 866,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_2310": {
									"entryPoint": null,
									"id": 2310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_803": {
									"entryPoint": 1190,
									"id": 803,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_748": {
									"entryPoint": 1530,
									"id": 748,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1036": {
									"entryPoint": 1382,
									"id": 1036,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_682": {
									"entryPoint": 1670,
									"id": 682,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_602": {
									"entryPoint": 1753,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_326": {
									"entryPoint": 773,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_256": {
									"entryPoint": 401,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkOnERC1155BatchReceived_1387": {
									"entryPoint": 2578,
									"id": 1387,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@checkOnERC1155Received_1313": {
									"entryPoint": 2289,
									"id": 1313,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@isApprovedForAll_359": {
									"entryPoint": 1050,
									"id": 359,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_6072": {
									"entryPoint": 984,
									"id": 6072,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@nextTokenId_6048": {
									"entryPoint": null,
									"id": 6048,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_449": {
									"entryPoint": 665,
									"id": 449,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_403": {
									"entryPoint": 1095,
									"id": 403,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_342": {
									"entryPoint": 1035,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_228": {
									"entryPoint": 440,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2657": {
									"entryPoint": null,
									"id": 2657,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_2206": {
									"entryPoint": null,
									"id": 2206,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_2232": {
									"entryPoint": null,
									"id": 2232,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_239": {
									"entryPoint": 519,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4168,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3042,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12114:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:17"
															},
															"nodeType": "YulIf",
															"src": "111:70:17"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:17",
														"type": ""
													}
												],
												"src": "14:173:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:17"
															},
															"nodeType": "YulIf",
															"src": "289:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:17",
														"type": ""
													}
												],
												"src": "192:254:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:17",
														"type": ""
													}
												],
												"src": "451:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:17",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:17",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:17"
															},
															"nodeType": "YulIf",
															"src": "687:71:17"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:17",
														"type": ""
													}
												],
												"src": "633:131:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:17"
															},
															"nodeType": "YulIf",
															"src": "848:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:17",
														"type": ""
													}
												],
												"src": "769:245:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:17",
														"type": ""
													}
												],
												"src": "1019:187:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:17"
															},
															"nodeType": "YulIf",
															"src": "1291:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:17",
														"type": ""
													}
												],
												"src": "1211:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:373:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:17",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:17"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:17"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:17"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:17"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:17",
																"statements": []
															},
															"src": "1538:162:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:17"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1729:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:16:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:27:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1756:57:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1771:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1784:6:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1792:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1780:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1801:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1797:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1797:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:39:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:50:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:17",
														"type": ""
													}
												],
												"src": "1396:423:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:99:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1993:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:45:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1985:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1914:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1925:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1936:4:17",
														"type": ""
													}
												],
												"src": "1824:220:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2105:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2110:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2091:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2141:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2049:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:230:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2236:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2252:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2246:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2246:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2236:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2264:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2302:4:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2308:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2298:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2298:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2317:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2313:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2313:7:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2282:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2268:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2397:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2399:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2399:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2399:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2340:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2352:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2337:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2376:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2388:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2373:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2373:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2334:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:62:17"
															},
															"nodeType": "YulIf",
															"src": "2331:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2439:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2428:22:17"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2206:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2215:6:17",
														"type": ""
													}
												],
												"src": "2181:275:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2530:114:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2574:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2576:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2576:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2576:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2554:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2543:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:30:17"
															},
															"nodeType": "YulIf",
															"src": "2540:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2605:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2621:1:17",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2617:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2617:14:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2633:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2613:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:25:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2605:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2510:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2521:4:17",
														"type": ""
													}
												],
												"src": "2461:183:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2713:598:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2762:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2771:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2774:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2764:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2764:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2764:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2741:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2749:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2737:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2737:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2756:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2733:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2733:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2726:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:35:17"
															},
															"nodeType": "YulIf",
															"src": "2723:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2787:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2810:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2797:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:20:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2791:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2826:14:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2836:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2830:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2849:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2916:2:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "2876:39:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:43:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2860:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:60:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2853:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2929:16:17",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2942:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2933:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2961:3:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2966:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:15:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2978:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2989:3:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2994:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2985:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:12:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2978:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3006:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3028:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3040:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3043:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3036:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3036:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3024:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3024:23:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3049:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3020:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:32:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3010:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3080:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3092:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3082:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3082:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3082:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3067:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3075:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3064:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3064:15:17"
															},
															"nodeType": "YulIf",
															"src": "3061:35:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3105:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3120:6:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3128:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3116:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:15:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3109:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3196:86:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3217:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3235:3:17"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3222:12:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3222:17:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3210:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3210:30:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3210:30:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3253:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3264:3:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3269:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3260:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3260:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3253:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3151:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3156:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3164:23:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3166:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3177:3:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3182:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3173:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3173:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3166:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3144:3:17",
																"statements": []
															},
															"src": "3140:142:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3291:14:17",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3300:5:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3291:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2687:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2695:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2703:5:17",
														"type": ""
													}
												],
												"src": "2649:662:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3368:478:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3417:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3426:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3429:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3419:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3419:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3419:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3396:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3404:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3392:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3392:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3411:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3388:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3381:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3381:35:17"
															},
															"nodeType": "YulIf",
															"src": "3378:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3442:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3465:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3452:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:20:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3446:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3511:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3513:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3513:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3513:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3487:2:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3491:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3484:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:26:17"
															},
															"nodeType": "YulIf",
															"src": "3481:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3542:70:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3585:2:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3589:4:17",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3581:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3581:13:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3600:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3596:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3596:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3577:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3577:27:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3606:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3573:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3573:38:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3557:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:55:17"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "3546:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "3628:7:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3637:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3621:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3621:19:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3688:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3697:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3700:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3690:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3690:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3690:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3663:6:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3671:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3659:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3659:15:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3676:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3655:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3655:26:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3683:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3652:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:35:17"
															},
															"nodeType": "YulIf",
															"src": "3649:55:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "3730:7:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3739:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3726:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3726:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3750:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3758:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3746:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3746:17:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3765:2:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3713:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3713:55:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3713:55:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "3792:7:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3801:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3788:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3788:16:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3806:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3784:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3784:27:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3813:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3777:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:38:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3824:16:17",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "3833:7:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3824:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3342:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3350:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3358:5:17",
														"type": ""
													}
												],
												"src": "3316:530:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4048:746:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4095:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4104:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4107:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4097:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4097:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4097:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4069:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4078:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4065:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4065:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4090:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4061:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4061:33:17"
															},
															"nodeType": "YulIf",
															"src": "4058:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4120:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4149:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4130:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4120:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4168:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4201:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4212:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4197:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4197:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4178:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4178:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4168:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4225:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4256:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4267:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4252:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4252:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4239:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4239:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4229:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:28:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4290:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4284:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4335:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4344:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4347:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4337:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4337:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4337:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4323:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4331:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4320:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4320:14:17"
															},
															"nodeType": "YulIf",
															"src": "4317:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4360:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4403:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4414:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4399:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4399:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4423:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4370:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:61:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4440:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4473:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4484:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4469:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4469:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4456:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:32:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4444:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4517:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4526:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4529:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4519:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4519:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4519:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4503:8:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4513:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4500:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:16:17"
															},
															"nodeType": "YulIf",
															"src": "4497:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4542:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4585:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4596:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4581:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4581:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4607:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4552:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:63:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4624:49:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4657:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4668:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4653:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4653:19:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4640:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4640:33:17"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4628:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4702:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4711:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4714:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4704:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4704:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4704:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4688:8:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4698:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4685:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4685:16:17"
															},
															"nodeType": "YulIf",
															"src": "4682:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4727:61:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4758:9:17"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4769:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4754:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4754:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4780:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4737:16:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4737:51:17"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4727:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3993:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4005:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4013:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4021:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4029:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4037:6:17",
														"type": ""
													}
												],
												"src": "3851:943:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4936:1009:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4982:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4991:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4994:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4984:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4984:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4984:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4957:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4966:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4953:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4953:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4978:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4949:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:32:17"
															},
															"nodeType": "YulIf",
															"src": "4946:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5007:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5034:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5021:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5021:23:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5011:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5053:28:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5063:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5057:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5108:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5117:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5120:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5110:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5110:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5110:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5096:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5104:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5093:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5093:14:17"
															},
															"nodeType": "YulIf",
															"src": "5090:34:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5133:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5147:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5158:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5143:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:22:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5137:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5213:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5222:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5225:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5215:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5215:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5215:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5192:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5196:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5188:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5188:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5203:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5184:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5184:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5177:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5177:35:17"
															},
															"nodeType": "YulIf",
															"src": "5174:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5238:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5261:2:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5248:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5248:16:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5242:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5273:14:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5283:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5277:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5296:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5363:2:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "5323:39:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5323:43:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5307:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5307:60:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5300:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5376:16:17",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "5389:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "5380:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5408:3:17"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5413:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5401:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5401:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5401:15:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5425:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5436:3:17"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5441:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5432:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:12:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5425:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5453:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5475:2:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5483:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5486:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5479:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5479:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5471:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5471:19:17"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5492:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5467:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5467:28:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5457:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5527:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5536:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5539:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5529:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5529:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5529:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5510:6:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5518:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5507:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:19:17"
															},
															"nodeType": "YulIf",
															"src": "5504:39:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5552:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5567:2:17"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5571:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5563:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:11:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5556:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5639:92:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5660:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5684:3:17"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5665:18:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5665:23:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5653:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5653:36:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5653:36:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5702:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:17"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5718:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5709:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5709:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5702:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5594:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5599:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5591:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5591:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5607:23:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5609:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5620:3:17"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5625:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5616:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5616:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5609:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5587:3:17",
																"statements": []
															},
															"src": "5583:148:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5740:15:17",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "5750:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5740:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5764:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5797:9:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5808:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5793:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5793:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5780:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:32:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5768:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5841:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5850:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5853:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5843:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5843:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5843:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5827:8:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5837:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5824:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5824:16:17"
															},
															"nodeType": "YulIf",
															"src": "5821:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5866:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5909:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5920:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5905:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5931:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5876:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:63:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5866:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4894:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4905:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4917:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4925:6:17",
														"type": ""
													}
												],
												"src": "4799:1146:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6011:374:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6021:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6041:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6035:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6035:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6025:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6063:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6068:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6056:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6056:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6056:19:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6084:14:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6094:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6088:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6107:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6118:3:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6123:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6114:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6114:12:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6107:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6135:28:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6153:5:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6160:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6149:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6149:14:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6139:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6172:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6181:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6176:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6240:120:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6261:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6272:6:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6266:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6266:13:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6254:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6254:26:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6254:26:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6293:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6304:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6309:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6300:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6300:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6293:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6325:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6339:6:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6347:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6335:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6335:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6325:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6202:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6205:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6199:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6213:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6215:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6224:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6227:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6220:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6220:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6215:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6195:3:17",
																"statements": []
															},
															"src": "6191:169:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6369:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6376:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6369:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5988:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5995:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6003:3:17",
														"type": ""
													}
												],
												"src": "5950:435:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6541:110:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6558:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6569:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6551:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6551:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6581:64:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6618:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6630:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6641:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6626:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6626:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6589:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6589:56:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6581:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6510:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6521:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6532:4:17",
														"type": ""
													}
												],
												"src": "6390:261:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6740:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6786:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6795:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6798:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6788:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6788:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6788:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6761:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6770:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6757:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6757:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6782:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6753:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6753:32:17"
															},
															"nodeType": "YulIf",
															"src": "6750:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6811:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6840:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6821:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6821:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6811:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6859:45:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6889:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6900:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6885:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6885:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6872:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:32:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6863:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6957:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6966:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6969:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6959:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6959:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6959:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6926:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "6947:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "6940:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6940:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6933:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6933:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6923:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6923:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6916:40:17"
															},
															"nodeType": "YulIf",
															"src": "6913:60:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6982:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6992:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6982:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6698:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6709:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6721:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6729:6:17",
														"type": ""
													}
												],
												"src": "6656:347:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7095:173:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7141:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7150:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7153:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7143:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7143:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7143:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7116:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7125:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7112:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7112:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7108:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7108:32:17"
															},
															"nodeType": "YulIf",
															"src": "7105:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7166:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7195:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7176:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7176:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7166:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7214:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7247:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7258:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7243:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7243:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7224:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7224:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7214:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7053:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7064:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7076:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7084:6:17",
														"type": ""
													}
												],
												"src": "7008:260:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7420:459:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7467:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7476:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7479:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7469:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7469:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7469:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7441:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7450:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7437:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7437:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7462:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:33:17"
															},
															"nodeType": "YulIf",
															"src": "7430:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7492:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7521:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7502:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7492:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7540:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7573:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7584:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7569:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7569:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7550:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7550:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7540:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7597:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7624:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7635:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7620:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7620:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7607:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7607:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7597:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7648:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7675:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7686:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7671:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7671:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7658:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7658:32:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7648:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7699:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7730:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7741:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7726:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7726:19:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7713:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:33:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7703:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7789:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7798:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7801:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7791:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7791:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7791:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7761:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7769:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7758:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7758:30:17"
															},
															"nodeType": "YulIf",
															"src": "7755:50:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7814:59:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7845:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7856:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7841:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7841:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7865:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7824:16:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7824:49:17"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7814:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7354:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7365:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7377:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7385:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7393:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7401:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7409:6:17",
														"type": ""
													}
												],
												"src": "7273:606:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7939:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7949:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7963:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7966:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7959:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7959:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7949:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7980:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8010:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8016:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8006:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8006:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7984:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8057:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8059:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8073:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8081:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8069:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8069:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8059:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8037:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:26:17"
															},
															"nodeType": "YulIf",
															"src": "8027:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8147:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8168:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8175:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8180:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8171:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8171:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8161:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8161:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8161:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8212:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8215:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8205:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8205:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8205:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8240:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8243:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8233:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8233:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8103:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8126:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8134:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8123:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8123:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8100:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8100:38:17"
															},
															"nodeType": "YulIf",
															"src": "8097:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7919:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7928:6:17",
														"type": ""
													}
												],
												"src": "7884:380:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8398:175:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8408:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8420:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8431:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8416:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8416:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8408:4:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8443:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8461:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8466:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8457:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8457:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8470:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8453:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8453:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8447:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8488:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8503:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8511:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8499:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8499:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8481:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8481:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8481:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8535:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8546:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8531:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8531:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8555:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8563:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8551:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8551:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8524:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8524:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8524:43:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8359:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8370:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8378:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8389:4:17",
														"type": ""
													}
												],
												"src": "8269:304:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8707:119:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8717:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8729:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8740:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8725:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8725:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8717:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8759:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8770:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8752:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8752:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8752:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8797:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8808:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8793:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8793:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8813:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8786:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8786:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8786:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8668:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8679:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8687:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8698:4:17",
														"type": ""
													}
												],
												"src": "8578:248:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8863:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8880:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8887:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8892:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8883:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8883:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8873:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8873:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8873:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8920:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8923:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8913:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8913:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8913:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8944:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8947:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8937:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8937:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8937:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8831:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8995:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9012:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9019:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9024:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9015:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9015:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9005:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9005:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9005:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9052:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9045:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9045:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9045:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9076:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9079:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9069:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9069:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9069:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8963:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9142:88:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9173:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9175:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9175:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9175:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9158:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9169:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9165:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9165:6:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9155:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9155:17:17"
															},
															"nodeType": "YulIf",
															"src": "9152:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9204:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9215:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9222:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9211:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9211:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9204:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9124:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9134:3:17",
														"type": ""
													}
												],
												"src": "9095:135:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9336:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9346:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9358:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9369:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9354:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9354:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9346:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9388:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9403:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9419:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9424:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9415:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9415:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9428:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9411:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9411:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9399:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9399:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9381:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9381:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9381:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9305:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9316:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9327:4:17",
														"type": ""
													}
												],
												"src": "9235:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9628:232:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9638:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9650:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9661:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9646:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9646:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9638:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9681:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9696:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9712:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9717:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9708:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9708:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9721:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9704:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9704:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9692:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9692:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9674:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9674:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9674:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9745:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9756:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9741:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9741:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9761:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9734:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9734:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9734:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9788:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9799:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9784:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9784:18:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9804:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9777:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9777:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9777:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9831:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9842:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9827:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9827:18:17"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9847:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9820:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9820:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9573:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9584:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9592:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9600:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9608:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9619:4:17",
														"type": ""
													}
												],
												"src": "9443:417:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9913:77:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9923:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9934:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9937:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9930:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9930:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9923:3:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9962:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9964:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9964:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9964:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9954:1:17"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9957:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9951:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:10:17"
															},
															"nodeType": "YulIf",
															"src": "9948:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9896:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9899:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9905:3:17",
														"type": ""
													}
												],
												"src": "9865:125:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10224:236:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10241:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10252:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10234:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10234:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10234:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10264:70:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10307:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10319:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10330:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10315:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10315:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10278:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10278:56:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10268:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10354:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10365:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10350:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10350:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10374:6:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10382:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10370:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10370:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10343:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:50:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10343:50:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10402:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10439:6:17"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10447:6:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10410:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:44:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10402:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10185:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10196:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10204:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10215:4:17",
														"type": ""
													}
												],
												"src": "9995:465:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10696:330:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10706:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10724:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10729:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10720:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10720:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10733:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10716:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10716:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10710:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10751:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10766:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10774:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10762:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10762:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10744:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10744:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10744:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10798:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10809:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10794:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10794:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10818:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10826:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10814:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10787:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10787:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10787:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10850:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10861:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10846:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10846:18:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10866:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10839:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10839:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10839:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10893:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10904:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10889:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10889:18:17"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10909:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10882:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10882:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10882:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10936:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10947:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10932:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10932:19:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10953:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10925:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10925:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10925:32:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10966:54:17",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10992:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11004:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11015:3:17",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11000:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11000:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "10974:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10974:46:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10966:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10633:9:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10644:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10652:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10660:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10668:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10676:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10687:4:17",
														"type": ""
													}
												],
												"src": "10465:561:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11111:169:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11157:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11166:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11169:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11159:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11159:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11159:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11132:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11141:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11128:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11128:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11153:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11124:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11124:32:17"
															},
															"nodeType": "YulIf",
															"src": "11121:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11182:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11201:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11195:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11195:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11186:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11244:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "11220:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11220:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11220:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11259:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11269:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11259:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11077:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11088:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11100:6:17",
														"type": ""
													}
												],
												"src": "11031:249:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11616:496:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11626:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11644:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11649:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11640:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11640:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11653:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11636:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11636:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11630:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11671:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11686:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11694:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11682:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11682:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11664:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11664:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11664:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11718:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11729:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11714:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11714:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11738:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11746:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11734:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11734:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11707:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11707:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11707:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11770:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11781:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11766:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11766:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11786:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11759:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11759:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11759:31:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11799:71:17",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11842:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11854:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11865:3:17",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11850:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11850:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11813:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11813:57:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11803:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11890:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11901:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11886:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11886:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11910:6:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11918:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11906:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11906:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11879:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11879:50:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11879:50:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11938:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11981:6:17"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11989:6:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11952:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11952:44:17"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "11942:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12016:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12027:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12012:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12012:19:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "12037:6:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12045:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12033:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12033:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12005:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12005:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12005:51:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12065:41:17",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "12091:6:17"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "12099:6:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "12073:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12073:33:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12065:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11553:9:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11564:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11572:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11580:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11588:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11596:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11607:4:17",
														"type": ""
													}
												],
												"src": "11285:827:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75794A3C GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB JUMP JUMPDEST PUSH2 0xFA PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0xB1 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x11A PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x1E8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x1B2 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x216 SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x242 SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x264 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x270 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x2BA JUMPI POP PUSH2 0x2B8 DUP7 DUP3 PUSH2 0x41A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FD DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x4A6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x336 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x351 JUMPI PUSH2 0x351 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x37A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x3A3 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x191 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3B5 JUMPI PUSH2 0x3B5 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x3C9 DUP2 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x37F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3F4 CALLER PUSH1 0x3 SLOAD DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x50B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x403 DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH2 0x416 CALLER DUP4 DUP4 PUSH2 0x566 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x468 JUMPI POP PUSH2 0x466 DUP7 DUP3 PUSH2 0x41A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x2FD DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x504 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x686 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x2FD PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x67D DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x686 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x692 DUP6 DUP6 DUP6 DUP6 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x504 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x6CB JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x6C4 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x8F1 JUMP JUMPDEST POP POP PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x2FD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA12 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x708 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2E7 JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x813 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x7BC JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x800 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7FA SWAP1 DUP5 SWAP1 PUSH2 0x1008 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 PUSH2 0x80C SWAP1 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x70B JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x893 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x884 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x504 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8E2 SWAP3 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x935 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x96F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x96C SWAP2 DUP2 ADD SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9D6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xA56 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA90 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA8D SWAP2 DUP2 ADD SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xABD JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB25 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2E DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB51 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB64 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB6F DUP2 PUSH2 0xB3C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB86 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBB1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xB95 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xB6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB8D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC1F JUMPI PUSH2 0xC1F PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC40 JUMPI PUSH2 0xC40 PUSH2 0xBE2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC59 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC6E PUSH2 0xC69 DUP4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xC8C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCA7 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xC90 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDB PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0xCEE PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xBF6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD02 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD32 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD3B DUP7 PUSH2 0xAF9 JUMP JUMPDEST SWAP5 POP PUSH2 0xD49 PUSH1 0x20 DUP8 ADD PUSH2 0xAF9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD65 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD71 DUP10 DUP4 DUP11 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD86 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD92 DUP10 DUP4 DUP11 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB4 DUP9 DUP3 DUP10 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDFC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE0C PUSH2 0xC69 DUP4 PUSH2 0xC27 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0xE2A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE40 DUP7 PUSH2 0xAF9 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE2F JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xE64 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE71 DUP6 DUP3 DUP7 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA9 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xE8D JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xB6F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE7B JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEE0 DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF10 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF19 DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF27 PUSH1 0x20 DUP5 ADD PUSH2 0xAF9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF44 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4D DUP7 PUSH2 0xAF9 JUMP JUMPDEST SWAP5 POP PUSH2 0xF5B PUSH1 0x20 DUP8 ADD PUSH2 0xAF9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF84 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP9 DUP3 DUP10 ADD PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFC2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1001 JUMPI PUSH2 0x1001 PUSH2 0xFDC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x1B2 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x102D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE7B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x103F DUP2 DUP6 PUSH2 0xE7B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1081 SWAP1 DUP4 ADD DUP5 PUSH2 0xB8D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB6F DUP2 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x10D2 SWAP1 DUP4 ADD DUP7 PUSH2 0xE7B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x10E4 DUP2 DUP7 PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x10F8 DUP2 DUP6 PUSH2 0xB8D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC COINBASE PUSH23 0x23179B482C73464040CDC61C8E608E801EA9047C4976FF 0xE2 0xBD PUSH3 0xED7ACF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "123:458:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:132:1;;;;;;:::i;:::-;;:::i;:::-;;;597:25:17;;;585:2;570:18;2245:132:1;;;;;;;;1378:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:17;;1177:22;1159:41;;1147:2;1132:18;1378:305:1;1019:187:17;2082:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4012:429::-;;;;;;:::i;:::-;;:::i;:::-;;2534:552;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;167:26:16:-;;;;;;454:124;;;;;;:::i;:::-;;:::i;3154:144:1:-;;;;;;:::i;:::-;;:::i;3365:157::-;;;;;;:::i;:::-;;:::i;3589:351::-;;;;;;:::i;:::-;;:::i;2245:132::-;2322:7;2348:13;;;;;;;;;;;-1:-1:-1;;;;;2348:22:1;;;;;;;;;;2245:132;;;;;:::o;1378:305::-;1480:4;-1:-1:-1;;;;;;1515:41:1;;-1:-1:-1;;;1515:41:1;;:109;;-1:-1:-1;;;;;;;1572:52:1;;-1:-1:-1;;;1572:52:1;1515:109;:161;;;-1:-1:-1;;;;;;;;;;862:40:12;;;1640:36:1;763:146:12;2082:103:1;2142:13;2174:4;2167:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:103;;;:::o;4012:429::-;735:10:8;-1:-1:-1;;;;;4249:14:1;;;;;;;:49;;;4268:30;4285:4;4291:6;4268:16;:30::i;:::-;4267:31;4249:49;4245:129;;;4321:42;;-1:-1:-1;;;4321:42:1;;-1:-1:-1;;;;;8499:15:17;;;4321:42:1;;;8481:34:17;8551:15;;8531:18;;;8524:43;8416:18;;4321:42:1;;;;;;;;4245:129;4383:51;4406:4;4412:2;4416:3;4421:6;4429:4;4383:22;:51::i;:::-;4196:245;4012:429;;;;;:::o;2534:552::-;2658:16;2709:3;:10;2690:8;:15;:29;2686:121;;2768:10;;2780:15;;2742:54;;-1:-1:-1;;;2742:54:1;;;;;8752:25:17;;;;8793:18;;;8786:34;8725:18;;2742:54:1;8578:248:17;2686:121:1;2817:30;2864:8;:15;2850:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2850:30:1;;2817:63;;2896:9;2891:158;2915:8;:15;2911:1;:19;2891:158;;;16302:4:6;16293:14;;;16273:35;;;16267:42;2970:68:1;;16302:4:6;16293:14;;;16273:35;;;16267:42;2245:132:1;:::i;2970:68::-;2951:13;2965:1;2951:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2932:3;;;:::i;:::-;;;2891:158;;;-1:-1:-1;3066:13:1;2534:552;-1:-1:-1;;;2534:552:1:o;454:124:16:-;504:42;510:10;522:11;;535:6;504:42;;;;;;;;;;;;:5;:42::i;:::-;557:11;:13;;;:11;:13;;;:::i;:::-;;;;;;454:124;:::o;3154:144:1:-;3239:52;735:10:8;3272:8:1;3282;3239:18;:52::i;:::-;3154:144;;:::o;3365:157::-;-1:-1:-1;;;;;3478:27:1;;;3455:4;3478:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3365:157::o;3589:351::-;735:10:8;-1:-1:-1;;;;;3755:14:1;;;;;;;:49;;;3774:30;3791:4;3797:6;3774:16;:30::i;:::-;3773:31;3755:49;3751:129;;;3827:42;;-1:-1:-1;;;3827:42:1;;-1:-1:-1;;;;;8499:15:17;;;3827:42:1;;;8481:34:17;8551:15;;8531:18;;;8524:43;8416:18;;3827:42:1;8269:304:17;3751:129:1;3889:44;3907:4;3913:2;3917;3921:5;3928:4;3889:17;:44::i;9023:445::-;-1:-1:-1;;;;;9216:16:1;;9212:88;;9255:34;;-1:-1:-1;;;9255:34:1;;9286:1;9255:34;;;9381:51:17;9354:18;;9255:34:1;9235:203:17;9212:88:1;-1:-1:-1;;;;;9313:18:1;;9309:88;;9354:32;;-1:-1:-1;;;9354:32:1;;9383:1;9354:32;;;9381:51:17;9354:18;;:32:1;9235:203:17;9309:88:1;9406:55;9433:4;9439:2;9443:3;9448:6;9456:4;9406:26;:55::i;:::-;9023:445;;;;;:::o;10754:346::-;-1:-1:-1;;;;;10850:16:1;;10846:88;;10889:34;;-1:-1:-1;;;10889:34:1;;10920:1;10889:34;;;9381:51:17;9354:18;;10889:34:1;9235:203:17;10846:88:1;13974:4;13968:11;;14044:1;14029:17;;;14175:4;14163:17;;14156:35;;;14292:17;;;14322;;;13815:23;14359:17;;14352:35;;;14495:17;;;14482:31;;;13968:11;11032:61;-1:-1:-1;11071:2:1;13968:11;14292:17;11088:4;11032:26;:61::i;13276:315::-;-1:-1:-1;;;;;13383:22:1;;13379:94;;13428:34;;-1:-1:-1;;;13428:34:1;;13459:1;13428:34;;;9381:51:17;9354:18;;13428:34:1;9235:203:17;13379:94:1;-1:-1:-1;;;;;13482:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13482:46:1;;;;;;;;;;13543:41;;1159::17;;;13543::1;;1132:18:17;13543:41:1;;;;;;;13276:315;;;:::o;8159:463::-;-1:-1:-1;;;;;8281:16:1;;8277:88;;8320:34;;-1:-1:-1;;;8320:34:1;;8351:1;8320:34;;;9381:51:17;9354:18;;8320:34:1;9235:203:17;8277:88:1;-1:-1:-1;;;;;8378:18:1;;8374:88;;8419:32;;-1:-1:-1;;;8419:32:1;;8448:1;8419:32;;;9381:51:17;9354:18;;8419:32:1;9235:203:17;8374:88:1;13974:4;13968:11;;14044:1;14029:17;;;14175:4;14163:17;;14156:35;;;14292:17;;;14322;;;13815:23;14359:17;;14352:35;;;14495:17;;;14482:31;;;13968:11;8560:55;8587:4;8593:2;13968:11;14292:17;8610:4;8560:26;:55::i;:::-;8267:355;;8159:463;;;;;:::o;7002:700::-;7203:30;7211:4;7217:2;7221:3;7226:6;7203:7;:30::i;:::-;-1:-1:-1;;;;;7247:16:1;;;7243:453;;7328:10;;735::8;;7342:1:1;7328:15;7324:362;;16302:4:6;16273:35;;;16267:42;16273:35;;;16267:42;7481:72:1;7517:8;7527:4;7533:2;16267:42:6;;7548:4:1;7481:35;:72::i;:::-;7345:223;;7324:362;;;7592:79;7633:8;7643:4;7649:2;7653:3;7658:6;7666:4;7592:40;:79::i;5142:1281::-;5277:6;:13;5263:3;:10;:27;5259:117;;5339:10;;5351:13;;5313:52;;-1:-1:-1;;;5313:52:1;;;;;8752:25:17;;;;8793:18;;;8786:34;8725:18;;5313:52:1;8578:248:17;5259:117:1;735:10:8;5386:16:1;5428:691;5452:3;:10;5448:1;:14;5428:691;;;16302:4:6;16293:14;;;16273:35;;;;;16267:42;16273:35;;;;;;16267:42;-1:-1:-1;;;;;5598:18:1;;;5594:420;;5636:19;5658:13;;;;;;;;;;;-1:-1:-1;;;;;5658:19:1;;;;;;;;;;5699;;;5695:129;;;5749:56;;-1:-1:-1;;;5749:56:1;;-1:-1:-1;;;;;9692:32:17;;5749:56:1;;;9674:51:17;9741:18;;;9734:34;;;9784:18;;;9777:34;;;9827:18;;;9820:34;;;9646:19;;5749:56:1;9443:417:17;5695:129:1;5940:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5940:19:1;;;;;;;;;5962;;;;5940:41;;5594:420;-1:-1:-1;;;;;6032:16:1;;;6028:81;;6068:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6068:17:1;;;;;;;;;:26;;6089:5;;6068:9;:26;;6089:5;;6068:26;:::i;:::-;;;;-1:-1:-1;;6028:81:1;5469:650;;5464:3;;;;:::i;:::-;;;5428:691;;;;6133:3;:10;6147:1;6133:15;6129:288;;16302:4:6;16273:35;;16267:42;6164:10:1;;16302:4:6;16273:35;;16267:42;6164:38:1;;-1:-1:-1;6310:2:1;-1:-1:-1;;;;;6279:45:1;6304:4;-1:-1:-1;;;;;6279:45:1;6294:8;-1:-1:-1;;;;;6279:45:1;;6314:2;6318:5;6279:45;;;;;;8752:25:17;;;8808:2;8793:18;;8786:34;8740:2;8725:18;;8578:248;6279:45:1;;;;;;;;6150:185;;6129:288;;;6390:2;-1:-1:-1;;;;;6360:46:1;6384:4;-1:-1:-1;;;;;6360:46:1;6374:8;-1:-1:-1;;;;;6360:46:1;;6394:3;6399:6;6360:46;;;;;;;:::i;:::-;;;;;;;;5249:1174;5142:1281;;;;:::o;998:959:5:-;-1:-1:-1;;;;;1197:14:5;;;:18;1193:758;;1235:71;;-1:-1:-1;;;1235:71:5;;-1:-1:-1;;;;;1235:38:5;;;;;:71;;1274:8;;1284:4;;1290:2;;1294:5;;1301:4;;1235:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1235:71:5;;;;;;;;-1:-1:-1;;1235:71:5;;;;;;;;;;;;:::i;:::-;;;1231:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:6;:13;1622:1;1605:18;1601:326;;1710:41;;-1:-1:-1;;;1710:41:5;;-1:-1:-1;;;;;9399:32:17;;1710:41:5;;;9381:51:17;9354:18;;1710:41:5;9235:203:17;1601:326:5;1879:6;1873:13;1864:6;1860:2;1856:15;1849:38;1231:710;-1:-1:-1;;;;;;1355:55:5;;-1:-1:-1;;;1355:55:5;1351:189;;1480:41;;-1:-1:-1;;;1480:41:5;;-1:-1:-1;;;;;9399:32:17;;1480:41:5;;;9381:51:17;9354:18;;1480:41:5;9235:203:17;2505:1026:5;-1:-1:-1;;;;;2729:14:5;;;:18;2725:800;;2767:78;;-1:-1:-1;;;2767:78:5;;-1:-1:-1;;;;;2767:43:5;;;;;:78;;2811:8;;2821:4;;2827:3;;2832:6;;2840:4;;2767:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2767:78:5;;;;;;;;-1:-1:-1;;2767:78:5;;;;;;;;;;;;:::i;:::-;;;2763:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2924:60:5;;-1:-1:-1;;;2924:60:5;2920:194;;3054:41;;-1:-1:-1;;;3054:41:5;;-1:-1:-1;;;;;9399:32:17;;3054:41:5;;;9381:51:17;9354:18;;3054:41:5;9235:203:17;14:173;82:20;;-1:-1:-1;;;;;131:31:17;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:17:o;633:131::-;-1:-1:-1;;;;;;707:32:17;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:17:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:17;;1211:180;-1:-1:-1;1211:180:17:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:275;2252:2;2246:9;2317:2;2298:13;;-1:-1:-1;;2294:27:17;2282:40;;2352:18;2337:34;;2373:22;;;2334:62;2331:88;;;2399:18;;:::i;:::-;2435:2;2428:22;2181:275;;-1:-1:-1;2181:275:17:o;2461:183::-;2521:4;2554:18;2546:6;2543:30;2540:56;;;2576:18;;:::i;:::-;-1:-1:-1;2621:1:17;2617:14;2633:4;2613:25;;2461:183::o;2649:662::-;2703:5;2756:3;2749:4;2741:6;2737:17;2733:27;2723:55;;2774:1;2771;2764:12;2723:55;2810:6;2797:20;2836:4;2860:60;2876:43;2916:2;2876:43;:::i;:::-;2860:60;:::i;:::-;2954:15;;;3040:1;3036:10;;;;3024:23;;3020:32;;;2985:12;;;;3064:15;;;3061:35;;;3092:1;3089;3082:12;3061:35;3128:2;3120:6;3116:15;3140:142;3156:6;3151:3;3148:15;3140:142;;;3222:17;;3210:30;;3260:12;;;;3173;;3140:142;;;-1:-1:-1;3300:5:17;2649:662;-1:-1:-1;;;;;;2649:662:17:o;3316:530::-;3358:5;3411:3;3404:4;3396:6;3392:17;3388:27;3378:55;;3429:1;3426;3419:12;3378:55;3465:6;3452:20;3491:18;3487:2;3484:26;3481:52;;;3513:18;;:::i;:::-;3557:55;3600:2;3581:13;;-1:-1:-1;;3577:27:17;3606:4;3573:38;3557:55;:::i;:::-;3637:2;3628:7;3621:19;3683:3;3676:4;3671:2;3663:6;3659:15;3655:26;3652:35;3649:55;;;3700:1;3697;3690:12;3649:55;3765:2;3758:4;3750:6;3746:17;3739:4;3730:7;3726:18;3713:55;3813:1;3788:16;;;3806:4;3784:27;3777:38;;;;3792:7;3316:530;-1:-1:-1;;;3316:530:17:o;3851:943::-;4005:6;4013;4021;4029;4037;4090:3;4078:9;4069:7;4065:23;4061:33;4058:53;;;4107:1;4104;4097:12;4058:53;4130:29;4149:9;4130:29;:::i;:::-;4120:39;;4178:38;4212:2;4201:9;4197:18;4178:38;:::i;:::-;4168:48;;4267:2;4256:9;4252:18;4239:32;4290:18;4331:2;4323:6;4320:14;4317:34;;;4347:1;4344;4337:12;4317:34;4370:61;4423:7;4414:6;4403:9;4399:22;4370:61;:::i;:::-;4360:71;;4484:2;4473:9;4469:18;4456:32;4440:48;;4513:2;4503:8;4500:16;4497:36;;;4529:1;4526;4519:12;4497:36;4552:63;4607:7;4596:8;4585:9;4581:24;4552:63;:::i;:::-;4542:73;;4668:3;4657:9;4653:19;4640:33;4624:49;;4698:2;4688:8;4685:16;4682:36;;;4714:1;4711;4704:12;4682:36;;4737:51;4780:7;4769:8;4758:9;4754:24;4737:51;:::i;:::-;4727:61;;;3851:943;;;;;;;;:::o;4799:1146::-;4917:6;4925;4978:2;4966:9;4957:7;4953:23;4949:32;4946:52;;;4994:1;4991;4984:12;4946:52;5034:9;5021:23;5063:18;5104:2;5096:6;5093:14;5090:34;;;5120:1;5117;5110:12;5090:34;5158:6;5147:9;5143:22;5133:32;;5203:7;5196:4;5192:2;5188:13;5184:27;5174:55;;5225:1;5222;5215:12;5174:55;5261:2;5248:16;5283:4;5307:60;5323:43;5363:2;5323:43;:::i;5307:60::-;5401:15;;;5483:1;5479:10;;;;5471:19;;5467:28;;;5432:12;;;;5507:19;;;5504:39;;;5539:1;5536;5529:12;5504:39;5563:11;;;;5583:148;5599:6;5594:3;5591:15;5583:148;;;5665:23;5684:3;5665:23;:::i;:::-;5653:36;;5616:12;;;;5709;;;;5583:148;;;5750:5;-1:-1:-1;;5793:18:17;;5780:32;;-1:-1:-1;;5824:16:17;;;5821:36;;;5853:1;5850;5843:12;5821:36;;5876:63;5931:7;5920:8;5909:9;5905:24;5876:63;:::i;:::-;5866:73;;;4799:1146;;;;;:::o;5950:435::-;6003:3;6041:5;6035:12;6068:6;6063:3;6056:19;6094:4;6123:2;6118:3;6114:12;6107:19;;6160:2;6153:5;6149:14;6181:1;6191:169;6205:6;6202:1;6199:13;6191:169;;;6266:13;;6254:26;;6300:12;;;;6335:15;;;;6227:1;6220:9;6191:169;;;-1:-1:-1;6376:3:17;;5950:435;-1:-1:-1;;;;;5950:435:17:o;6390:261::-;6569:2;6558:9;6551:21;6532:4;6589:56;6641:2;6630:9;6626:18;6618:6;6589:56;:::i;6656:347::-;6721:6;6729;6782:2;6770:9;6761:7;6757:23;6753:32;6750:52;;;6798:1;6795;6788:12;6750:52;6821:29;6840:9;6821:29;:::i;:::-;6811:39;;6900:2;6889:9;6885:18;6872:32;6947:5;6940:13;6933:21;6926:5;6923:32;6913:60;;6969:1;6966;6959:12;6913:60;6992:5;6982:15;;;6656:347;;;;;:::o;7008:260::-;7076:6;7084;7137:2;7125:9;7116:7;7112:23;7108:32;7105:52;;;7153:1;7150;7143:12;7105:52;7176:29;7195:9;7176:29;:::i;:::-;7166:39;;7224:38;7258:2;7247:9;7243:18;7224:38;:::i;:::-;7214:48;;7008:260;;;;;:::o;7273:606::-;7377:6;7385;7393;7401;7409;7462:3;7450:9;7441:7;7437:23;7433:33;7430:53;;;7479:1;7476;7469:12;7430:53;7502:29;7521:9;7502:29;:::i;:::-;7492:39;;7550:38;7584:2;7573:9;7569:18;7550:38;:::i;:::-;7540:48;;7635:2;7624:9;7620:18;7607:32;7597:42;;7686:2;7675:9;7671:18;7658:32;7648:42;;7741:3;7730:9;7726:19;7713:33;7769:18;7761:6;7758:30;7755:50;;;7801:1;7798;7791:12;7755:50;7824:49;7865:7;7856:6;7845:9;7841:22;7824:49;:::i;7884:380::-;7963:1;7959:12;;;;8006;;;8027:61;;8081:4;8073:6;8069:17;8059:27;;8027:61;8134:2;8126:6;8123:14;8103:18;8100:38;8097:161;;8180:10;8175:3;8171:20;8168:1;8161:31;8215:4;8212:1;8205:15;8243:4;8240:1;8233:15;8097:161;;7884:380;;;:::o;8831:127::-;8892:10;8887:3;8883:20;8880:1;8873:31;8923:4;8920:1;8913:15;8947:4;8944:1;8937:15;8963:127;9024:10;9019:3;9015:20;9012:1;9005:31;9055:4;9052:1;9045:15;9079:4;9076:1;9069:15;9095:135;9134:3;9155:17;;;9152:43;;9175:18;;:::i;:::-;-1:-1:-1;9222:1:17;9211:13;;9095:135::o;9865:125::-;9930:9;;;9951:10;;;9948:36;;;9964:18;;:::i;9995:465::-;10252:2;10241:9;10234:21;10215:4;10278:56;10330:2;10319:9;10315:18;10307:6;10278:56;:::i;:::-;10382:9;10374:6;10370:22;10365:2;10354:9;10350:18;10343:50;10410:44;10447:6;10439;10410:44;:::i;:::-;10402:52;9995:465;-1:-1:-1;;;;;9995:465:17:o;10465:561::-;-1:-1:-1;;;;;10762:15:17;;;10744:34;;10814:15;;10809:2;10794:18;;10787:43;10861:2;10846:18;;10839:34;;;10904:2;10889:18;;10882:34;;;10724:3;10947;10932:19;;10925:32;;;10687:4;;10974:46;;11000:19;;10992:6;10974:46;:::i;:::-;10966:54;10465:561;-1:-1:-1;;;;;;;10465:561:17:o;11031:249::-;11100:6;11153:2;11141:9;11132:7;11128:23;11124:32;11121:52;;;11169:1;11166;11159:12;11121:52;11201:9;11195:16;11220:30;11244:5;11220:30;:::i;11285:827::-;-1:-1:-1;;;;;11682:15:17;;;11664:34;;11734:15;;11729:2;11714:18;;11707:43;11644:3;11781:2;11766:18;;11759:31;;;11607:4;;11813:57;;11850:19;;11842:6;11813:57;:::i;:::-;11918:9;11910:6;11906:22;11901:2;11890:9;11886:18;11879:50;11952:44;11989:6;11981;11952:44;:::i;:::-;11938:58;;12045:9;12037:6;12033:22;12027:3;12016:9;12012:19;12005:51;12073:33;12099:6;12091;12073:33;:::i;:::-;12065:41;11285:827;-1:-1:-1;;;;;;;;11285:827:17:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "882000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2634",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(uint256)": "infinite",
								"nextTokenId()": "2283",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26700",
								"supportsInterface(bytes4)": "552",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 123,
									"end": 581,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 123,
									"end": 581,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 123,
									"end": 581,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 287,
									"end": 353,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 287,
									"end": 353,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 287,
									"end": 353,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 287,
									"end": 353,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 353,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 287,
									"end": 353,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 353,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 287,
									"end": 353,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 287,
									"end": 353,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 353,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 287,
									"end": 353,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "PUSH",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "PUSH data",
									"source": 1,
									"value": "4187F743CD1820C5AFEF0906CD3B4419C90FC3A98B6271DCCD633167A3271D81"
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "PUSH",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1291,
									"end": 1304,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1299,
									"end": 1303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1291,
									"end": 1298,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1291,
									"end": 1304,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1291,
									"end": 1304,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1291,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1311,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 123,
									"end": 581,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 123,
									"end": 581,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 10290,
									"end": 10376,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 10290,
									"end": 10376,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10356,
									"end": 10360,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10356,
									"end": 10369,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 10363,
									"end": 10369,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10356,
									"end": 10360,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10356,
									"end": 10369,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 10356,
									"end": 10369,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10356,
									"end": 10369,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 10356,
									"end": 10369,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10356,
									"end": 10369,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10290,
									"end": 10376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10290,
									"end": 10376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 17,
									"value": "12"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 17,
									"value": "13"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 17,
									"value": "11"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "12"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "13"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 17,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 17,
									"value": "17"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 123,
									"end": 581,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 581,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 123,
									"end": 581,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 581,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 581,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 123,
									"end": 581,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 581,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc417623179b482c73464040cdc61c8e608e801ea9047c4976ffe2bd62ed7acf64736f6c63430008140033",
									".code": [
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "75794A3C"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "75794A3C"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "A0712D68"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "A22CB465"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "E985E9C5"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "F242432A"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "FDD58E"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "E89341C"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "2EB2C2D6"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "4E1273F4"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 581,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 123,
											"end": 581,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2245,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2245,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1378,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1378,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2082,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2082,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2082,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4012,
											"end": 4441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4012,
											"end": 4441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2534,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2534,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2534,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 167,
											"end": 193,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 167,
											"end": 193,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 167,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 167,
											"end": 193,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 193,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 167,
											"end": 193,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 167,
											"end": 193,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 454,
											"end": 578,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 578,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 454,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 454,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 454,
											"end": 578,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 454,
											"end": 578,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 454,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 454,
											"end": 578,
											"name": "tag",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 454,
											"end": 578,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 454,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 454,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3154,
											"end": 3298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3154,
											"end": 3298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3365,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3365,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3589,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3589,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2361,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1378,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1515,
											"end": 1556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1556,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1515,
											"end": 1556,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1515,
											"end": 1624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1572,
											"end": 1624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1572,
											"end": 1624,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1624,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1515,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1515,
											"end": 1676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2155,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2174,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2167,
											"end": 2178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2167,
											"end": 2178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4249,
											"end": 4298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4285,
											"end": 4289,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4291,
											"end": 4297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4268,
											"end": 4298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4298,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4268,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4298,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4249,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4374,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4245,
											"end": 4374,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "711BEC91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8499,
											"end": 8514,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8499,
											"end": 8514,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8499,
											"end": 8514,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8481,
											"end": 8515,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8551,
											"end": 8566,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8551,
											"end": 8566,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8524,
											"end": 8567,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4363,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4374,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4245,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4406,
											"end": 4410,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4414,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4419,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4427,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4429,
											"end": 4433,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4383,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4434,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4383,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2674,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2709,
											"end": 2712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2705,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2719,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2686,
											"end": 2807,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2778,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2795,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2796,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2796,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B059991"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2796,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2742,
											"end": 2796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8793,
											"end": 8811,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8793,
											"end": 8811,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8793,
											"end": 8811,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8786,
											"end": 8820,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8725,
											"end": 8743,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8725,
											"end": 8743,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2742,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8578,
											"end": 8826,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2686,
											"end": 2807,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2686,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2872,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2879,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2850,
											"end": 2880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2891,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2923,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2930,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3049,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2891,
											"end": 3049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16302,
											"end": 16306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16293,
											"end": 16307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16293,
											"end": 16307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16293,
											"end": 16307,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2970,
											"end": 3038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16302,
											"end": 16306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16293,
											"end": 16307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16293,
											"end": 16307,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16293,
											"end": 16307,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2245,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3038,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2970,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2951,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 3038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2932,
											"end": 2935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2932,
											"end": 2935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2935,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2932,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2891,
											"end": 3049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2891,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3066,
											"end": 3079,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 3086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 3086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 454,
											"end": 578,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 454,
											"end": 578,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 510,
											"end": 520,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 522,
											"end": 533,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 522,
											"end": 533,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 504,
											"end": 546,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 504,
											"end": 546,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 504,
											"end": 546,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 504,
											"end": 546,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 504,
											"end": 546,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 504,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 504,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 504,
											"end": 546,
											"name": "tag",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 504,
											"end": 546,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 557,
											"end": 570,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 557,
											"end": 570,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 557,
											"end": 568,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 557,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 557,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 557,
											"end": 570,
											"name": "tag",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 557,
											"end": 570,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 557,
											"end": 570,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 557,
											"end": 570,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 557,
											"end": 570,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 557,
											"end": 570,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 454,
											"end": 578,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 454,
											"end": 578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3290,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3239,
											"end": 3291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3365,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3496,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3505,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3755,
											"end": 3804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3791,
											"end": 3795,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3774,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3804,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3774,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3804,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3755,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3751,
											"end": 3880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "711BEC91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3827,
											"end": 3869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8499,
											"end": 8514,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8499,
											"end": 8514,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8499,
											"end": 8514,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3827,
											"end": 3869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3827,
											"end": 3869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8481,
											"end": 8515,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8551,
											"end": 8566,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8551,
											"end": 8566,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8524,
											"end": 8567,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3827,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8269,
											"end": 8573,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3751,
											"end": 3880,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3751,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3907,
											"end": 3911,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3915,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3919,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 3932,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3889,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9468,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 9023,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9216,
											"end": 9232,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9216,
											"end": 9232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9212,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 9212,
											"end": 9300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9235,
											"end": 9438,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9212,
											"end": 9300,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 9212,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9313,
											"end": 9331,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9313,
											"end": 9331,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9309,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 9309,
											"end": 9397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9354,
											"end": 9386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9354,
											"end": 9386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9386,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9354,
											"end": 9386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9235,
											"end": 9438,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9309,
											"end": 9397,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 9309,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9433,
											"end": 9437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9439,
											"end": 9441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9456,
											"end": 9460,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 9406,
											"end": 9461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9461,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9406,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10754,
											"end": 11100,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10754,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10850,
											"end": 10866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10850,
											"end": 10866,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 10846,
											"end": 10934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10889,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10889,
											"end": 10923,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10889,
											"end": 10923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10889,
											"end": 10923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10889,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10889,
											"end": 10923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10889,
											"end": 10923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10889,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9235,
											"end": 9438,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10846,
											"end": 10934,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 10846,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13974,
											"end": 13978,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13968,
											"end": 13979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13968,
											"end": 13979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14044,
											"end": 14045,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14029,
											"end": 14046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14029,
											"end": 14046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14029,
											"end": 14046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14175,
											"end": 14179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14163,
											"end": 14180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14163,
											"end": 14180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14191,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14309,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14322,
											"end": 14339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14322,
											"end": 14339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14322,
											"end": 14339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13815,
											"end": 13838,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14359,
											"end": 14376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14387,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14495,
											"end": 14512,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14495,
											"end": 14512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14495,
											"end": 14512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14482,
											"end": 14513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14482,
											"end": 14513,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14482,
											"end": 14513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13968,
											"end": 13979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11032,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11071,
											"end": 11073,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13968,
											"end": 13979,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11088,
											"end": 11092,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11032,
											"end": 11058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 11032,
											"end": 11093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13276,
											"end": 13591,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 13276,
											"end": 13591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13383,
											"end": 13405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13383,
											"end": 13405,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13379,
											"end": 13473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 13379,
											"end": 13473,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13428,
											"end": 13462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13428,
											"end": 13462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CED3E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13428,
											"end": 13462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13428,
											"end": 13462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13459,
											"end": 13460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 13462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13428,
											"end": 13462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13428,
											"end": 13462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13428,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9235,
											"end": 9438,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13379,
											"end": 13473,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 13379,
											"end": 13473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13500,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13507,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13517,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13528,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13543,
											"end": 13584,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13276,
											"end": 13591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13276,
											"end": 13591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13276,
											"end": 13591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13276,
											"end": 13591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8622,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8159,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8281,
											"end": 8297,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 8277,
											"end": 8365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8320,
											"end": 8354,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8320,
											"end": 8354,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8320,
											"end": 8354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8320,
											"end": 8354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8354,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8320,
											"end": 8354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8320,
											"end": 8354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8320,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9235,
											"end": 9438,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8277,
											"end": 8365,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 8277,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8378,
											"end": 8396,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8378,
											"end": 8396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8374,
											"end": 8462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8448,
											"end": 8449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9235,
											"end": 9438,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8462,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8374,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13974,
											"end": 13978,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13968,
											"end": 13979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13968,
											"end": 13979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14044,
											"end": 14045,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14029,
											"end": 14046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14029,
											"end": 14046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14029,
											"end": 14046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14175,
											"end": 14179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14163,
											"end": 14180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14163,
											"end": 14180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14191,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14309,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14322,
											"end": 14339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14322,
											"end": 14339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14322,
											"end": 14339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13815,
											"end": 13838,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14359,
											"end": 14376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14387,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14495,
											"end": 14512,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14495,
											"end": 14512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14495,
											"end": 14512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14482,
											"end": 14513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14482,
											"end": 14513,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14482,
											"end": 14513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13968,
											"end": 13979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8595,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13968,
											"end": 13979,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8610,
											"end": 8614,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8560,
											"end": 8615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8615,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8560,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7702,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7002,
											"end": 7702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7211,
											"end": 7215,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7217,
											"end": 7219,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7224,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7203,
											"end": 7233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7233,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7203,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7243,
											"end": 7696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7343,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7328,
											"end": 7343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7324,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7324,
											"end": 7686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16302,
											"end": 16306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7481,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7517,
											"end": 7525,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7531,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7533,
											"end": 7535,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16309,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16309,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7552,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7481,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7481,
											"end": 7553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7481,
											"end": 7553,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7481,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7324,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7324,
											"end": 7686,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7324,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7324,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7592,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7633,
											"end": 7641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7643,
											"end": 7647,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7651,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7664,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7666,
											"end": 7670,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7592,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7592,
											"end": 7671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 6423,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5142,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5290,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5273,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5290,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5259,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5259,
											"end": 5376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5349,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B059991"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8793,
											"end": 8811,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8793,
											"end": 8811,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8793,
											"end": 8811,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8786,
											"end": 8820,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8725,
											"end": 8743,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8725,
											"end": 8743,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8578,
											"end": 8826,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5259,
											"end": 5376,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5259,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5386,
											"end": 5402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 6119,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5428,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5455,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5462,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 6119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5428,
											"end": 6119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16302,
											"end": 16306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16293,
											"end": 16307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16293,
											"end": 16307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16293,
											"end": 16307,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5598,
											"end": 5616,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5616,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5594,
											"end": 6014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5658,
											"end": 5677,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5677,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5677,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5718,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5824,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5695,
											"end": 5824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5749,
											"end": 5805,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DEE4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5749,
											"end": 5805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9692,
											"end": 9724,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 9692,
											"end": 9724,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5749,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5749,
											"end": 5805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9725,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9741,
											"end": 9759,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9741,
											"end": 9759,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9741,
											"end": 9759,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9734,
											"end": 9768,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9734,
											"end": 9768,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9734,
											"end": 9768,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9777,
											"end": 9811,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9777,
											"end": 9811,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9777,
											"end": 9811,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9820,
											"end": 9854,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9820,
											"end": 9854,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9820,
											"end": 9854,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9646,
											"end": 9665,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 9646,
											"end": 9665,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5749,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9443,
											"end": 9860,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5695,
											"end": 5824,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5695,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5981,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 6014,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5594,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6032,
											"end": 6048,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6028,
											"end": 6109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6068,
											"end": 6085,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6085,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6085,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6094,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6094,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6068,
											"end": 6094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6028,
											"end": 6109,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6028,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 6119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 6119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5464,
											"end": 5467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5428,
											"end": 6119,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 6119,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5428,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 6119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6147,
											"end": 6148,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6133,
											"end": 6148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6129,
											"end": 6417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16302,
											"end": 16306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16302,
											"end": 16306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16267,
											"end": 16309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6164,
											"end": 6202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6310,
											"end": 6312,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6302,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6314,
											"end": 6316,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8752,
											"end": 8777,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8808,
											"end": 8810,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8793,
											"end": 8811,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8793,
											"end": 8811,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8786,
											"end": 8820,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8740,
											"end": 8742,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8725,
											"end": 8743,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8725,
											"end": 8743,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8578,
											"end": 8826,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6324,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6129,
											"end": 6417,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6417,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6129,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6392,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6394,
											"end": 6397,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6360,
											"end": 6406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6406,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 6423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 6423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 6423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 6423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 6423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 6423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1957,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 998,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1215,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1193,
											"end": 1951,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH",
											"source": 5,
											"value": "F23A6E61"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1282,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1288,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1292,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1305,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1235,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1235,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1618,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1623,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1601,
											"end": 1927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1751,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1751,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9399,
											"end": 9431,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9399,
											"end": 9431,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1710,
											"end": 1751,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1710,
											"end": 1751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9381,
											"end": 9432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1710,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9235,
											"end": 9438,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1927,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1601,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1873,
											"end": 1886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1860,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1231,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1355,
											"end": 1410,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1410,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1355,
											"end": 1410,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1351,
											"end": 1540,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1521,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1521,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1521,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9399,
											"end": 9431,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9399,
											"end": 9431,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1480,
											"end": 1521,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9381,
											"end": 9432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1480,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9235,
											"end": 9438,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2505,
											"end": 3531,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2743,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2743,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2725,
											"end": 3525,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "PUSH",
											"source": 5,
											"value": "BC197C81"
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2819,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2825,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2830,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2838,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2844,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2767,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2767,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2767,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2763,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2924,
											"end": 2984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2984,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2924,
											"end": 2984,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2920,
											"end": 3114,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3054,
											"end": 3095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9399,
											"end": 9431,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9399,
											"end": 9431,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3054,
											"end": 3095,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3054,
											"end": 3095,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9381,
											"end": 9432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3054,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9235,
											"end": 9438,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "tag",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1542,
											"end": 1545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1776,
											"end": 1805,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1763,
											"end": 1813,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1396,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "tag",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 2101,
											"end": 2121,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2141,
											"end": 2145,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2170,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2181,
											"end": 2456,
											"name": "tag",
											"source": 17,
											"value": "229"
										},
										{
											"begin": 2181,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2252,
											"end": 2254,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2255,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2298,
											"end": 2311,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2321,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2282,
											"end": 2322,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2282,
											"end": 2322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2352,
											"end": 2370,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2337,
											"end": 2371,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2337,
											"end": 2371,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2396,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2331,
											"end": 2419,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2331,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 2331,
											"end": 2419,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2399,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 2399,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 2399,
											"end": 2417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2399,
											"end": 2417,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 2399,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2435,
											"end": 2437,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2428,
											"end": 2450,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2181,
											"end": 2456,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2181,
											"end": 2456,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2461,
											"end": 2644,
											"name": "tag",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 2461,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2521,
											"end": 2525,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2546,
											"end": 2552,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2543,
											"end": 2573,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2596,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 2540,
											"end": 2596,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 2576,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "tag",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2621,
											"end": 2622,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2617,
											"end": 2631,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 2633,
											"end": 2637,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2638,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2613,
											"end": 2638,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2461,
											"end": 2644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2649,
											"end": 3311,
											"name": "tag",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 2649,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2759,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2749,
											"end": 2753,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2737,
											"end": 2754,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2733,
											"end": 2760,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2723,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 2723,
											"end": 2778,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2764,
											"end": 2776,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2723,
											"end": 2778,
											"name": "tag",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 2723,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2810,
											"end": 2816,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2836,
											"end": 2840,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2860,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 2876,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 2916,
											"end": 2918,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2876,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 2876,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2876,
											"end": 2919,
											"name": "tag",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 2876,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "229"
										},
										{
											"begin": 2860,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2920,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 2860,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3040,
											"end": 3041,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 3036,
											"end": 3046,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3036,
											"end": 3046,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3036,
											"end": 3046,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3036,
											"end": 3046,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 3024,
											"end": 3047,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3024,
											"end": 3047,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3020,
											"end": 3052,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3020,
											"end": 3052,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3020,
											"end": 3052,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2985,
											"end": 2997,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2985,
											"end": 2997,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2985,
											"end": 2997,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2985,
											"end": 2997,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3061,
											"end": 3096,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3061,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 3061,
											"end": 3096,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3093,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3061,
											"end": 3096,
											"name": "tag",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 3061,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3120,
											"end": 3126,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3116,
											"end": 3131,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3140,
											"end": 3282,
											"name": "tag",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 3140,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3151,
											"end": 3154,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3140,
											"end": 3282,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3140,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 3140,
											"end": 3282,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3222,
											"end": 3239,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3222,
											"end": 3239,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3210,
											"end": 3240,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3210,
											"end": 3240,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3173,
											"end": 3185,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3173,
											"end": 3185,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3140,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 3140,
											"end": 3282,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3140,
											"end": 3282,
											"name": "tag",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 3140,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3300,
											"end": 3305,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 2649,
											"end": 3311,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 3311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3316,
											"end": 3846,
											"name": "tag",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 3316,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3358,
											"end": 3363,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3414,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3404,
											"end": 3408,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3396,
											"end": 3402,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3388,
											"end": 3415,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3378,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 3378,
											"end": 3433,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3429,
											"end": 3430,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3427,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3431,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3378,
											"end": 3433,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 3378,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3472,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3491,
											"end": 3509,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3489,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3481,
											"end": 3533,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3481,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 3481,
											"end": 3533,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 3513,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "tag",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3557,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3581,
											"end": 3594,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3581,
											"end": 3594,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3577,
											"end": 3604,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3610,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3573,
											"end": 3611,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3557,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "229"
										},
										{
											"begin": 3557,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3557,
											"end": 3612,
											"name": "tag",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 3557,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3637,
											"end": 3639,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3628,
											"end": 3635,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3621,
											"end": 3640,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3676,
											"end": 3680,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3673,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3663,
											"end": 3669,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3655,
											"end": 3681,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3652,
											"end": 3687,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3704,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 3649,
											"end": 3704,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3704,
											"name": "tag",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 3649,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3765,
											"end": 3767,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3746,
											"end": 3763,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3739,
											"end": 3743,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3726,
											"end": 3744,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3804,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3788,
											"end": 3804,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3788,
											"end": 3804,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3811,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3777,
											"end": 3815,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3777,
											"end": 3815,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3777,
											"end": 3815,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3777,
											"end": 3815,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3792,
											"end": 3799,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3316,
											"end": 3846,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3316,
											"end": 3846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4794,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 3851,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4005,
											"end": 4011,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4019,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4021,
											"end": 4027,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4035,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4093,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 4078,
											"end": 4087,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4069,
											"end": 4076,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 4065,
											"end": 4088,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4061,
											"end": 4094,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4058,
											"end": 4111,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4058,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 4058,
											"end": 4111,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4058,
											"end": 4111,
											"name": "tag",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 4058,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4130,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 4149,
											"end": 4158,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4130,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 4130,
											"end": 4159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4130,
											"end": 4159,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 4130,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4120,
											"end": 4159,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 4120,
											"end": 4159,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4178,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 4212,
											"end": 4214,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4201,
											"end": 4210,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4197,
											"end": 4215,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4178,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 4178,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4178,
											"end": 4216,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 4178,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4168,
											"end": 4216,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4168,
											"end": 4216,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4256,
											"end": 4265,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4252,
											"end": 4270,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4239,
											"end": 4271,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4334,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4317,
											"end": 4351,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4317,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 4317,
											"end": 4351,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4347,
											"end": 4348,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4317,
											"end": 4351,
											"name": "tag",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 4317,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4370,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 4423,
											"end": 4430,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 4414,
											"end": 4420,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4403,
											"end": 4412,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 4399,
											"end": 4421,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4370,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 4370,
											"end": 4431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4370,
											"end": 4431,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 4370,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4360,
											"end": 4431,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 4360,
											"end": 4431,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4484,
											"end": 4486,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4473,
											"end": 4482,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 4469,
											"end": 4487,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4456,
											"end": 4488,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4488,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4488,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4513,
											"end": 4515,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4511,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4500,
											"end": 4516,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4529,
											"end": 4530,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4526,
											"end": 4527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4531,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4552,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 4607,
											"end": 4614,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 4596,
											"end": 4604,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 4581,
											"end": 4605,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4552,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 4552,
											"end": 4615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4552,
											"end": 4615,
											"name": "tag",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 4552,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4615,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4542,
											"end": 4615,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4671,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4673,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4624,
											"end": 4673,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4624,
											"end": 4673,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4698,
											"end": 4700,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4688,
											"end": 4696,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4685,
											"end": 4701,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4718,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 4682,
											"end": 4718,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4714,
											"end": 4715,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4711,
											"end": 4712,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4704,
											"end": 4716,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4718,
											"name": "tag",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 4682,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4682,
											"end": 4718,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4737,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 4780,
											"end": 4787,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 4769,
											"end": 4777,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4758,
											"end": 4767,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 4754,
											"end": 4778,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4737,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 4737,
											"end": 4788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4737,
											"end": 4788,
											"name": "tag",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 4737,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4727,
											"end": 4788,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4727,
											"end": 4788,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4727,
											"end": 4788,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4794,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4794,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4794,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4794,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4794,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4794,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4794,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4794,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4799,
											"end": 5945,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 4799,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4917,
											"end": 4923,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4931,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4957,
											"end": 4964,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4953,
											"end": 4976,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4949,
											"end": 4981,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4946,
											"end": 4998,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4946,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 4946,
											"end": 4998,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4994,
											"end": 4995,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4992,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4984,
											"end": 4996,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4946,
											"end": 4998,
											"name": "tag",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 4946,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5034,
											"end": 5043,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5021,
											"end": 5044,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5104,
											"end": 5106,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5093,
											"end": 5107,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5090,
											"end": 5124,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5090,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 5090,
											"end": 5124,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5120,
											"end": 5121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5118,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5110,
											"end": 5122,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5090,
											"end": 5124,
											"name": "tag",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 5090,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5164,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5147,
											"end": 5156,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5143,
											"end": 5165,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5133,
											"end": 5165,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5133,
											"end": 5165,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5203,
											"end": 5210,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5196,
											"end": 5200,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5192,
											"end": 5194,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5188,
											"end": 5201,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5174,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 5174,
											"end": 5229,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5225,
											"end": 5226,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5223,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5215,
											"end": 5227,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5174,
											"end": 5229,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 5174,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5261,
											"end": 5263,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5248,
											"end": 5264,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5307,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 5323,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5323,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 5323,
											"end": 5366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5307,
											"end": 5367,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 5307,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5401,
											"end": 5416,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5401,
											"end": 5416,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5401,
											"end": 5416,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5483,
											"end": 5484,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 5479,
											"end": 5489,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5479,
											"end": 5489,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5479,
											"end": 5489,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5479,
											"end": 5489,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5471,
											"end": 5490,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5471,
											"end": 5490,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5467,
											"end": 5495,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5467,
											"end": 5495,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5467,
											"end": 5495,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5432,
											"end": 5444,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5432,
											"end": 5444,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5432,
											"end": 5444,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5432,
											"end": 5444,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5507,
											"end": 5526,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 5507,
											"end": 5526,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5507,
											"end": 5526,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5504,
											"end": 5543,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5504,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 5504,
											"end": 5543,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5529,
											"end": 5541,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5504,
											"end": 5543,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 5504,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5563,
											"end": 5574,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5563,
											"end": 5574,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5563,
											"end": 5574,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5563,
											"end": 5574,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5583,
											"end": 5731,
											"name": "tag",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 5583,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5594,
											"end": 5597,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5591,
											"end": 5606,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5583,
											"end": 5731,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5583,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 5583,
											"end": 5731,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5665,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 5684,
											"end": 5687,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5665,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 5665,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5665,
											"end": 5688,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 5665,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5653,
											"end": 5689,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5653,
											"end": 5689,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5616,
											"end": 5628,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5616,
											"end": 5628,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5616,
											"end": 5628,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5616,
											"end": 5628,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5709,
											"end": 5721,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5709,
											"end": 5721,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5709,
											"end": 5721,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5709,
											"end": 5721,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5583,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 5583,
											"end": 5731,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5583,
											"end": 5731,
											"name": "tag",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 5583,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 5755,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5780,
											"end": 5812,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5780,
											"end": 5812,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5821,
											"end": 5857,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5821,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 5821,
											"end": 5857,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5853,
											"end": 5854,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5851,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5843,
											"end": 5855,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5821,
											"end": 5857,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 5821,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5821,
											"end": 5857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5876,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 5931,
											"end": 5938,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5920,
											"end": 5928,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5909,
											"end": 5918,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5929,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5876,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 5876,
											"end": 5939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5876,
											"end": 5939,
											"name": "tag",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 5876,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5866,
											"end": 5939,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5866,
											"end": 5939,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5866,
											"end": 5939,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4799,
											"end": 5945,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4799,
											"end": 5945,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4799,
											"end": 5945,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4799,
											"end": 5945,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4799,
											"end": 5945,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4799,
											"end": 5945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "tag",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6003,
											"end": 6006,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6046,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6035,
											"end": 6047,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6068,
											"end": 6074,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6066,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6056,
											"end": 6075,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6094,
											"end": 6098,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6125,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6118,
											"end": 6121,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6114,
											"end": 6126,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6160,
											"end": 6162,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6149,
											"end": 6163,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6181,
											"end": 6182,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6360,
											"name": "tag",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 6191,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6205,
											"end": 6211,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6199,
											"end": 6212,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 6191,
											"end": 6360,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6191,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "303"
										},
										{
											"begin": 6191,
											"end": 6360,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6266,
											"end": 6279,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6266,
											"end": 6279,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6254,
											"end": 6280,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6254,
											"end": 6280,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6300,
											"end": 6312,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 6300,
											"end": 6312,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6300,
											"end": 6312,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6300,
											"end": 6312,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 6335,
											"end": 6350,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6335,
											"end": 6350,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6335,
											"end": 6350,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6335,
											"end": 6350,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6220,
											"end": 6229,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6191,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 6191,
											"end": 6360,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6191,
											"end": 6360,
											"name": "tag",
											"source": 17,
											"value": "303"
										},
										{
											"begin": 6191,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6379,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 6376,
											"end": 6379,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5950,
											"end": 6385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6390,
											"end": 6651,
											"name": "tag",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 6390,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6569,
											"end": 6571,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6558,
											"end": 6567,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6551,
											"end": 6572,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6532,
											"end": 6536,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 6641,
											"end": 6643,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6630,
											"end": 6639,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6626,
											"end": 6644,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6618,
											"end": 6624,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6589,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 6589,
											"end": 6645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6656,
											"end": 7003,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 6656,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6721,
											"end": 6727,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6735,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6782,
											"end": 6784,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6779,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6761,
											"end": 6768,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6757,
											"end": 6780,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6753,
											"end": 6785,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6750,
											"end": 6802,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6750,
											"end": 6802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 6750,
											"end": 6802,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6798,
											"end": 6799,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6796,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6788,
											"end": 6800,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6750,
											"end": 6802,
											"name": "tag",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 6750,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 6840,
											"end": 6849,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 6821,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "tag",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 6821,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6900,
											"end": 6902,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6889,
											"end": 6898,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6885,
											"end": 6903,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6872,
											"end": 6904,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6947,
											"end": 6952,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6940,
											"end": 6953,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6933,
											"end": 6954,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 6931,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6923,
											"end": 6955,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 6913,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 6913,
											"end": 6973,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6969,
											"end": 6970,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6959,
											"end": 6971,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6913,
											"end": 6973,
											"name": "tag",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 6913,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6992,
											"end": 6997,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6982,
											"end": 6997,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6982,
											"end": 6997,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6982,
											"end": 6997,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6656,
											"end": 7003,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6656,
											"end": 7003,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6656,
											"end": 7003,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6656,
											"end": 7003,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6656,
											"end": 7003,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6656,
											"end": 7003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7268,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 7008,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7076,
											"end": 7082,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7090,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7137,
											"end": 7139,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7125,
											"end": 7134,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7116,
											"end": 7123,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7112,
											"end": 7135,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7108,
											"end": 7140,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7105,
											"end": 7157,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7105,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 7105,
											"end": 7157,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7153,
											"end": 7154,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7151,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7143,
											"end": 7155,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7105,
											"end": 7157,
											"name": "tag",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 7105,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7176,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 7195,
											"end": 7204,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7176,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 7176,
											"end": 7205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7176,
											"end": 7205,
											"name": "tag",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 7176,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7166,
											"end": 7205,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7166,
											"end": 7205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7224,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 7258,
											"end": 7260,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7247,
											"end": 7256,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7243,
											"end": 7261,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7224,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 7224,
											"end": 7262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7224,
											"end": 7262,
											"name": "tag",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 7224,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7214,
											"end": 7262,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7214,
											"end": 7262,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7268,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7268,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7268,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7268,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7268,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7008,
											"end": 7268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7273,
											"end": 7879,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 7273,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7377,
											"end": 7383,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7391,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7393,
											"end": 7399,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7407,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7409,
											"end": 7415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7462,
											"end": 7465,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 7450,
											"end": 7459,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7441,
											"end": 7448,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 7437,
											"end": 7460,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7433,
											"end": 7466,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7430,
											"end": 7483,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7430,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 7430,
											"end": 7483,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7479,
											"end": 7480,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7477,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7469,
											"end": 7481,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7430,
											"end": 7483,
											"name": "tag",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 7430,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 7521,
											"end": 7530,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 7502,
											"end": 7531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 7531,
											"name": "tag",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 7502,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7492,
											"end": 7531,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 7492,
											"end": 7531,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7550,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 7584,
											"end": 7586,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7550,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 7550,
											"end": 7588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7550,
											"end": 7588,
											"name": "tag",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 7550,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7540,
											"end": 7588,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7540,
											"end": 7588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7635,
											"end": 7637,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7624,
											"end": 7633,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7607,
											"end": 7639,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 7597,
											"end": 7639,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7597,
											"end": 7639,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7686,
											"end": 7688,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7675,
											"end": 7684,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7671,
											"end": 7689,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7658,
											"end": 7690,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 7648,
											"end": 7690,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7648,
											"end": 7690,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7741,
											"end": 7744,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 7730,
											"end": 7739,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7726,
											"end": 7745,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7713,
											"end": 7746,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 7769,
											"end": 7787,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7761,
											"end": 7767,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7758,
											"end": 7788,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7755,
											"end": 7805,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7755,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 7755,
											"end": 7805,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7801,
											"end": 7802,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 7803,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7755,
											"end": 7805,
											"name": "tag",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 7755,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7824,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 7865,
											"end": 7872,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7845,
											"end": 7854,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 7841,
											"end": 7863,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7824,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 7824,
											"end": 7873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7884,
											"end": 8264,
											"name": "tag",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 7884,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7959,
											"end": 7971,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7959,
											"end": 7971,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7959,
											"end": 7971,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 7959,
											"end": 7971,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8006,
											"end": 8018,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8006,
											"end": 8018,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8006,
											"end": 8018,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8027,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 8027,
											"end": 8088,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8081,
											"end": 8085,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 8073,
											"end": 8079,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8069,
											"end": 8086,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8059,
											"end": 8086,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8059,
											"end": 8086,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8027,
											"end": 8088,
											"name": "tag",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 8027,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8134,
											"end": 8136,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8126,
											"end": 8132,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8123,
											"end": 8137,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8100,
											"end": 8138,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8097,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 8097,
											"end": 8258,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8180,
											"end": 8190,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 8175,
											"end": 8178,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 8171,
											"end": 8191,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 8168,
											"end": 8169,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8192,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8215,
											"end": 8219,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 8212,
											"end": 8213,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8205,
											"end": 8220,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8243,
											"end": 8247,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8240,
											"end": 8241,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8248,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8097,
											"end": 8258,
											"name": "tag",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 8097,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8097,
											"end": 8258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7884,
											"end": 8264,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7884,
											"end": 8264,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7884,
											"end": 8264,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7884,
											"end": 8264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8831,
											"end": 8958,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 8831,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8892,
											"end": 8902,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 8887,
											"end": 8890,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 8883,
											"end": 8903,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 8880,
											"end": 8881,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8873,
											"end": 8904,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8923,
											"end": 8927,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 8920,
											"end": 8921,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8913,
											"end": 8928,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8947,
											"end": 8951,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8944,
											"end": 8945,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8952,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8963,
											"end": 9090,
											"name": "tag",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 8963,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9024,
											"end": 9034,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 9019,
											"end": 9022,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 9015,
											"end": 9035,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 9012,
											"end": 9013,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9005,
											"end": 9036,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9055,
											"end": 9059,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 9052,
											"end": 9053,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 9045,
											"end": 9060,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9079,
											"end": 9083,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9076,
											"end": 9077,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9069,
											"end": 9084,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9095,
											"end": 9230,
											"name": "tag",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 9095,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9134,
											"end": 9137,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9172,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9155,
											"end": 9172,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9155,
											"end": 9172,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9152,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 9152,
											"end": 9195,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 9175,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9211,
											"end": 9224,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9211,
											"end": 9224,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9095,
											"end": 9230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9865,
											"end": 9990,
											"name": "tag",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 9865,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9930,
											"end": 9939,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9930,
											"end": 9939,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9930,
											"end": 9939,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9951,
											"end": 9961,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9951,
											"end": 9961,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9951,
											"end": 9961,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9948,
											"end": 9984,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9948,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 9948,
											"end": 9984,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9964,
											"end": 9982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 9964,
											"end": 9982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 9964,
											"end": 9982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9995,
											"end": 10460,
											"name": "tag",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 9995,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10252,
											"end": 10254,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10241,
											"end": 10250,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10234,
											"end": 10255,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10215,
											"end": 10219,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10278,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 10330,
											"end": 10332,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10319,
											"end": 10328,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10307,
											"end": 10313,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10278,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 10278,
											"end": 10334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10278,
											"end": 10334,
											"name": "tag",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 10278,
											"end": 10334,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10382,
											"end": 10391,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10374,
											"end": 10380,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10370,
											"end": 10392,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10365,
											"end": 10367,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10354,
											"end": 10363,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10343,
											"end": 10393,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10410,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 10447,
											"end": 10453,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10439,
											"end": 10445,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10410,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 10410,
											"end": 10454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10410,
											"end": 10454,
											"name": "tag",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 10410,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10402,
											"end": 10454,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 9995,
											"end": 10460,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9995,
											"end": 10460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10465,
											"end": 11026,
											"name": "tag",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 10465,
											"end": 11026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10762,
											"end": 10777,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10762,
											"end": 10777,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10762,
											"end": 10777,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10744,
											"end": 10778,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10809,
											"end": 10811,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10787,
											"end": 10830,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10861,
											"end": 10863,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10846,
											"end": 10864,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10846,
											"end": 10864,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10839,
											"end": 10873,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10839,
											"end": 10873,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10839,
											"end": 10873,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10904,
											"end": 10906,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 10889,
											"end": 10907,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10889,
											"end": 10907,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10882,
											"end": 10916,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10882,
											"end": 10916,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10882,
											"end": 10916,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10724,
											"end": 10727,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 10947,
											"end": 10950,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 10932,
											"end": 10951,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10932,
											"end": 10951,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10925,
											"end": 10957,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10925,
											"end": 10957,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10925,
											"end": 10957,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10687,
											"end": 10691,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10691,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11000,
											"end": 11019,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11000,
											"end": 11019,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10992,
											"end": 10998,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 10974,
											"end": 11020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "tag",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10966,
											"end": 11020,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 10465,
											"end": 11026,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 11026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11031,
											"end": 11280,
											"name": "tag",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 11031,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11100,
											"end": 11106,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11155,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11141,
											"end": 11150,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11132,
											"end": 11139,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11128,
											"end": 11151,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11124,
											"end": 11156,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11121,
											"end": 11173,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11121,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 11121,
											"end": 11173,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11169,
											"end": 11170,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11166,
											"end": 11167,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11159,
											"end": 11171,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11121,
											"end": 11173,
											"name": "tag",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 11121,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11201,
											"end": 11210,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11195,
											"end": 11211,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11220,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 11244,
											"end": 11249,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11220,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 11220,
											"end": 11250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11285,
											"end": 12112,
											"name": "tag",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 11285,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11682,
											"end": 11697,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11682,
											"end": 11697,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11682,
											"end": 11697,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11664,
											"end": 11698,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11664,
											"end": 11698,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11734,
											"end": 11749,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11734,
											"end": 11749,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11729,
											"end": 11731,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11707,
											"end": 11750,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11644,
											"end": 11647,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 11781,
											"end": 11783,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 11766,
											"end": 11784,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11766,
											"end": 11784,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11759,
											"end": 11790,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11759,
											"end": 11790,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11759,
											"end": 11790,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11607,
											"end": 11611,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11607,
											"end": 11611,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11813,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 11813,
											"end": 11870,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11850,
											"end": 11869,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11850,
											"end": 11869,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11842,
											"end": 11848,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11813,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 11813,
											"end": 11870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11813,
											"end": 11870,
											"name": "tag",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 11813,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11918,
											"end": 11927,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11910,
											"end": 11916,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11906,
											"end": 11928,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 11903,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 11890,
											"end": 11899,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11886,
											"end": 11904,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11879,
											"end": 11929,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11952,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 11989,
											"end": 11995,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11981,
											"end": 11987,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11952,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 11952,
											"end": 11996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11952,
											"end": 11996,
											"name": "tag",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 11952,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11938,
											"end": 11996,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11938,
											"end": 11996,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12045,
											"end": 12054,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12037,
											"end": 12043,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12033,
											"end": 12055,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12027,
											"end": 12030,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 12016,
											"end": 12025,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12012,
											"end": 12031,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12005,
											"end": 12056,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12073,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 12099,
											"end": 12105,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12091,
											"end": 12097,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12073,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 12073,
											"end": 12106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12073,
											"end": 12106,
											"name": "tag",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 12073,
											"end": 12106,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12065,
											"end": 12106,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": 11285,
											"end": 12112,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11285,
											"end": 12112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								},
								"4187F743CD1820C5AFEF0906CD3B4419C90FC3A98B6271DCCD633167A3271D81": "68747470733a2f2f6578616d706c652e636f6d2f6170692f6974656d2f7b69647d2e6a736f6e"
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Comparators.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/SlotDerivation.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"Standard_ERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256)": "a0712d68",
							"nextTokenId()": "75794a3c",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Standard_ERC1155.sol\":\"Standart_ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"Standard_ERC1155.sol\":{\"keccak256\":\"0x7e6463ba9cbbfe5c6a7ae48467b3ce62d0e902893e580c2153008da931729ec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ca4501746517fcaa0abb050f71c292688bbd8ded9bf916e6d2809fc1d76bf3b\",\"dweb:/ipfs/QmSMG8hbHSi2rAuf6b6AXzyoVpnE31ieoU9cjCXYfC5HeB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "Standard_ERC1155.sol:Standart_ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "Standard_ERC1155.sol:Standart_ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "Standard_ERC1155.sol:Standart_ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 6048,
								"contract": "Standard_ERC1155.sol:Standart_ERC1155",
								"label": "nextTokenId",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							2266
						],
						"Context": [
							2328
						],
						"ERC1155": [
							1053
						],
						"ERC1155Utils": [
							1388
						],
						"ERC165": [
							2658
						],
						"IERC1155": [
							1176
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1234
						],
						"IERC165": [
							2670
						]
					},
					"id": 1054,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 1177,
							"src": "135:40:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1176,
										"src": "143:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 1235,
							"src": "176:73:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1234,
										"src": "184:19:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
							"file": "./utils/ERC1155Utils.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 1389,
							"src": "250:54:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "ERC1155Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1388,
										"src": "258:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 2329,
							"src": "305:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2328,
										"src": "313:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 2659,
							"src": "354:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2670,
										"src": "362:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 148,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2658,
										"src": "371:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 2267,
							"src": "424:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2266,
										"src": "432:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1054,
							"sourceUnit": 137,
							"src": "471:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "479:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"754:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2328,
										"src": "754:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"763:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2658,
										"src": "763:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "763:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC1155",
										"nameLocations": [
											"771:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1176,
										"src": "771:8:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "771:8:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"781:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1234,
										"src": "781:19:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "781:19:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC1155Errors",
										"nameLocations": [
											"802:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 136,
										"src": "802:14:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "802:14:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "540:184:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1053,
							"linearizedBaseContracts": [
								1053,
								136,
								1234,
								1176,
								2658,
								2670,
								2328
							],
							"name": "ERC1155",
							"nameLocation": "743:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 168,
									"libraryName": {
										"id": 165,
										"name": "Arrays",
										"nameLocations": [
											"829:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2266,
										"src": "829:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "823:27:1",
									"typeName": {
										"baseType": {
											"id": 166,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "840:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 167,
										"nodeType": "ArrayTypeName",
										"src": "840:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 172,
									"libraryName": {
										"id": 169,
										"name": "Arrays",
										"nameLocations": [
											"861:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2266,
										"src": "861:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "855:27:1",
									"typeName": {
										"baseType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 171,
										"nodeType": "ArrayTypeName",
										"src": "872:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "955:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "888:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 177,
										"keyName": "id",
										"keyNameLocation": "904:2:1",
										"keyType": {
											"id": 173,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "896:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "888:58:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 176,
											"keyName": "account",
											"keyNameLocation": "926:7:1",
											"keyType": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "918:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "910:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "937:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1041:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "971:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "987:7:1",
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "979:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "971:61:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"keyName": "operator",
											"keyNameLocation": "1014:8:1",
											"keyType": {
												"id": 180,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1006:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "998:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1026:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1195:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "1180:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 185,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1180:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1281:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1299:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 192,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "1291:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1291:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1291:13:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1206:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1275:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1261:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:20:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1281:0:1"
									},
									"scope": 1053,
									"src": "1249:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2657,
										2669
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1486:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1515:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 210,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1176,
																			"src": "1535:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1176_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1176_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 209,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1530:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1530:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1176",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1545:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1530:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1515:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1572:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1234,
																			"src": "1592:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1234_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1234_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 215,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1587:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1587:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1234",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1613:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1587:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1572:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1515:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1664:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 221,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1640:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1053_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1646:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2657,
															"src": "1640:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1640:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1515:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 226,
												"nodeType": "Return",
												"src": "1496:180:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1317:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1387:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 202,
												"name": "ERC165",
												"nameLocations": [
													"1454:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2658,
												"src": "1454:6:1"
											},
											{
												"id": 203,
												"name": "IERC165",
												"nameLocations": [
													"1462:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2670,
												"src": "1462:7:1"
											}
										],
										"src": "1445:25:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1412:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1405:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1405:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1404:20:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1480:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1480:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:6:1"
									},
									"scope": 1053,
									"src": "1378:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1233
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2157:28:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "2174:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "2167:11:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1689:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2091:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2095:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:18:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2142:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2142:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2141:15:1"
									},
									"scope": 1053,
									"src": "2082:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1114
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2331:46:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 249,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2348:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2358:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2348:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"id": 252,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "2362:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2348:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "2341:29:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2191:49:1",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2254:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2272:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2264:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2289:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2281:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2263:29:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2322:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:9:1"
									},
									"scope": 1053,
									"src": "2245:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2676:410:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 269,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2690:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2699:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2690:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 271,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2709:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2713:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2709:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2690:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2686:121:1",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "2721:86:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 275,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "2768:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2772:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2768:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 277,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "2780:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2789:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2780:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 274,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2742:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2742:54:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "RevertStatement",
															"src": "2735:61:1"
														}
													]
												}
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2834:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2817:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2817:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 286,
															"nodeType": "ArrayTypeName",
															"src": "2817:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2864:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2873:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2864:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2850:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2854:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ArrayTypeName",
															"src": "2854:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2850:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2817:63:1"
											},
											{
												"body": {
													"id": 321,
													"nodeType": "Block",
													"src": "2937:112:1",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 306,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2951:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"id": 307,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "2965:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2951:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 312,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3008:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 310,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "2980:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2989:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2206,
																				"src": "2980:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2980:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 316,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3035:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 314,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 263,
																					"src": "3012:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3016:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2232,
																				"src": "3012:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3012:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 309,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "2970:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2970:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2951:87:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2951:87:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 299,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2911:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 300,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2915:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2924:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2915:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2911:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"initializationExpression": {
													"assignments": [
														296
													],
													"declarations": [
														{
															"constant": false,
															"id": 296,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2904:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 322,
															"src": "2896:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 295,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2896:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 298,
													"initialValue": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2908:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2896:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2932:3:1",
														"subExpression": {
															"id": 303,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2934:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "2932:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2891:158:1"
											},
											{
												"expression": {
													"id": 323,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "3066:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 324,
												"nodeType": "Return",
												"src": "3059:20:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "2383:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2543:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2584:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2567:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2567:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "2567:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2619:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2602:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2602:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "2602:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:71:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2658:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2658:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "2658:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2657:18:1"
									},
									"scope": 1053,
									"src": "2534:552:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1135
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "3229:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "3258:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3272:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3282:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "3239:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3239:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3239:52:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3092:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3163:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3189:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3181:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3204:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3199:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3199:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3180:33:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3229:0:1"
									},
									"scope": 1053,
									"src": "3154:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1145
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "3461:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 352,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3478:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 354,
														"indexExpression": {
															"id": 353,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "3497:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3478:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 356,
													"indexExpression": {
														"id": 355,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3506:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3478:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "3471:44:1"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "3304:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3374:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3399:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3391:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3391:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3416:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3408:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3390:35:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3455:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3455:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:6:1"
									},
									"scope": 1053,
									"src": "3365:157:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1159
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3702:238:1",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3720:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "3712:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3712:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "3729:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3729:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3712:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3755:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 379,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3763:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3755:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3773:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 382,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3791:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 383,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "3797:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 381,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "3774:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3774:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3755:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "3751:129:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "3806:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 388,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "3856:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 389,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3864:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 387,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3827:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3827:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 391,
															"nodeType": "RevertStatement",
															"src": "3820:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3907:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3913:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3917:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3921:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3928:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "3889:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3889:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3889:44:1"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "3528:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3598:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3623:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3615:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3615:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3637:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3629:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3649:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3641:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3661:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3653:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3653:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3681:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3668:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3668:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3614:72:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3702:0:1"
									},
									"scope": 1053,
									"src": "3589:351:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1175
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4196:245:1",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4214:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "4206:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4206:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 421,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "4223:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4223:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4206:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4249:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 425,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4257:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4249:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4267:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 428,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4285:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4291:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4268:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4268:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4249:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4245:129:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4300:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "4350:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 435,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "4358:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 433,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4321:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4321:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4314:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4406:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4412:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4416:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 444,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4421:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4429:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "4383:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4383:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4383:51:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3946:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4021:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4060:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4052:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4082:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4074:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4074:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4111:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4094:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4094:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "4094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4141:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4124:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4124:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ArrayTypeName",
													"src": "4124:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4170:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4157:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4157:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4042:138:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4196:0:1"
									},
									"scope": 1053,
									"src": "4012:429:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5249:1174:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5263:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5267:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5263:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 465,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "5277:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5284:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5277:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5263:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "5259:117:1",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "5292:84:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 469,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "5339:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5343:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5339:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 471,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "5351:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5358:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5351:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 468,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "5313:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5313:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 474,
															"nodeType": "RevertStatement",
															"src": "5306:59:1"
														}
													]
												}
											},
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5394:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 601,
														"src": "5386:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5386:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 479,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "5405:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5405:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5386:31:1"
											},
											{
												"body": {
													"id": 562,
													"nodeType": "Block",
													"src": "5469:650:1",
													"statements": [
														{
															"assignments": [
																494
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 494,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5491:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5483:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5483:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 499,
															"initialValue": {
																"arguments": [
																	{
																		"id": 497,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5519:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 495,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "5496:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5500:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2232,
																	"src": "5496:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5496:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5483:38:1"
														},
														{
															"assignments": [
																501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 501,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5543:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5535:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5535:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 506,
															"initialValue": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5577:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 502,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5551:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5558:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2232,
																	"src": "5551:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5551:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5535:44:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "5598:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5614:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5606:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 508,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5606:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5606:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5598:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 545,
															"nodeType": "IfStatement",
															"src": "5594:420:1",
															"trueBody": {
																"id": 544,
																"nodeType": "Block",
																"src": "5618:396:1",
																"statements": [
																	{
																		"assignments": [
																			514
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 514,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5644:11:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 544,
																				"src": "5636:19:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5636:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 520,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 515,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "5658:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 517,
																				"indexExpression": {
																					"id": 516,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "5668:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5658:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 519,
																			"indexExpression": {
																				"id": 518,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "5672:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5658:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5636:41:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 521,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "5699:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 522,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "5713:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5699:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 532,
																		"nodeType": "IfStatement",
																		"src": "5695:129:1",
																		"trueBody": {
																			"id": 531,
																			"nodeType": "Block",
																			"src": "5720:104:1",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 525,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 452,
																								"src": "5776:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 526,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 514,
																								"src": "5782:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 527,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 501,
																								"src": "5795:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 528,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5802:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 524,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 101,
																							"src": "5749:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5749:56:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 530,
																					"nodeType": "RevertStatement",
																					"src": "5742:63:1"
																				}
																			]
																		}
																	},
																	{
																		"id": 543,
																		"nodeType": "UncheckedBlock",
																		"src": "5841:159:1",
																		"statements": [
																			{
																				"expression": {
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 533,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 178,
																								"src": "5940:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 536,
																							"indexExpression": {
																								"id": 534,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5950:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5940:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 537,
																						"indexExpression": {
																							"id": 535,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 452,
																							"src": "5954:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5940:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 538,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 514,
																							"src": "5962:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 539,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 501,
																							"src": "5976:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5962:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5940:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 542,
																				"nodeType": "ExpressionStatement",
																				"src": "5940:41:1"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6032:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6046:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6038:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 547,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6038:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6038:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6032:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 561,
															"nodeType": "IfStatement",
															"src": "6028:81:1",
															"trueBody": {
																"id": 560,
																"nodeType": "Block",
																"src": "6050:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 552,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "6068:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 555,
																					"indexExpression": {
																						"id": 553,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6078:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6068:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 556,
																				"indexExpression": {
																					"id": 554,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "6082:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6068:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 557,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "6089:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6068:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 559,
																		"nodeType": "ExpressionStatement",
																		"src": "6068:26:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5448:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 487,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5452:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5456:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5452:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5448:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"initializationExpression": {
													"assignments": [
														483
													],
													"declarations": [
														{
															"constant": false,
															"id": 483,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5441:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 563,
															"src": "5433:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5433:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 485,
													"initialValue": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5445:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5433:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5464:3:1",
														"subExpression": {
															"id": 490,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5466:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 492,
													"nodeType": "ExpressionStatement",
													"src": "5464:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5428:691:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 564,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6133:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6137:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6133:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6147:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6133:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "6341:76:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6374:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6384:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6390:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6394:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 596,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6399:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 591,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "6360:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6360:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "6355:51:1"
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "6129:288:1",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "6150:185:1",
													"statements": [
														{
															"assignments": [
																569
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 569,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6172:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6164:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6164:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 574,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6200:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 570,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6177:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6181:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2232,
																	"src": "6177:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6177:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6164:38:1"
														},
														{
															"assignments": [
																576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 576,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6224:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6216:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 575,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6216:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 581,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6258:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 577,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6232:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6239:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2232,
																	"src": "6232:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6232:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6216:44:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 583,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6294:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6304:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 585,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6310:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 586,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "6314:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 587,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "6318:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 582,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "6279:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6279:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 589,
															"nodeType": "EmitStatement",
															"src": "6274:50:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4447:690:1",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5151:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5167:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5159:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5159:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5181:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5173:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5202:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5185:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5185:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "5185:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5224:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5207:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5207:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 459,
													"nodeType": "ArrayTypeName",
													"src": "5207:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5158:73:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5249:0:1"
									},
									"scope": 1053,
									"src": "5142:1281:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "7193:509:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7211:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7217:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7221:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 622,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "7226:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 618,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "7203:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7203:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "7203:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7247:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7261:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7253:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 626,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7253:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7253:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7247:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 680,
												"nodeType": "IfStatement",
												"src": "7243:453:1",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "7265:431:1",
													"statements": [
														{
															"assignments": [
																632
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 632,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7287:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 679,
																	"src": "7279:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7279:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 635,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 633,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "7298:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7298:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7279:31:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 636,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "7328:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7332:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7328:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7342:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7328:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 677,
																"nodeType": "Block",
																"src": "7574:112:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 669,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7633:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 670,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7643:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 671,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7649:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 672,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7653:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 673,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7658:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 674,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7666:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"id": 666,
																					"name": "ERC1155Utils",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1388,
																					"src": "7592:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC1155Utils_$1388_$",
																						"typeString": "type(library ERC1155Utils)"
																					}
																				},
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7605:27:1",
																				"memberName": "checkOnERC1155BatchReceived",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1387,
																				"src": "7592:40:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7592:79:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 676,
																		"nodeType": "ExpressionStatement",
																		"src": "7592:79:1"
																	}
																]
															},
															"id": 678,
															"nodeType": "IfStatement",
															"src": "7324:362:1",
															"trueBody": {
																"id": 665,
																"nodeType": "Block",
																"src": "7345:223:1",
																"statements": [
																	{
																		"assignments": [
																			641
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 641,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7371:2:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 665,
																				"src": "7363:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 640,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7363:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 646,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7399:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 642,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7376:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7380:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2232,
																				"src": "7376:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7376:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7363:38:1"
																	},
																	{
																		"assignments": [
																			648
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 648,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7427:5:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 665,
																				"src": "7419:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 647,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7419:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 653,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7461:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 649,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7435:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7442:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2232,
																				"src": "7435:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7435:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7419:44:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 657,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7517:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 658,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7527:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 659,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7533:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 660,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "7537:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 661,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 648,
																					"src": "7541:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 662,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7548:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"id": 654,
																					"name": "ERC1155Utils",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1388,
																					"src": "7481:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC1155Utils_$1388_$",
																						"typeString": "type(library ERC1155Utils)"
																					}
																				},
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7494:22:1",
																				"memberName": "checkOnERC1155Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1313,
																				"src": "7481:35:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7481:72:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 664,
																		"nodeType": "ExpressionStatement",
																		"src": "7481:72:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "6429:568:1",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7011:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7055:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "7047:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7047:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7077:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "7069:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7106:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "7089:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7089:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 609,
													"nodeType": "ArrayTypeName",
													"src": "7089:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7136:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "7119:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7119:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "7119:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7165:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "7152:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7152:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7037:138:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7193:0:1"
									},
									"scope": 1053,
									"src": "7002:700:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "8267:355:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 696,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "8281:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8295:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8287:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 697,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8287:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8287:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8281:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 710,
												"nodeType": "IfStatement",
												"src": "8277:88:1",
												"trueBody": {
													"id": 709,
													"nodeType": "Block",
													"src": "8299:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 705,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8351:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8343:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 703,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8343:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8343:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 702,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8320:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8320:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 708,
															"nodeType": "RevertStatement",
															"src": "8313:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 711,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "8378:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8394:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8386:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 712,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8386:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8386:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8378:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 725,
												"nodeType": "IfStatement",
												"src": "8374:88:1",
												"trueBody": {
													"id": 724,
													"nodeType": "Block",
													"src": "8398:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8448:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8440:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 718,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8440:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8440:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 717,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "8419:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8419:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 723,
															"nodeType": "RevertStatement",
															"src": "8412:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													730,
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8489:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "8472:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 728,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8472:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 729,
															"nodeType": "ArrayTypeName",
															"src": "8472:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8511:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "8494:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 731,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8494:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 732,
															"nodeType": "ArrayTypeName",
															"src": "8494:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8540:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 736,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "8544:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 734,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "8521:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8521:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8471:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "8587:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "8593:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "8597:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 743,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "8602:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 744,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "8610:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 739,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "8560:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8560:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "8560:55:1"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "7708:446:1",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8168:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8194:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "8186:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8208:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "8200:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8200:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8220:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "8212:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8212:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8232:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "8224:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8224:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8252:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "8239:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8239:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8185:72:1"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8267:0:1"
									},
									"scope": 1053,
									"src": "8159:463:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "9202:266:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "9216:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9230:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9222:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 765,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9222:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9222:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9216:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "9212:88:1",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "9234:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9286:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9278:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 771,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9278:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9278:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 770,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "9255:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9255:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 776,
															"nodeType": "RevertStatement",
															"src": "9248:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 779,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "9313:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9321:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 780,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9321:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9321:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9313:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"nodeType": "IfStatement",
												"src": "9309:88:1",
												"trueBody": {
													"id": 792,
													"nodeType": "Block",
													"src": "9333:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 788,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9383:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9375:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 786,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9375:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9375:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 785,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "9354:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9354:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 791,
															"nodeType": "RevertStatement",
															"src": "9347:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 795,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "9433:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "9439:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "9443:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 798,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "9448:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 799,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "9456:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 794,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "9406:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9406:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "9406:55:1"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "8628:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9032:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9072:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "9064:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9064:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9094:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "9086:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9086:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9123:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "9106:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 754,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9106:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 755,
													"nodeType": "ArrayTypeName",
													"src": "9106:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9153:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "9136:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 757,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9136:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 758,
													"nodeType": "ArrayTypeName",
													"src": "9136:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9182:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "9169:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 760,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9169:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9054:138:1"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9202:0:1"
									},
									"scope": 1053,
									"src": "9023:445:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "10346:30:1",
										"statements": [
											{
												"expression": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 809,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "10356:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 810,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "10363:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10356:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "10356:13:1"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "9474:811:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10299:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10321:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "10307:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 805,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10307:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10306:22:1"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10346:0:1"
									},
									"scope": 1053,
									"src": "10290:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "10836:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 826,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "10850:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10864:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10856:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 827,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10856:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10856:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10850:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 840,
												"nodeType": "IfStatement",
												"src": "10846:88:1",
												"trueBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "10868:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10920:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10912:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 833,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10912:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10912:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 832,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "10889:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10889:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 838,
															"nodeType": "RevertStatement",
															"src": "10882:41:1"
														}
													]
												}
											},
											{
												"assignments": [
													845,
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 845,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10961:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 865,
														"src": "10944:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 843,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10944:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ArrayTypeName",
															"src": "10944:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10983:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 865,
														"src": "10966:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 846,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10966:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 847,
															"nodeType": "ArrayTypeName",
															"src": "10966:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 853,
												"initialValue": {
													"arguments": [
														{
															"id": 850,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11012:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 851,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "11016:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 849,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "10993:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10993:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10943:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11067:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11059:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 855,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11059:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11059:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "11071:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "11075:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 861,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "11080:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 862,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "11088:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 854,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "11032:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11032:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "11032:61:1"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "10382:367:1",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10763:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10777:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "10769:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10789:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "10781:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10801:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "10793:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10793:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10821:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "10808:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 822,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10808:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10768:58:1"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10836:0:1"
									},
									"scope": 1053,
									"src": "10754:346:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "11638:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 880,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "11652:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11666:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11658:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 881,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11658:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11658:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11652:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 894,
												"nodeType": "IfStatement",
												"src": "11648:88:1",
												"trueBody": {
													"id": 893,
													"nodeType": "Block",
													"src": "11670:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11722:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11714:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 887,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11714:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11714:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 886,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "11691:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11691:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 892,
															"nodeType": "RevertStatement",
															"src": "11684:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11780:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11772:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 896,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11772:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11772:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "11784:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "11788:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 902,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "11793:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 903,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "11801:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 895,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "11745:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11745:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "11745:61:1"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "11106:420:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11540:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11559:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "11551:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11580:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "11563:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 870,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11563:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 871,
													"nodeType": "ArrayTypeName",
													"src": "11563:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11602:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "11585:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 873,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11585:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 874,
													"nodeType": "ArrayTypeName",
													"src": "11585:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11623:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "11610:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11610:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11550:78:1"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11638:0:1"
									},
									"scope": 1053,
									"src": "11531:282:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "12172:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "12186:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12202:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12194:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12194:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12194:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12186:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 931,
												"nodeType": "IfStatement",
												"src": "12182:88:1",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "12206:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12256:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12248:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 924,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12248:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12248:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 923,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12227:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12227:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "RevertStatement",
															"src": "12220:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													936,
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12297:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "12280:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 934,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12280:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 935,
															"nodeType": "ArrayTypeName",
															"src": "12280:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12319:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "12302:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 937,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12302:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 938,
															"nodeType": "ArrayTypeName",
															"src": "12302:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"arguments": [
														{
															"id": 941,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "12348:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 942,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "12352:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 940,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "12329:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12329:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12279:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 946,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "12395:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12409:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12401:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 947,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12401:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12401:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "12413:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 952,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "12418:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12426:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 945,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "12368:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12368:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "12368:61:1"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "11819:283:1",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12116:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "12122:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12144:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "12136:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12156:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "12148:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12148:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12121:41:1"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12172:0:1"
									},
									"scope": 1053,
									"src": "12107:329:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "12882:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 969,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "12896:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12912:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12904:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 970,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12904:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12904:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12896:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 983,
												"nodeType": "IfStatement",
												"src": "12892:88:1",
												"trueBody": {
													"id": 982,
													"nodeType": "Block",
													"src": "12916:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12966:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12958:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 976,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12958:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12958:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 975,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12937:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12937:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 981,
															"nodeType": "RevertStatement",
															"src": "12930:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 985,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "13016:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13030:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13022:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 986,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13022:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13022:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "13034:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 991,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "13039:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13047:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 984,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "12989:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "12989:61:1"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "12442:345:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12801:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12820:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "12812:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12843:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "12826:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 961,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12826:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 962,
													"nodeType": "ArrayTypeName",
													"src": "12826:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12865:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "12848:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 964,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12848:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 965,
													"nodeType": "ArrayTypeName",
													"src": "12848:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12811:61:1"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12882:0:1"
									},
									"scope": 1053,
									"src": "12792:265:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "13369:222:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1006,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "13383:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13403:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13395:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1007,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13395:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13395:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13383:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1020,
												"nodeType": "IfStatement",
												"src": "13379:94:1",
												"trueBody": {
													"id": 1019,
													"nodeType": "Block",
													"src": "13407:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1015,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13459:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13451:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1013,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13451:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13451:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1012,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "13428:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13428:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1018,
															"nodeType": "RevertStatement",
															"src": "13421:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1021,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "13482:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1024,
															"indexExpression": {
																"id": 1022,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "13501:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13482:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1025,
														"indexExpression": {
															"id": 1023,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "13508:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13482:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1026,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "13520:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13482:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "13482:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1030,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "13558:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "13565:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "13575:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1029,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "13543:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13543:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "EmitStatement",
												"src": "13538:46:1"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "13063:208:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13285:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13312:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "13304:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13304:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13327:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "13319:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13319:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13342:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "13337:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13337:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13303:48:1"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13369:0:1"
									},
									"scope": 1053,
									"src": "13276:315:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "13865:664:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13900:623:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13958:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13974:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13968:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13968:11:1"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nodeType": "YulIdentifier",
																	"src": "13958:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "14036:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14044:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14029:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14029:17:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14029:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nodeType": "YulIdentifier",
																				"src": "14167:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14175:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14163:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14163:17:1"
																	},
																	{
																		"name": "element1",
																		"nodeType": "YulIdentifier",
																		"src": "14182:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14156:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14156:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14156:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14282:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "14296:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14304:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14292:17:1"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nodeType": "YulIdentifier",
																	"src": "14282:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nodeType": "YulIdentifier",
																		"src": "14329:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14337:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14322:17:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14322:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "14363:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14371:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14359:17:1"
																	},
																	{
																		"name": "element2",
																		"nodeType": "YulIdentifier",
																		"src": "14378:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14352:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14352:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14489:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "14499:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14507:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14495:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14495:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14482:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14482:31:1"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "13958:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "14036:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "14167:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "14296:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1048,
														"isOffset": false,
														"isSlot": false,
														"src": "14282:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1048,
														"isOffset": false,
														"isSlot": false,
														"src": "14329:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1048,
														"isOffset": false,
														"isSlot": false,
														"src": "14363:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1048,
														"isOffset": false,
														"isSlot": false,
														"src": "14499:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1039,
														"isOffset": false,
														"isSlot": false,
														"src": "14182:8:1",
														"valueSize": 1
													},
													{
														"declaration": 1041,
														"isOffset": false,
														"isSlot": false,
														"src": "14378:8:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1050,
												"nodeType": "InlineAssembly",
												"src": "13875:648:1"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "13597:105:1",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "13716:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "13752:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13744:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "13778:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13770:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13734:58:1"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "13832:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13815:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1043,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13815:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1044,
													"nodeType": "ArrayTypeName",
													"src": "13815:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "13857:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13840:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1046,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1047,
													"nodeType": "ArrayTypeName",
													"src": "13840:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13814:50:1"
									},
									"scope": 1053,
									"src": "13707:822:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1054,
							"src": "725:13806:1",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1073,
								1088,
								1097,
								1104
							]
						}
					],
					"src": "109:14423:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1176
						],
						"IERC165": [
							2670
						]
					},
					"id": 1177,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1055,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1057,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 2671,
							"src": "136:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1056,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2670,
										"src": "144:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1059,
										"name": "IERC165",
										"nameLocations": [
											"359:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2670,
										"src": "359:7:2"
									},
									"id": 1060,
									"nodeType": "InheritanceSpecifier",
									"src": "359:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1058,
								"nodeType": "StructuredDocumentation",
								"src": "200:136:2",
								"text": " @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."
							},
							"fullyImplemented": false,
							"id": 1176,
							"linearizedBaseContracts": [
								1176,
								2670
							],
							"name": "IERC1155",
							"nameLocation": "347:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "373:125:2",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1073,
									"name": "TransferSingle",
									"nameLocation": "509:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "540:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "524:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "566:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "550:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "588:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "572:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "600:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "592:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "612:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "604:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:95:2"
									},
									"src": "503:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "625:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1088,
									"name": "TransferBatch",
									"nameLocation": "780:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "819:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "803:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "853:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "837:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "883:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "867:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "905:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "895:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1081,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "895:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1082,
													"nodeType": "ArrayTypeName",
													"src": "895:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "928:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "918:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1084,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "918:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1085,
													"nodeType": "ArrayTypeName",
													"src": "918:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:147:2"
									},
									"src": "774:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "947:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1097,
									"name": "ApprovalForAll",
									"nameLocation": "1105:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1136:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1120:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1145:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1176:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1171:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:66:2"
									},
									"src": "1099:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "1192:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1104,
									"name": "URI",
									"nameLocation": "1546:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1557:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1550:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1099,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1550:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1580:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1564:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:34:2"
									},
									"src": "1540:44:2"
								},
								{
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "1590:90:2",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`."
									},
									"functionSelector": "00fdd58e",
									"id": 1114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1694:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1712:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "1704:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1729:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "1721:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:29:2"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "1756:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:9:2"
									},
									"scope": 1176,
									"src": "1685:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "1771:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1973:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1997:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1116,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1997:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1117,
													"nodeType": "ArrayTypeName",
													"src": "1997:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2053:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "2034:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1119,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1120,
													"nodeType": "ArrayTypeName",
													"src": "2034:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:75:2"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "2086:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1123,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1124,
													"nodeType": "ArrayTypeName",
													"src": "2086:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:18:2"
									},
									"scope": 1176,
									"src": "1964:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "2110:254:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"functionSelector": "a22cb465",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2378:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2404:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "2396:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2419:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "2414:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2414:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:33:2"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:2"
									},
									"scope": 1176,
									"src": "2369:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "2444:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2593:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2618:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2610:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2635:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2627:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:35:2"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:6:2"
									},
									"scope": 1176,
									"src": "2584:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "2680:910:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3604:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3621:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3621:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3643:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3635:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3655:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3647:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3647:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3667:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3659:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3689:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3674:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3674:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:74:2"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3703:0:2"
									},
									"scope": 1176,
									"src": "3595:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "3710:814:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4538:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4577:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "4569:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4569:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4599:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "4591:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4630:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "4611:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1165,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4611:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1166,
													"nodeType": "ArrayTypeName",
													"src": "4611:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "4643:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1168,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1169,
													"nodeType": "ArrayTypeName",
													"src": "4643:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4693:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "4678:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4678:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:144:2"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4712:0:2"
									},
									"scope": 1176,
									"src": "4529:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1177,
							"src": "337:4378:2",
							"usedErrors": [],
							"usedEvents": [
								1073,
								1088,
								1097,
								1104
							]
						}
					],
					"src": "110:4606:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1218
						],
						"IERC165": [
							2670
						]
					},
					"id": 1219,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1178,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1219,
							"sourceUnit": 2671,
							"src": "144:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1179,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2670,
										"src": "152:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1182,
										"name": "IERC165",
										"nameLocations": [
											"357:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2670,
										"src": "357:7:3"
									},
									"id": 1183,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1181,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:3",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1218,
							"linearizedBaseContracts": [
								1218,
								2670
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "371:827:3",
										"text": " @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1212:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1247:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1239:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1273:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1265:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1295:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1287:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1315:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1307:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1345:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1330:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1330:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:126:3"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1374:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1196,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1374:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:8:3"
									},
									"scope": 1218,
									"src": "1203:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "1388:995:3",
										"text": " @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2397:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2437:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2429:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2463:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2455:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2496:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2477:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1205,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2477:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1206,
													"nodeType": "ArrayTypeName",
													"src": "2477:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2528:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2509:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1208,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1209,
													"nodeType": "ArrayTypeName",
													"src": "2509:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2559:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2544:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2544:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:150:3"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2588:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1214,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:8:3"
									},
									"scope": 1218,
									"src": "2388:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1219,
							"src": "327:2271:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2481:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1176
						],
						"IERC1155MetadataURI": [
							1234
						]
					},
					"id": 1235,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1220,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1222,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1235,
							"sourceUnit": 1177,
							"src": "158:41:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1221,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1176,
										"src": "166:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1224,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1176,
										"src": "399:8:4"
									},
									"id": 1225,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:4"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1223,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."
							},
							"fullyImplemented": false,
							"id": 1234,
							"linearizedBaseContracts": [
								1234,
								1176,
								2670
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "624:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:4"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "659:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:4"
									},
									"scope": 1234,
									"src": "611:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1235,
							"src": "366:310:4",
							"usedErrors": [],
							"usedEvents": [
								1073,
								1088,
								1097,
								1104
							]
						}
					],
					"src": "132:545:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol",
					"exportedSymbols": {
						"ERC1155Utils": [
							1388
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155Receiver": [
							1218
						]
					},
					"id": 1389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1236,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "120:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 1238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 1219,
							"src": "146:57:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1237,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1218,
										"src": "154:16:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../../interfaces/draft-IERC6093.sol",
							"id": 1240,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 137,
							"src": "204:70:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1239,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "212:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1155Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1241,
								"nodeType": "StructuredDocumentation",
								"src": "276:162:5",
								"text": " @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1388,
							"linearizedBaseContracts": [
								1388
							],
							"name": "ERC1155Utils",
							"nameLocation": "447:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "1183:774:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1257,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "1197:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1200:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1197:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1205:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1197:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1214:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1197:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "IfStatement",
												"src": "1193:758:5",
												"trueBody": {
													"id": 1310,
													"nodeType": "Block",
													"src": "1217:734:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1288,
																		"nodeType": "Block",
																		"src": "1333:221:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1279,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1275,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1273,
																						"src": "1355:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1276,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1218,
																								"src": "1367:16:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1218_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1277,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1384:17:5",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1199,
																							"src": "1367:34:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1278,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "1402:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1367:43:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1355:55:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1287,
																				"nodeType": "IfStatement",
																				"src": "1351:189:5",
																				"trueBody": {
																					"id": 1286,
																					"nodeType": "Block",
																					"src": "1412:128:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1283,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1248,
																										"src": "1518:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1280,
																										"name": "IERC1155Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 136,
																										"src": "1480:14:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC1155Errors_$136_$",
																											"typeString": "type(contract IERC1155Errors)"
																										}
																									},
																									"id": 1282,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1495:22:5",
																									"memberName": "ERC1155InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 111,
																									"src": "1480:37:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1284,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1480:41:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1285,
																							"nodeType": "RevertStatement",
																							"src": "1473:48:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1289,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1274,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1273,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "1323:8:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1289,
																				"src": "1316:15:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1272,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1316:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1315:17:5"
																	},
																	"src": "1307:247:5"
																},
																{
																	"block": {
																		"id": 1307,
																		"nodeType": "Block",
																		"src": "1583:358:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1293,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1291,
																							"src": "1605:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1294,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1612:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1605:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1295,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1622:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "1605:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1305,
																					"nodeType": "Block",
																					"src": "1776:151:5",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "1823:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "1860:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "1864:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "1856:3:5"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "1856:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "1879:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "1873:5:5"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "1873:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "1849:6:5"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "1849:38:5"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "1849:38:5"
																									}
																								]
																							},
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1291,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "1864:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1291,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "1879:6:5",
																									"valueSize": 1
																								}
																							],
																							"flags": [
																								"memory-safe"
																							],
																							"id": 1304,
																							"nodeType": "InlineAssembly",
																							"src": "1798:111:5"
																						}
																					]
																				},
																				"id": 1306,
																				"nodeType": "IfStatement",
																				"src": "1601:326:5",
																				"trueBody": {
																					"id": 1303,
																					"nodeType": "Block",
																					"src": "1625:145:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1300,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1248,
																										"src": "1748:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1297,
																										"name": "IERC1155Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 136,
																										"src": "1710:14:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC1155Errors_$136_$",
																											"typeString": "type(contract IERC1155Errors)"
																										}
																									},
																									"id": 1299,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1725:22:5",
																									"memberName": "ERC1155InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 111,
																									"src": "1710:37:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1301,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1710:41:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1302,
																							"nodeType": "RevertStatement",
																							"src": "1703:48:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1308,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1292,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1291,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "1575:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1308,
																				"src": "1562:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1290,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "1562:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1561:21:5"
																	},
																	"src": "1555:386:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1266,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "1274:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1267,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "1284:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1268,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1250,
																		"src": "1290:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1269,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1252,
																		"src": "1294:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1270,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "1301:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1263,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "1252:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1262,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "1235:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1218_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1235:20:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1218",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1256:17:5",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1199,
																	"src": "1235:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1235:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1309,
															"nodeType": "TryStatement",
															"src": "1231:710:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "466:527:5",
										"text": " @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."
									},
									"id": 1313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOnERC1155Received",
									"nameLocation": "1007:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1047:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1039:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1073:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1065:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1095:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1087:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1115:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1107:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1135:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1127:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1163:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1150:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1150:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:144:5"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1183:0:5"
									},
									"scope": 1388,
									"src": "998:959:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "2715:816:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1331,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "2729:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2732:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2729:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2737:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2729:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2746:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2729:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1385,
												"nodeType": "IfStatement",
												"src": "2725:800:5",
												"trueBody": {
													"id": 1384,
													"nodeType": "Block",
													"src": "2749:776:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1362,
																		"nodeType": "Block",
																		"src": "2902:226:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1349,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1347,
																						"src": "2924:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1350,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1218,
																								"src": "2936:16:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1218_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1351,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "2953:22:5",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1217,
																							"src": "2936:39:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1352,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "2976:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "2936:48:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "2924:60:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1361,
																				"nodeType": "IfStatement",
																				"src": "2920:194:5",
																				"trueBody": {
																					"id": 1360,
																					"nodeType": "Block",
																					"src": "2986:128:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1357,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1320,
																										"src": "3092:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1354,
																										"name": "IERC1155Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 136,
																										"src": "3054:14:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC1155Errors_$136_$",
																											"typeString": "type(contract IERC1155Errors)"
																										}
																									},
																									"id": 1356,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "3069:22:5",
																									"memberName": "ERC1155InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 111,
																									"src": "3054:37:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1358,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3054:41:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1359,
																							"nodeType": "RevertStatement",
																							"src": "3047:48:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1363,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1348,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1347,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "2879:8:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1363,
																				"src": "2872:15:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1346,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "2872:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "2854:47:5"
																	},
																	"src": "2846:282:5"
																},
																{
																	"block": {
																		"id": 1381,
																		"nodeType": "Block",
																		"src": "3157:358:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1370,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1367,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1365,
																							"src": "3179:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1368,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3186:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "3179:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1369,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3196:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "3179:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1379,
																					"nodeType": "Block",
																					"src": "3350:151:5",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "3397:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "3434:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "3438:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "3430:3:5"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "3430:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "3453:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "3447:5:5"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "3447:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "3423:6:5"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3423:38:5"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "3423:38:5"
																									}
																								]
																							},
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1365,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "3438:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1365,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "3453:6:5",
																									"valueSize": 1
																								}
																							],
																							"flags": [
																								"memory-safe"
																							],
																							"id": 1378,
																							"nodeType": "InlineAssembly",
																							"src": "3372:111:5"
																						}
																					]
																				},
																				"id": 1380,
																				"nodeType": "IfStatement",
																				"src": "3175:326:5",
																				"trueBody": {
																					"id": 1377,
																					"nodeType": "Block",
																					"src": "3199:145:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1374,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1320,
																										"src": "3322:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1371,
																										"name": "IERC1155Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 136,
																										"src": "3284:14:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC1155Errors_$136_$",
																											"typeString": "type(contract IERC1155Errors)"
																										}
																									},
																									"id": 1373,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "3299:22:5",
																									"memberName": "ERC1155InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 111,
																									"src": "3284:37:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1375,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3284:41:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1376,
																							"nodeType": "RevertStatement",
																							"src": "3277:48:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1382,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1366,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1365,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "3149:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1382,
																				"src": "3136:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1364,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "3136:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3135:21:5"
																	},
																	"src": "3129:386:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1340,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "2811:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1341,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "2821:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1342,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "2827:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1343,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "2832:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1344,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "2840:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1337,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "2784:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1336,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "2767:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1218_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2767:20:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1218",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2788:22:5",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1217,
																	"src": "2767:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2767:78:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1383,
															"nodeType": "TryStatement",
															"src": "2763:752:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "1963:537:5",
										"text": " @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOnERC1155BatchReceived",
									"nameLocation": "2514:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2559:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2551:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2585:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2577:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2607:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2599:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2599:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2636:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2619:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1321,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2619:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1322,
													"nodeType": "ArrayTypeName",
													"src": "2619:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2666:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2649:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1324,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2649:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1325,
													"nodeType": "ArrayTypeName",
													"src": "2649:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2695:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2682:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2682:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:164:5"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2715:0:5"
									},
									"scope": 1388,
									"src": "2505:1026:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1389,
							"src": "439:3094:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "120:3414:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							2266
						],
						"Comparators": [
							2298
						],
						"Math": [
							4276
						],
						"SlotDerivation": [
							2510
						],
						"StorageSlot": [
							2634
						]
					},
					"id": 2267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "183:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Comparators.sol",
							"file": "./Comparators.sol",
							"id": 1392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2267,
							"sourceUnit": 2299,
							"src": "209:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1391,
										"name": "Comparators",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2298,
										"src": "217:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/SlotDerivation.sol",
							"file": "./SlotDerivation.sol",
							"id": 1394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2267,
							"sourceUnit": 2511,
							"src": "256:52:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1393,
										"name": "SlotDerivation",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2510,
										"src": "264:14:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2267,
							"sourceUnit": 2635,
							"src": "309:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1395,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2634,
										"src": "317:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2267,
							"sourceUnit": 4277,
							"src": "356:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1397,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4276,
										"src": "364:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1399,
								"nodeType": "StructuredDocumentation",
								"src": "395:63:6",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 2266,
							"linearizedBaseContracts": [
								2266
							],
							"name": "Arrays",
							"nameLocation": "467:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1402,
									"libraryName": {
										"id": 1400,
										"name": "SlotDerivation",
										"nameLocations": [
											"486:14:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2510,
										"src": "486:14:6"
									},
									"nodeType": "UsingForDirective",
									"src": "480:33:6",
									"typeName": {
										"id": 1401,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "505:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"global": false,
									"id": 1405,
									"libraryName": {
										"id": 1403,
										"name": "StorageSlot",
										"nameLocations": [
											"524:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2634,
										"src": "524:11:6"
									},
									"nodeType": "UsingForDirective",
									"src": "518:30:6",
									"typeName": {
										"id": 1404,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "540:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "1628:83:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1427,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "1656:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																],
																"id": 1426,
																"name": "_begin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "1649:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (uint256[] memory) pure returns (uint256)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1649:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1430,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "1669:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																],
																"id": 1429,
																"name": "_end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "1664:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (uint256[] memory) pure returns (uint256)"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1664:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1432,
															"name": "comp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "1677:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														],
														"id": 1425,
														"name": "_quickSort",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "1638:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$",
															"typeString": "function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "1638:44:6"
											},
											{
												"expression": {
													"id": 1435,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1409,
													"src": "1699:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1424,
												"id": 1436,
												"nodeType": "Return",
												"src": "1692:12:6"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "554:915:6",
										"text": " @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sort",
									"nameLocation": "1483:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "1514:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1497:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1407,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1497:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1408,
													"nodeType": "ArrayTypeName",
													"src": "1497:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "comp",
												"nameLocation": "1576:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1529:51:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
													"typeString": "function (uint256,uint256) pure returns (bool)"
												},
												"typeName": {
													"id": 1418,
													"nodeType": "FunctionTypeName",
													"parameterTypes": {
														"id": 1414,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1411,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1418,
																"src": "1538:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1410,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1538:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1413,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1418,
																"src": "1547:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1412,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "1537:18:6"
													},
													"returnParameterTypes": {
														"id": 1417,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1416,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1418,
																"src": "1570:4:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 1415,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "1570:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "1569:6:6"
													},
													"src": "1529:51:6",
													"stateMutability": "pure",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
														"typeString": "function (uint256,uint256) pure returns (bool)"
													},
													"visibility": "internal"
												},
												"visibility": "internal"
											}
										],
										"src": "1487:99:6"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1610:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1421,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1610:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1422,
													"nodeType": "ArrayTypeName",
													"src": "1610:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:18:6"
									},
									"scope": 2266,
									"src": "1474:237:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "1894:66:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1449,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "1909:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"expression": {
																"id": 1450,
																"name": "Comparators",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "1916:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Comparators_$2298_$",
																	"typeString": "type(library Comparators)"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1928:2:6",
															"memberName": "lt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2283,
															"src": "1916:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														],
														"id": 1448,
														"name": "sort",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1438,
															1457,
															1489,
															1510,
															1542,
															1563
														],
														"referencedDeclaration": 1438,
														"src": "1904:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1904:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "1904:27:6"
											},
											{
												"expression": {
													"id": 1454,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1442,
													"src": "1948:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1447,
												"id": 1455,
												"nodeType": "Return",
												"src": "1941:12:6"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "1717:93:6",
										"text": " @dev Variant of {sort} that sorts an array of uint256 in increasing order."
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sort",
									"nameLocation": "1824:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "1846:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1829:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1440,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1829:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1441,
													"nodeType": "ArrayTypeName",
													"src": "1829:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1828:24:6"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1876:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1444,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1876:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1445,
													"nodeType": "ArrayTypeName",
													"src": "1876:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1875:18:6"
									},
									"scope": 2266,
									"src": "1815:145:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "3040:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1479,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "3075:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																],
																"id": 1478,
																"name": "_castToUint256Array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1714,
																	1726
																],
																"referencedDeclaration": 1714,
																"src": "3055:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (address[] memory) pure returns (uint256[] memory)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3055:26:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1482,
																	"name": "comp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "3102:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) pure returns (bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) pure returns (bool)"
																	}
																],
																"id": 1481,
																"name": "_castToUint256Comp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1752,
																	1778
																],
																"referencedDeclaration": 1752,
																"src": "3083:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$",
																	"typeString": "function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3083:24:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														],
														"id": 1477,
														"name": "sort",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1438,
															1457,
															1489,
															1510,
															1542,
															1563
														],
														"referencedDeclaration": 1438,
														"src": "3050:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3050:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1485,
												"nodeType": "ExpressionStatement",
												"src": "3050:58:6"
											},
											{
												"expression": {
													"id": 1486,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1461,
													"src": "3125:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1487,
												"nodeType": "Return",
												"src": "3118:12:6"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "1966:915:6",
										"text": " @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."
									},
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sort",
									"nameLocation": "2895:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "2926:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2909:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1459,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2909:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1460,
													"nodeType": "ArrayTypeName",
													"src": "2909:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "comp",
												"nameLocation": "2988:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "2941:51:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$",
													"typeString": "function (address,address) pure returns (bool)"
												},
												"typeName": {
													"id": 1470,
													"nodeType": "FunctionTypeName",
													"parameterTypes": {
														"id": 1466,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1463,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1470,
																"src": "2950:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1462,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2950:7:6",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1465,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1470,
																"src": "2959:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1464,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2959:7:6",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "2949:18:6"
													},
													"returnParameterTypes": {
														"id": 1469,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1468,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1470,
																"src": "2982:4:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 1467,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "2982:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "2981:6:6"
													},
													"src": "2941:51:6",
													"stateMutability": "pure",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$",
														"typeString": "function (address,address) pure returns (bool)"
													},
													"visibility": "internal"
												},
												"visibility": "internal"
											}
										],
										"src": "2899:99:6"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3022:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1473,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3022:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1474,
													"nodeType": "ArrayTypeName",
													"src": "3022:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3021:18:6"
									},
									"scope": 2266,
									"src": "2886:251:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "3320:87:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1501,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "3355:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																],
																"id": 1500,
																"name": "_castToUint256Array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1714,
																	1726
																],
																"referencedDeclaration": 1714,
																"src": "3335:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (address[] memory) pure returns (uint256[] memory)"
																}
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3335:26:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"expression": {
																"id": 1503,
																"name": "Comparators",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "3363:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Comparators_$2298_$",
																	"typeString": "type(library Comparators)"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3375:2:6",
															"memberName": "lt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2283,
															"src": "3363:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														],
														"id": 1499,
														"name": "sort",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1438,
															1457,
															1489,
															1510,
															1542,
															1563
														],
														"referencedDeclaration": 1438,
														"src": "3330:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3330:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "3330:48:6"
											},
											{
												"expression": {
													"id": 1507,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1493,
													"src": "3395:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1508,
												"nodeType": "Return",
												"src": "3388:12:6"
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "3143:93:6",
										"text": " @dev Variant of {sort} that sorts an array of address in increasing order."
									},
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sort",
									"nameLocation": "3250:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "3272:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "3255:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1491,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3255:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1492,
													"nodeType": "ArrayTypeName",
													"src": "3255:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:24:6"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "3302:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1495,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3302:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1496,
													"nodeType": "ArrayTypeName",
													"src": "3302:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3301:18:6"
									},
									"scope": 2266,
									"src": "3241:166:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "4487:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1532,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "4522:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																],
																"id": 1531,
																"name": "_castToUint256Array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1714,
																	1726
																],
																"referencedDeclaration": 1726,
																"src": "4502:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (bytes32[] memory) pure returns (uint256[] memory)"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4502:26:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1535,
																	"name": "comp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1524,
																	"src": "4549:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (bytes32,bytes32) pure returns (bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (bytes32,bytes32) pure returns (bool)"
																	}
																],
																"id": 1534,
																"name": "_castToUint256Comp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1752,
																	1778
																],
																"referencedDeclaration": 1778,
																"src": "4530:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$",
																	"typeString": "function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4530:24:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														],
														"id": 1530,
														"name": "sort",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1438,
															1457,
															1489,
															1510,
															1542,
															1563
														],
														"referencedDeclaration": 1438,
														"src": "4497:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4497:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "4497:58:6"
											},
											{
												"expression": {
													"id": 1539,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1514,
													"src": "4572:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1540,
												"nodeType": "Return",
												"src": "4565:12:6"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "3413:915:6",
										"text": " @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sort",
									"nameLocation": "4342:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4373:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "4356:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1512,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4356:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1513,
													"nodeType": "ArrayTypeName",
													"src": "4356:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "comp",
												"nameLocation": "4435:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "4388:51:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
													"typeString": "function (bytes32,bytes32) pure returns (bool)"
												},
												"typeName": {
													"id": 1523,
													"nodeType": "FunctionTypeName",
													"parameterTypes": {
														"id": 1519,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1516,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1523,
																"src": "4397:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1515,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4397:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1518,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1523,
																"src": "4406:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1517,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4406:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "4396:18:6"
													},
													"returnParameterTypes": {
														"id": 1522,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1521,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1523,
																"src": "4429:4:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 1520,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "4429:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "4428:6:6"
													},
													"src": "4388:51:6",
													"stateMutability": "pure",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
														"typeString": "function (bytes32,bytes32) pure returns (bool)"
													},
													"visibility": "internal"
												},
												"visibility": "internal"
											}
										],
										"src": "4346:99:6"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "4469:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1526,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4469:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1527,
													"nodeType": "ArrayTypeName",
													"src": "4469:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4468:18:6"
									},
									"scope": 2266,
									"src": "4333:251:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "4767:87:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1554,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "4802:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																],
																"id": 1553,
																"name": "_castToUint256Array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1714,
																	1726
																],
																"referencedDeclaration": 1726,
																"src": "4782:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (bytes32[] memory) pure returns (uint256[] memory)"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:26:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"expression": {
																"id": 1556,
																"name": "Comparators",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "4810:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Comparators_$2298_$",
																	"typeString": "type(library Comparators)"
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4822:2:6",
															"memberName": "lt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2283,
															"src": "4810:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) pure returns (bool)"
															}
														],
														"id": 1552,
														"name": "sort",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1438,
															1457,
															1489,
															1510,
															1542,
															1563
														],
														"referencedDeclaration": 1438,
														"src": "4777:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4777:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "4777:48:6"
											},
											{
												"expression": {
													"id": 1560,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1546,
													"src": "4842:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1551,
												"id": 1561,
												"nodeType": "Return",
												"src": "4835:12:6"
											}
										]
									},
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "4590:93:6",
										"text": " @dev Variant of {sort} that sorts an array of bytes32 in increasing order."
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sort",
									"nameLocation": "4697:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4719:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "4702:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1544,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4702:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1545,
													"nodeType": "ArrayTypeName",
													"src": "4702:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:24:6"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "4749:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1548,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4749:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1549,
													"nodeType": "ArrayTypeName",
													"src": "4749:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4748:18:6"
									},
									"scope": 2266,
									"src": "4688:166:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "5470:889:6",
										"statements": [
											{
												"id": 1649,
												"nodeType": "UncheckedBlock",
												"src": "5480:873:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1581,
																	"name": "end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "5508:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1582,
																	"name": "begin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "5514:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5508:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "30783430",
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5522:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "0x40"
															},
															"src": "5508:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1587,
														"nodeType": "IfStatement",
														"src": "5504:31:6",
														"trueBody": {
															"functionReturnParameters": 1580,
															"id": 1586,
															"nodeType": "Return",
															"src": "5528:7:6"
														}
													},
													{
														"assignments": [
															1589
														],
														"declarations": [
															{
																"constant": false,
																"id": 1589,
																"mutability": "mutable",
																"name": "pivot",
																"nameLocation": "5599:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1649,
																"src": "5591:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1588,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5591:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1593,
														"initialValue": {
															"arguments": [
																{
																	"id": 1591,
																	"name": "begin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "5614:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1590,
																"name": "_mload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "5607:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5607:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5591:29:6"
													},
													{
														"assignments": [
															1595
														],
														"declarations": [
															{
																"constant": false,
																"id": 1595,
																"mutability": "mutable",
																"name": "pos",
																"nameLocation": "5715:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1649,
																"src": "5707:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1594,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5707:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1597,
														"initialValue": {
															"id": 1596,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "5721:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5707:19:6"
													},
													{
														"body": {
															"id": 1628,
															"nodeType": "Block",
															"src": "5795:331:6",
															"statements": [
																{
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1613,
																						"name": "it",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1599,
																						"src": "5829:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1612,
																					"name": "_mload",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1692,
																					"src": "5822:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5822:10:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1615,
																				"name": "pivot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1589,
																				"src": "5834:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1611,
																			"name": "comp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1578,
																			"src": "5817:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (uint256,uint256) pure returns (bool)"
																			}
																		},
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5817:23:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1627,
																	"nodeType": "IfStatement",
																	"src": "5813:299:6",
																	"trueBody": {
																		"id": 1626,
																		"nodeType": "Block",
																		"src": "5842:270:6",
																		"statements": [
																			{
																				"expression": {
																					"id": 1619,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1617,
																						"name": "pos",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "6046:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"hexValue": "30783230",
																						"id": 1618,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6053:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "0x20"
																					},
																					"src": "6046:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1620,
																				"nodeType": "ExpressionStatement",
																				"src": "6046:11:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1622,
																							"name": "pos",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1595,
																							"src": "6085:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1623,
																							"name": "it",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1599,
																							"src": "6090:2:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1621,
																						"name": "_swap",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1702,
																						"src": "6079:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
																							"typeString": "function (uint256,uint256) pure"
																						}
																					},
																					"id": 1624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6079:14:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1625,
																				"nodeType": "ExpressionStatement",
																				"src": "6079:14:6"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1604,
																"name": "it",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "5773:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1605,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "5778:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5773:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1629,
														"initializationExpression": {
															"assignments": [
																1599
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1599,
																	"mutability": "mutable",
																	"name": "it",
																	"nameLocation": "5754:2:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1629,
																	"src": "5746:10:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1598,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5746:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1603,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1600,
																	"name": "begin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "5759:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "30783230",
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5767:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "0x20"
																},
																"src": "5759:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5746:25:6"
														},
														"loopExpression": {
															"expression": {
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1607,
																	"name": "it",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "5783:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "30783230",
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5789:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "0x20"
																},
																"src": "5783:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1610,
															"nodeType": "ExpressionStatement",
															"src": "5783:10:6"
														},
														"nodeType": "ForStatement",
														"src": "5741:385:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1631,
																	"name": "begin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "6146:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1632,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "6153:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1630,
																"name": "_swap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "6140:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
																	"typeString": "function (uint256,uint256) pure"
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6140:17:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1634,
														"nodeType": "ExpressionStatement",
														"src": "6140:17:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1636,
																	"name": "begin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "6207:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1637,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "6214:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1638,
																	"name": "comp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1578,
																	"src": "6219:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256,uint256) pure returns (bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256,uint256) pure returns (bool)"
																	}
																],
																"id": 1635,
																"name": "_quickSort",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "6196:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$",
																	"typeString": "function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"
																}
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6196:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1640,
														"nodeType": "ExpressionStatement",
														"src": "6196:28:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1642,
																		"name": "pos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "6284:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "30783230",
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6290:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "0x20"
																	},
																	"src": "6284:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1645,
																	"name": "end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "6296:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1646,
																	"name": "comp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1578,
																	"src": "6301:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256,uint256) pure returns (bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256,uint256) pure returns (bool)"
																	}
																],
																"id": 1641,
																"name": "_quickSort",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "6273:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$",
																	"typeString": "function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"
																}
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6273:33:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1648,
														"nodeType": "ExpressionStatement",
														"src": "6273:33:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "4860:491:6",
										"text": " @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_quickSort",
									"nameLocation": "5365:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "5384:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5376:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5376:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "5399:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5391:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5391:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "comp",
												"nameLocation": "5451:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5404:51:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
													"typeString": "function (uint256,uint256) pure returns (bool)"
												},
												"typeName": {
													"id": 1577,
													"nodeType": "FunctionTypeName",
													"parameterTypes": {
														"id": 1573,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1570,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1577,
																"src": "5413:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1569,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5413:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1572,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1577,
																"src": "5422:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1571,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5422:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "5412:18:6"
													},
													"returnParameterTypes": {
														"id": 1576,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1575,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1577,
																"src": "5445:4:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 1574,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "5445:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "5444:6:6"
													},
													"src": "5404:51:6",
													"stateMutability": "pure",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
														"typeString": "function (uint256,uint256) pure returns (bool)"
													},
													"visibility": "internal"
												},
												"visibility": "internal"
											}
										],
										"src": "5375:81:6"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5470:0:6"
									},
									"scope": 2266,
									"src": "5356:1003:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "6532:88:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6567:47:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6581:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6592:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6599:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6588:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:16:6"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6581:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1655,
														"isOffset": false,
														"isSlot": false,
														"src": "6592:5:6",
														"valueSize": 1
													},
													{
														"declaration": 1658,
														"isOffset": false,
														"isSlot": false,
														"src": "6581:3:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1660,
												"nodeType": "InlineAssembly",
												"src": "6542:72:6"
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "6365:87:6",
										"text": " @dev Pointer to the memory location of the first element of `array`."
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_begin",
									"nameLocation": "6466:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "6490:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "6473:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1653,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6473:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1654,
													"nodeType": "ArrayTypeName",
													"src": "6473:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6472:24:6"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "ptr",
												"nameLocation": "6527:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "6519:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6519:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:13:6"
									},
									"scope": 2266,
									"src": "6457:163:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "6892:93:6",
										"statements": [
											{
												"id": 1680,
												"nodeType": "UncheckedBlock",
												"src": "6902:77:6",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1672,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1666,
																		"src": "6940:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 1671,
																	"name": "_begin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "6933:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (uint256[] memory) pure returns (uint256)"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6933:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1674,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1666,
																		"src": "6949:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6955:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6949:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "30783230",
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6964:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "0x20"
																},
																"src": "6949:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6933:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1670,
														"id": 1679,
														"nodeType": "Return",
														"src": "6926:42:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "6626:188:6",
										"text": " @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."
									},
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_end",
									"nameLocation": "6828:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "6850:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "6833:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1664,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6833:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1665,
													"nodeType": "ArrayTypeName",
													"src": "6833:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6832:24:6"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "ptr",
												"nameLocation": "6887:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "6879:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6878:13:6"
									},
									"scope": 2266,
									"src": "6819:166:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "7136:68:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7155:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7169:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7184:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7178:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7178:10:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7169:5:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1685,
														"isOffset": false,
														"isSlot": false,
														"src": "7184:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1688,
														"isOffset": false,
														"isSlot": false,
														"src": "7169:5:6",
														"valueSize": 1
													}
												],
												"id": 1690,
												"nodeType": "InlineAssembly",
												"src": "7146:52:6"
											}
										]
									},
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "6991:74:6",
										"text": " @dev Load memory word (as a uint256) at location `ptr`."
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mload",
									"nameLocation": "7079:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "ptr",
												"nameLocation": "7094:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "7086:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7085:13:6"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7129:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "7121:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7120:15:6"
									},
									"scope": 2266,
									"src": "7070:134:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "7348:178:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7367:153:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7381:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr1",
																		"nodeType": "YulIdentifier",
																		"src": "7401:4:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7395:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7395:11:6"
															},
															"variables": [
																{
																	"name": "value1",
																	"nodeType": "YulTypedName",
																	"src": "7385:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7419:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr2",
																		"nodeType": "YulIdentifier",
																		"src": "7439:4:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7433:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:11:6"
															},
															"variables": [
																{
																	"name": "value2",
																	"nodeType": "YulTypedName",
																	"src": "7423:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr1",
																		"nodeType": "YulIdentifier",
																		"src": "7464:4:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7470:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7457:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7457:20:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7457:20:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr2",
																		"nodeType": "YulIdentifier",
																		"src": "7497:4:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7503:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7490:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7490:20:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7490:20:6"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "7401:4:6",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "7464:4:6",
														"valueSize": 1
													},
													{
														"declaration": 1697,
														"isOffset": false,
														"isSlot": false,
														"src": "7439:4:6",
														"valueSize": 1
													},
													{
														"declaration": 1697,
														"isOffset": false,
														"isSlot": false,
														"src": "7497:4:6",
														"valueSize": 1
													}
												],
												"id": 1700,
												"nodeType": "InlineAssembly",
												"src": "7358:162:6"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "7210:77:6",
										"text": " @dev Swaps the elements memory location `ptr1` and `ptr2`."
									},
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swap",
									"nameLocation": "7301:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "ptr1",
												"nameLocation": "7315:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "7307:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7307:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "ptr2",
												"nameLocation": "7329:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "7321:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7321:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7306:28:6"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7348:0:6"
									},
									"scope": 2266,
									"src": "7292:234:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "7713:64:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7732:39:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7746:15:6",
															"value": {
																"name": "input",
																"nodeType": "YulIdentifier",
																"src": "7756:5:6"
															},
															"variableNames": [
																{
																	"name": "output",
																	"nodeType": "YulIdentifier",
																	"src": "7746:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1706,
														"isOffset": false,
														"isSlot": false,
														"src": "7756:5:6",
														"valueSize": 1
													},
													{
														"declaration": 1710,
														"isOffset": false,
														"isSlot": false,
														"src": "7746:6:6",
														"valueSize": 1
													}
												],
												"id": 1712,
												"nodeType": "InlineAssembly",
												"src": "7723:48:6"
											}
										]
									},
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "7532:76:6",
										"text": "@dev Helper: low level cast address memory array to uint256 memory array"
									},
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_castToUint256Array",
									"nameLocation": "7622:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "7659:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "7642:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1704,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7642:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1705,
													"nodeType": "ArrayTypeName",
													"src": "7642:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7641:24:6"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "7705:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "7688:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1708,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7688:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1709,
													"nodeType": "ArrayTypeName",
													"src": "7688:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7687:25:6"
									},
									"scope": 2266,
									"src": "7613:164:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "7964:64:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7983:39:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7997:15:6",
															"value": {
																"name": "input",
																"nodeType": "YulIdentifier",
																"src": "8007:5:6"
															},
															"variableNames": [
																{
																	"name": "output",
																	"nodeType": "YulIdentifier",
																	"src": "7997:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1718,
														"isOffset": false,
														"isSlot": false,
														"src": "8007:5:6",
														"valueSize": 1
													},
													{
														"declaration": 1722,
														"isOffset": false,
														"isSlot": false,
														"src": "7997:6:6",
														"valueSize": 1
													}
												],
												"id": 1724,
												"nodeType": "InlineAssembly",
												"src": "7974:48:6"
											}
										]
									},
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "7783:76:6",
										"text": "@dev Helper: low level cast bytes32 memory array to uint256 memory array"
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_castToUint256Array",
									"nameLocation": "7873:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "7910:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "7893:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1716,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7893:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1717,
													"nodeType": "ArrayTypeName",
													"src": "7893:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7892:24:6"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "7956:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "7939:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1720,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7939:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1721,
													"nodeType": "ArrayTypeName",
													"src": "7939:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7938:25:6"
									},
									"scope": 2266,
									"src": "7864:164:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "8290:64:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8309:39:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8323:15:6",
															"value": {
																"name": "input",
																"nodeType": "YulIdentifier",
																"src": "8333:5:6"
															},
															"variableNames": [
																{
																	"name": "output",
																	"nodeType": "YulIdentifier",
																	"src": "8323:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1737,
														"isOffset": false,
														"isSlot": false,
														"src": "8333:5:6",
														"valueSize": 1
													},
													{
														"declaration": 1748,
														"isOffset": false,
														"isSlot": false,
														"src": "8323:6:6",
														"valueSize": 1
													}
												],
												"id": 1750,
												"nodeType": "InlineAssembly",
												"src": "8300:48:6"
											}
										]
									},
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "8034:78:6",
										"text": "@dev Helper: low level cast address comp function to uint256 comp function"
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_castToUint256Comp",
									"nameLocation": "8126:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "8201:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "8154:52:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$",
													"typeString": "function (address,address) pure returns (bool)"
												},
												"typeName": {
													"id": 1736,
													"nodeType": "FunctionTypeName",
													"parameterTypes": {
														"id": 1732,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1729,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1736,
																"src": "8163:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1728,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8163:7:6",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1731,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1736,
																"src": "8172:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8172:7:6",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "8162:18:6"
													},
													"returnParameterTypes": {
														"id": 1735,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1734,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1736,
																"src": "8195:4:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 1733,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "8195:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "8194:6:6"
													},
													"src": "8154:52:6",
													"stateMutability": "pure",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$",
														"typeString": "function (address,address) pure returns (bool)"
													},
													"visibility": "internal"
												},
												"visibility": "internal"
											}
										],
										"src": "8144:68:6"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "8282:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "8235:53:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
													"typeString": "function (uint256,uint256) pure returns (bool)"
												},
												"typeName": {
													"id": 1747,
													"nodeType": "FunctionTypeName",
													"parameterTypes": {
														"id": 1743,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1740,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1747,
																"src": "8244:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1739,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8244:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1742,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1747,
																"src": "8253:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1741,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8253:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "8243:18:6"
													},
													"returnParameterTypes": {
														"id": 1746,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1745,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1747,
																"src": "8276:4:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 1744,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "8276:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "8275:6:6"
													},
													"src": "8235:53:6",
													"stateMutability": "pure",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
														"typeString": "function (uint256,uint256) pure returns (bool)"
													},
													"visibility": "internal"
												},
												"visibility": "internal"
											}
										],
										"src": "8234:55:6"
									},
									"scope": 2266,
									"src": "8117:237:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "8616:64:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8635:39:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8649:15:6",
															"value": {
																"name": "input",
																"nodeType": "YulIdentifier",
																"src": "8659:5:6"
															},
															"variableNames": [
																{
																	"name": "output",
																	"nodeType": "YulIdentifier",
																	"src": "8649:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1763,
														"isOffset": false,
														"isSlot": false,
														"src": "8659:5:6",
														"valueSize": 1
													},
													{
														"declaration": 1774,
														"isOffset": false,
														"isSlot": false,
														"src": "8649:6:6",
														"valueSize": 1
													}
												],
												"id": 1776,
												"nodeType": "InlineAssembly",
												"src": "8626:48:6"
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "8360:78:6",
										"text": "@dev Helper: low level cast bytes32 comp function to uint256 comp function"
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_castToUint256Comp",
									"nameLocation": "8452:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "8527:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "8480:52:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
													"typeString": "function (bytes32,bytes32) pure returns (bool)"
												},
												"typeName": {
													"id": 1762,
													"nodeType": "FunctionTypeName",
													"parameterTypes": {
														"id": 1758,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1755,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1762,
																"src": "8489:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1754,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8489:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1757,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1762,
																"src": "8498:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1756,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8498:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "8488:18:6"
													},
													"returnParameterTypes": {
														"id": 1761,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1760,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1762,
																"src": "8521:4:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 1759,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "8521:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "8520:6:6"
													},
													"src": "8480:52:6",
													"stateMutability": "pure",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
														"typeString": "function (bytes32,bytes32) pure returns (bool)"
													},
													"visibility": "internal"
												},
												"visibility": "internal"
											}
										],
										"src": "8470:68:6"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "8608:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "8561:53:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
													"typeString": "function (uint256,uint256) pure returns (bool)"
												},
												"typeName": {
													"id": 1773,
													"nodeType": "FunctionTypeName",
													"parameterTypes": {
														"id": 1769,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1766,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1773,
																"src": "8570:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1765,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8570:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1768,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1773,
																"src": "8579:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1767,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8579:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "8569:18:6"
													},
													"returnParameterTypes": {
														"id": 1772,
														"nodeType": "ParameterList",
														"parameters": [
															{
																"constant": false,
																"id": 1771,
																"mutability": "mutable",
																"name": "",
																"nameLocation": "-1:-1:-1",
																"nodeType": "VariableDeclaration",
																"scope": 1773,
																"src": "8602:4:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 1770,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "8602:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"src": "8601:6:6"
													},
													"src": "8561:53:6",
													"stateMutability": "pure",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
														"typeString": "function (uint256,uint256) pure returns (bool)"
													},
													"visibility": "internal"
												},
												"visibility": "internal"
											}
										],
										"src": "8560:55:6"
									},
									"scope": 2266,
									"src": "8443:237:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "9405:834:6",
										"statements": [
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "9423:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1860,
														"src": "9415:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9415:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"hexValue": "30",
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9429:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9415:15:6"
											},
											{
												"assignments": [
													1794
												],
												"declarations": [
													{
														"constant": false,
														"id": 1794,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "9448:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1860,
														"src": "9440:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1793,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9440:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1797,
												"initialValue": {
													"expression": {
														"id": 1795,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "9455:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9461:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "9455:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9440:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1798,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "9482:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9490:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9482:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1804,
												"nodeType": "IfStatement",
												"src": "9478:48:6",
												"trueBody": {
													"id": 1803,
													"nodeType": "Block",
													"src": "9493:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9514:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1788,
															"id": 1802,
															"nodeType": "Return",
															"src": "9507:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 1836,
													"nodeType": "Block",
													"src": "9555:423:6",
													"statements": [
														{
															"assignments": [
																1809
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1809,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "9577:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1836,
																	"src": "9569:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1808,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9569:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1815,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1812,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "9596:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1813,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "9601:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1810,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4276,
																		"src": "9583:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$4276_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9588:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2928,
																	"src": "9583:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9583:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9569:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1817,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1782,
																				"src": "9844:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1818,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1809,
																				"src": "9851:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1816,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				2141,
																				2167,
																				2193
																			],
																			"referencedDeclaration": 2193,
																			"src": "9831:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2525_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9831:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$2525_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9856:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2524,
																	"src": "9831:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1821,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "9864:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9831:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1834,
																"nodeType": "Block",
																"src": "9922:46:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1828,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1790,
																				"src": "9940:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1829,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1809,
																					"src": "9946:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1830,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9952:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "9946:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9940:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1833,
																		"nodeType": "ExpressionStatement",
																		"src": "9940:13:6"
																	}
																]
															},
															"id": 1835,
															"nodeType": "IfStatement",
															"src": "9827:141:6",
															"trueBody": {
																"id": 1827,
																"nodeType": "Block",
																"src": "9873:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1823,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "9891:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1824,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1809,
																				"src": "9898:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9891:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1826,
																		"nodeType": "ExpressionStatement",
																		"src": "9891:10:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1805,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "9543:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1806,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "9549:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9543:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1837,
												"nodeType": "WhileStatement",
												"src": "9536:442:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1838,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "10095:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10101:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10095:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1842,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1782,
																		"src": "10119:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1843,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "10126:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10132:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10126:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1841,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2141,
																		2167,
																		2193
																	],
																	"referencedDeclaration": 2193,
																	"src": "10106:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2525_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10106:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$2525_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10135:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2524,
															"src": "10106:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1848,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "10144:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10106:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10095:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1858,
													"nodeType": "Block",
													"src": "10198:35:6",
													"statements": [
														{
															"expression": {
																"id": 1856,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "10219:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1788,
															"id": 1857,
															"nodeType": "Return",
															"src": "10212:10:6"
														}
													]
												},
												"id": 1859,
												"nodeType": "IfStatement",
												"src": "10091:142:6",
												"trueBody": {
													"id": 1855,
													"nodeType": "Block",
													"src": "10153:39:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1851,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "10174:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10180:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10174:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1788,
															"id": 1854,
															"nodeType": "Return",
															"src": "10167:14:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "8686:616:6",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."
									},
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "9316:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "9349:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "9331:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1780,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9331:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1781,
													"nodeType": "ArrayTypeName",
													"src": "9331:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "9364:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "9356:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9356:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9330:42:6"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "9396:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9396:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9395:9:6"
									},
									"scope": 2266,
									"src": "9307:932:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "10756:709:6",
										"statements": [
											{
												"assignments": [
													1873
												],
												"declarations": [
													{
														"constant": false,
														"id": 1873,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "10774:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1924,
														"src": "10766:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10766:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1875,
												"initialValue": {
													"hexValue": "30",
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10780:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10766:15:6"
											},
											{
												"assignments": [
													1877
												],
												"declarations": [
													{
														"constant": false,
														"id": 1877,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "10799:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1924,
														"src": "10791:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1876,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10791:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1880,
												"initialValue": {
													"expression": {
														"id": 1878,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "10806:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10812:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "10806:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10791:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1881,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "10833:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10841:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10833:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1887,
												"nodeType": "IfStatement",
												"src": "10829:48:6",
												"trueBody": {
													"id": 1886,
													"nodeType": "Block",
													"src": "10844:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10865:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1871,
															"id": 1885,
															"nodeType": "Return",
															"src": "10858:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 1920,
													"nodeType": "Block",
													"src": "10906:532:6",
													"statements": [
														{
															"assignments": [
																1892
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1892,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "10928:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1920,
																	"src": "10920:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1891,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10920:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1898,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1895,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1873,
																		"src": "10947:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1896,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1877,
																		"src": "10952:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1893,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4276,
																		"src": "10934:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$4276_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10939:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2928,
																	"src": "10934:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10934:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10920:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1900,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1865,
																				"src": "11195:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1901,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1892,
																				"src": "11202:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1899,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				2141,
																				2167,
																				2193
																			],
																			"referencedDeclaration": 2193,
																			"src": "11182:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2525_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11182:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$2525_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11207:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2524,
																	"src": "11182:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1904,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "11215:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11182:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1918,
																"nodeType": "Block",
																"src": "11385:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1914,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1877,
																				"src": "11403:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1915,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1892,
																				"src": "11410:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11403:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1917,
																		"nodeType": "ExpressionStatement",
																		"src": "11403:10:6"
																	}
																]
															},
															"id": 1919,
															"nodeType": "IfStatement",
															"src": "11178:250:6",
															"trueBody": {
																"id": 1913,
																"nodeType": "Block",
																"src": "11224:155:6",
																"statements": [
																	{
																		"id": 1912,
																		"nodeType": "UncheckedBlock",
																		"src": "11301:64:6",
																		"statements": [
																			{
																				"expression": {
																					"id": 1910,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1906,
																						"name": "low",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1873,
																						"src": "11333:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1909,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1907,
																							"name": "mid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1892,
																							"src": "11339:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1908,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "11345:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "11339:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11333:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1911,
																				"nodeType": "ExpressionStatement",
																				"src": "11333:13:6"
																			}
																		]
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1888,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "10894:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1889,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "10900:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10894:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1921,
												"nodeType": "WhileStatement",
												"src": "10887:551:6"
											},
											{
												"expression": {
													"id": 1922,
													"name": "low",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1873,
													"src": "11455:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1871,
												"id": 1923,
												"nodeType": "Return",
												"src": "11448:10:6"
											}
										]
									},
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "10245:412:6",
										"text": " @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."
									},
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lowerBound",
									"nameLocation": "10671:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "10700:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "10682:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1863,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10682:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1864,
													"nodeType": "ArrayTypeName",
													"src": "10682:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "10715:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "10707:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10707:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10681:42:6"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "10747:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10747:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10746:9:6"
									},
									"scope": 2266,
									"src": "10662:803:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "11982:709:6",
										"statements": [
											{
												"assignments": [
													1937
												],
												"declarations": [
													{
														"constant": false,
														"id": 1937,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "12000:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1988,
														"src": "11992:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1936,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11992:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"hexValue": "30",
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12006:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11992:15:6"
											},
											{
												"assignments": [
													1941
												],
												"declarations": [
													{
														"constant": false,
														"id": 1941,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "12025:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1988,
														"src": "12017:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1940,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12017:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1944,
												"initialValue": {
													"expression": {
														"id": 1942,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "12032:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12038:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "12032:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12017:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1945,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "12059:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12067:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12059:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1951,
												"nodeType": "IfStatement",
												"src": "12055:48:6",
												"trueBody": {
													"id": 1950,
													"nodeType": "Block",
													"src": "12070:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12091:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1935,
															"id": 1949,
															"nodeType": "Return",
															"src": "12084:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 1984,
													"nodeType": "Block",
													"src": "12132:532:6",
													"statements": [
														{
															"assignments": [
																1956
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1956,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "12154:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1984,
																	"src": "12146:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1955,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12146:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1962,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1959,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1937,
																		"src": "12173:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1960,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "12178:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1957,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4276,
																		"src": "12160:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$4276_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12165:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2928,
																	"src": "12160:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12160:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12146:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1964,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1929,
																				"src": "12421:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1965,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1956,
																				"src": "12428:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1963,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				2141,
																				2167,
																				2193
																			],
																			"referencedDeclaration": 2193,
																			"src": "12408:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2525_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12408:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$2525_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12433:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2524,
																	"src": "12408:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1968,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "12441:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12408:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1982,
																"nodeType": "Block",
																"src": "12499:155:6",
																"statements": [
																	{
																		"id": 1981,
																		"nodeType": "UncheckedBlock",
																		"src": "12576:64:6",
																		"statements": [
																			{
																				"expression": {
																					"id": 1979,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1975,
																						"name": "low",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1937,
																						"src": "12608:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1978,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1976,
																							"name": "mid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1956,
																							"src": "12614:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1977,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12620:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "12614:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12608:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1980,
																				"nodeType": "ExpressionStatement",
																				"src": "12608:13:6"
																			}
																		]
																	}
																]
															},
															"id": 1983,
															"nodeType": "IfStatement",
															"src": "12404:250:6",
															"trueBody": {
																"id": 1974,
																"nodeType": "Block",
																"src": "12450:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1970,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1941,
																				"src": "12468:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1971,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1956,
																				"src": "12475:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12468:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1973,
																		"nodeType": "ExpressionStatement",
																		"src": "12468:10:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1952,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1937,
														"src": "12120:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1953,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "12126:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12120:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1985,
												"nodeType": "WhileStatement",
												"src": "12113:551:6"
											},
											{
												"expression": {
													"id": 1986,
													"name": "low",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1937,
													"src": "12681:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1935,
												"id": 1987,
												"nodeType": "Return",
												"src": "12674:10:6"
											}
										]
									},
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "11471:412:6",
										"text": " @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."
									},
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upperBound",
									"nameLocation": "11897:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "11926:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "11908:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1927,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11908:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1928,
													"nodeType": "ArrayTypeName",
													"src": "11908:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "11941:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "11933:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11933:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11907:42:6"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "11973:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11973:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11972:9:6"
									},
									"scope": 2266,
									"src": "11888:803:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "12875:709:6",
										"statements": [
											{
												"assignments": [
													2001
												],
												"declarations": [
													{
														"constant": false,
														"id": 2001,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "12893:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 2051,
														"src": "12885:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2000,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12885:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2003,
												"initialValue": {
													"hexValue": "30",
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12899:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12885:15:6"
											},
											{
												"assignments": [
													2005
												],
												"declarations": [
													{
														"constant": false,
														"id": 2005,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "12918:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2051,
														"src": "12910:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12910:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2008,
												"initialValue": {
													"expression": {
														"id": 2006,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "12925:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12931:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "12925:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12910:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2009,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "12952:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12960:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12952:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2015,
												"nodeType": "IfStatement",
												"src": "12948:48:6",
												"trueBody": {
													"id": 2014,
													"nodeType": "Block",
													"src": "12963:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12984:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1999,
															"id": 2013,
															"nodeType": "Return",
															"src": "12977:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 2047,
													"nodeType": "Block",
													"src": "13025:532:6",
													"statements": [
														{
															"assignments": [
																2020
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2020,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "13047:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 2047,
																	"src": "13039:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2019,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13039:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2026,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2023,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2001,
																		"src": "13066:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2024,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "13071:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2021,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4276,
																		"src": "13053:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$4276_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13058:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2928,
																	"src": "13053:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13053:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13039:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2028,
																			"name": "array",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1993,
																			"src": "13320:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		{
																			"id": 2029,
																			"name": "mid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2020,
																			"src": "13327:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2027,
																		"name": "unsafeMemoryAccess",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2206,
																			2219,
																			2232
																		],
																		"referencedDeclaration": 2232,
																		"src": "13301:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13301:30:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2031,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "13334:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13301:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2045,
																"nodeType": "Block",
																"src": "13504:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 2043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2041,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2005,
																				"src": "13522:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2042,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2020,
																				"src": "13529:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13522:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2044,
																		"nodeType": "ExpressionStatement",
																		"src": "13522:10:6"
																	}
																]
															},
															"id": 2046,
															"nodeType": "IfStatement",
															"src": "13297:250:6",
															"trueBody": {
																"id": 2040,
																"nodeType": "Block",
																"src": "13343:155:6",
																"statements": [
																	{
																		"id": 2039,
																		"nodeType": "UncheckedBlock",
																		"src": "13420:64:6",
																		"statements": [
																			{
																				"expression": {
																					"id": 2037,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2033,
																						"name": "low",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2001,
																						"src": "13452:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2036,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2034,
																							"name": "mid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2020,
																							"src": "13458:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2035,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13464:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "13458:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13452:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2038,
																				"nodeType": "ExpressionStatement",
																				"src": "13452:13:6"
																			}
																		]
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2016,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "13013:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2017,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "13019:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13013:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2048,
												"nodeType": "WhileStatement",
												"src": "13006:551:6"
											},
											{
												"expression": {
													"id": 2049,
													"name": "low",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2001,
													"src": "13574:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1999,
												"id": 2050,
												"nodeType": "Return",
												"src": "13567:10:6"
											}
										]
									},
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "12697:74:6",
										"text": " @dev Same as {lowerBound}, but with an array in memory."
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lowerBoundMemory",
									"nameLocation": "12785:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "12819:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "12802:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1991,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12802:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1992,
													"nodeType": "ArrayTypeName",
													"src": "12802:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "12834:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "12826:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12826:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12801:41:6"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "12866:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12866:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12865:9:6"
									},
									"scope": 2266,
									"src": "12776:808:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "13768:709:6",
										"statements": [
											{
												"assignments": [
													2064
												],
												"declarations": [
													{
														"constant": false,
														"id": 2064,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "13786:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 2114,
														"src": "13778:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13778:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2066,
												"initialValue": {
													"hexValue": "30",
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13792:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13778:15:6"
											},
											{
												"assignments": [
													2068
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "13811:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2114,
														"src": "13803:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13803:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2071,
												"initialValue": {
													"expression": {
														"id": 2069,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "13818:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13824:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "13818:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13803:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2072,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2068,
														"src": "13845:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13853:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13845:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2078,
												"nodeType": "IfStatement",
												"src": "13841:48:6",
												"trueBody": {
													"id": 2077,
													"nodeType": "Block",
													"src": "13856:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13877:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2062,
															"id": 2076,
															"nodeType": "Return",
															"src": "13870:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 2110,
													"nodeType": "Block",
													"src": "13918:532:6",
													"statements": [
														{
															"assignments": [
																2083
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2083,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "13940:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 2110,
																	"src": "13932:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2082,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13932:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2089,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2086,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2064,
																		"src": "13959:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2087,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2068,
																		"src": "13964:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2084,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4276,
																		"src": "13946:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$4276_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13951:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2928,
																	"src": "13946:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13946:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13932:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2091,
																			"name": "array",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "14213:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		{
																			"id": 2092,
																			"name": "mid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "14220:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2090,
																		"name": "unsafeMemoryAccess",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2206,
																			2219,
																			2232
																		],
																		"referencedDeclaration": 2232,
																		"src": "14194:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14194:30:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2094,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "14227:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14194:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2108,
																"nodeType": "Block",
																"src": "14285:155:6",
																"statements": [
																	{
																		"id": 2107,
																		"nodeType": "UncheckedBlock",
																		"src": "14362:64:6",
																		"statements": [
																			{
																				"expression": {
																					"id": 2105,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2101,
																						"name": "low",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2064,
																						"src": "14394:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2104,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2102,
																							"name": "mid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2083,
																							"src": "14400:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2103,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14406:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "14400:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14394:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2106,
																				"nodeType": "ExpressionStatement",
																				"src": "14394:13:6"
																			}
																		]
																	}
																]
															},
															"id": 2109,
															"nodeType": "IfStatement",
															"src": "14190:250:6",
															"trueBody": {
																"id": 2100,
																"nodeType": "Block",
																"src": "14236:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 2098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2096,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "14254:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2097,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2083,
																				"src": "14261:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14254:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2099,
																		"nodeType": "ExpressionStatement",
																		"src": "14254:10:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2079,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "13906:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2080,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2068,
														"src": "13912:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13906:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2111,
												"nodeType": "WhileStatement",
												"src": "13899:551:6"
											},
											{
												"expression": {
													"id": 2112,
													"name": "low",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2064,
													"src": "14467:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2062,
												"id": 2113,
												"nodeType": "Return",
												"src": "14460:10:6"
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "13590:74:6",
										"text": " @dev Same as {upperBound}, but with an array in memory."
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upperBoundMemory",
									"nameLocation": "13678:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "13712:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "13695:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2054,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13695:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2055,
													"nodeType": "ArrayTypeName",
													"src": "13695:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "13727:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "13719:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13719:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13694:41:6"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "13759:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13759:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13758:9:6"
									},
									"scope": 2266,
									"src": "13669:808:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "14793:167:6",
										"statements": [
											{
												"assignments": [
													2128
												],
												"declarations": [
													{
														"constant": false,
														"id": 2128,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "14811:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2140,
														"src": "14803:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2127,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14803:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2129,
												"nodeType": "VariableDeclarationStatement",
												"src": "14803:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14850:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14864:16:6",
															"value": {
																"name": "arr.slot",
																"nodeType": "YulIdentifier",
																"src": "14872:8:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "14864:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2119,
														"isOffset": false,
														"isSlot": true,
														"src": "14872:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2128,
														"isOffset": false,
														"isSlot": false,
														"src": "14864:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2130,
												"nodeType": "InlineAssembly",
												"src": "14825:65:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2135,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "14932:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2131,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2128,
																			"src": "14906:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14911:11:6",
																		"memberName": "deriveArray",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2425,
																		"src": "14906:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
																			"typeString": "function (bytes32) pure returns (bytes32)"
																		}
																	},
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14906:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14925:6:6",
																"memberName": "offset",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2415,
																"src": "14906:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
																	"typeString": "function (bytes32,uint256) pure returns (bytes32)"
																}
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14906:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14937:14:6",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2545,
														"src": "14906:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2516_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14906:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2516_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 2126,
												"id": 2139,
												"nodeType": "Return",
												"src": "14899:54:6"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "14483:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "14688:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "14719:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "14701:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14701:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2118,
													"nodeType": "ArrayTypeName",
													"src": "14701:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "14732:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "14724:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14700:36:6"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "14760:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2516_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2123,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"14760:11:6",
															"14772:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2516,
														"src": "14760:23:6"
													},
													"referencedDeclaration": 2516,
													"src": "14760:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2516_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14759:33:6"
									},
									"scope": 2266,
									"src": "14679:281:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "15276:167:6",
										"statements": [
											{
												"assignments": [
													2154
												],
												"declarations": [
													{
														"constant": false,
														"id": 2154,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "15294:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2166,
														"src": "15286:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2153,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "15286:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2155,
												"nodeType": "VariableDeclarationStatement",
												"src": "15286:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15333:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15347:16:6",
															"value": {
																"name": "arr.slot",
																"nodeType": "YulIdentifier",
																"src": "15355:8:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "15347:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2145,
														"isOffset": false,
														"isSlot": true,
														"src": "15355:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2154,
														"isOffset": false,
														"isSlot": false,
														"src": "15347:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2156,
												"nodeType": "InlineAssembly",
												"src": "15308:65:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2161,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2147,
																	"src": "15415:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2157,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2154,
																			"src": "15389:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15394:11:6",
																		"memberName": "deriveArray",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2425,
																		"src": "15389:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
																			"typeString": "function (bytes32) pure returns (bytes32)"
																		}
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15389:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15408:6:6",
																"memberName": "offset",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2415,
																"src": "15389:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
																	"typeString": "function (bytes32,uint256) pure returns (bytes32)"
																}
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15389:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 2163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15420:14:6",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2567,
														"src": "15389:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$2522_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15389:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2522_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 2152,
												"id": 2165,
												"nodeType": "Return",
												"src": "15382:54:6"
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "14966:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "15171:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "15202:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "15184:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2143,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "15184:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2144,
													"nodeType": "ArrayTypeName",
													"src": "15184:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "15215:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "15207:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15207:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15183:36:6"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "15243:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2522_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2149,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"15243:11:6",
															"15255:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2522,
														"src": "15243:23:6"
													},
													"referencedDeclaration": 2522,
													"src": "15243:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2522_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15242:33:6"
									},
									"scope": 2266,
									"src": "15162:281:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "15759:167:6",
										"statements": [
											{
												"assignments": [
													2180
												],
												"declarations": [
													{
														"constant": false,
														"id": 2180,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "15777:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2192,
														"src": "15769:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2179,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "15769:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2181,
												"nodeType": "VariableDeclarationStatement",
												"src": "15769:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15816:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15830:16:6",
															"value": {
																"name": "arr.slot",
																"nodeType": "YulIdentifier",
																"src": "15838:8:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "15830:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2171,
														"isOffset": false,
														"isSlot": true,
														"src": "15838:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2180,
														"isOffset": false,
														"isSlot": false,
														"src": "15830:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2182,
												"nodeType": "InlineAssembly",
												"src": "15791:65:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2187,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "15898:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2183,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2180,
																			"src": "15872:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15877:11:6",
																		"memberName": "deriveArray",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2425,
																		"src": "15872:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
																			"typeString": "function (bytes32) pure returns (bytes32)"
																		}
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15872:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15891:6:6",
																"memberName": "offset",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2415,
																"src": "15872:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
																	"typeString": "function (bytes32,uint256) pure returns (bytes32)"
																}
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15872:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 2189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15903:14:6",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2578,
														"src": "15872:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$2525_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15872:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2525_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 2178,
												"id": 2191,
												"nodeType": "Return",
												"src": "15865:54:6"
											}
										]
									},
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "15449:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "15654:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "15685:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "15667:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2169,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15667:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2170,
													"nodeType": "ArrayTypeName",
													"src": "15667:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "15698:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "15690:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15690:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15666:36:6"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "15726:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2525_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2175,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"15726:11:6",
															"15738:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2525,
														"src": "15726:23:6"
													},
													"referencedDeclaration": 2525,
													"src": "15726:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2525_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15725:33:6"
									},
									"scope": 2266,
									"src": "15645:281:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "16227:98:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16246:73:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16260:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "16281:3:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16286:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16277:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16277:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "16297:3:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16302:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "16293:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16293:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16273:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16273:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16267:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16267:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "16260:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "16281:3:6",
														"valueSize": 1
													},
													{
														"declaration": 2199,
														"isOffset": false,
														"isSlot": false,
														"src": "16297:3:6",
														"valueSize": 1
													},
													{
														"declaration": 2202,
														"isOffset": false,
														"isSlot": false,
														"src": "16260:3:6",
														"valueSize": 1
													}
												],
												"id": 2204,
												"nodeType": "InlineAssembly",
												"src": "16237:82:6"
											}
										]
									},
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "15932:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "16137:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "16173:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "16156:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2195,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16156:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2196,
													"nodeType": "ArrayTypeName",
													"src": "16156:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "16186:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "16178:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16178:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16155:35:6"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "16222:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "16214:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16214:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16213:13:6"
									},
									"scope": 2266,
									"src": "16128:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2218,
										"nodeType": "Block",
										"src": "16626:98:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16645:73:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16659:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "16680:3:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16685:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16676:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16676:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "16696:3:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16701:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "16692:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16692:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16672:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16672:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16666:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16666:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "16659:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2210,
														"isOffset": false,
														"isSlot": false,
														"src": "16680:3:6",
														"valueSize": 1
													},
													{
														"declaration": 2212,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:3:6",
														"valueSize": 1
													},
													{
														"declaration": 2215,
														"isOffset": false,
														"isSlot": false,
														"src": "16659:3:6",
														"valueSize": 1
													}
												],
												"id": 2217,
												"nodeType": "InlineAssembly",
												"src": "16636:82:6"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "16331:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 2219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "16536:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "16572:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "16555:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2208,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "16555:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2209,
													"nodeType": "ArrayTypeName",
													"src": "16555:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "16585:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "16577:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16577:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16554:35:6"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "16621:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "16613:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16613:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16612:13:6"
									},
									"scope": 2266,
									"src": "16527:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "17025:98:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17044:73:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17058:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "17079:3:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17084:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17075:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17075:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "17095:3:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17100:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "17091:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17091:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17071:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17071:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17065:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17065:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "17058:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2223,
														"isOffset": false,
														"isSlot": false,
														"src": "17079:3:6",
														"valueSize": 1
													},
													{
														"declaration": 2225,
														"isOffset": false,
														"isSlot": false,
														"src": "17095:3:6",
														"valueSize": 1
													},
													{
														"declaration": 2228,
														"isOffset": false,
														"isSlot": false,
														"src": "17058:3:6",
														"valueSize": 1
													}
												],
												"id": 2230,
												"nodeType": "InlineAssembly",
												"src": "17035:82:6"
											}
										]
									},
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "16730:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "16935:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "16971:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "16954:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2221,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16954:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2222,
													"nodeType": "ArrayTypeName",
													"src": "16954:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "16984:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "16976:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16953:35:6"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "17020:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "17012:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17011:13:6"
									},
									"scope": 2266,
									"src": "16926:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2242,
										"nodeType": "Block",
										"src": "17440:88:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17475:47:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array.slot",
																		"nodeType": "YulIdentifier",
																		"src": "17496:10:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "17508:3:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "17489:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17489:23:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17489:23:6"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": true,
														"src": "17496:10:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "17508:3:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2241,
												"nodeType": "InlineAssembly",
												"src": "17450:72:6"
											}
										]
									},
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "17129:234:6",
										"text": " @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."
									},
									"id": 2243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeSetLength",
									"nameLocation": "17377:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "17411:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "17393:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2234,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17393:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2235,
													"nodeType": "ArrayTypeName",
													"src": "17393:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "17426:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "17418:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17418:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17392:38:6"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17440:0:6"
									},
									"scope": 2266,
									"src": "17368:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2253,
										"nodeType": "Block",
										"src": "17845:88:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17880:47:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array.slot",
																		"nodeType": "YulIdentifier",
																		"src": "17901:10:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "17913:3:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "17894:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17894:23:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17894:23:6"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2247,
														"isOffset": false,
														"isSlot": true,
														"src": "17901:10:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2249,
														"isOffset": false,
														"isSlot": false,
														"src": "17913:3:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2252,
												"nodeType": "InlineAssembly",
												"src": "17855:72:6"
											}
										]
									},
									"documentation": {
										"id": 2244,
										"nodeType": "StructuredDocumentation",
										"src": "17534:234:6",
										"text": " @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."
									},
									"id": 2254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeSetLength",
									"nameLocation": "17782:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "17816:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "17798:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2245,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "17798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2246,
													"nodeType": "ArrayTypeName",
													"src": "17798:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "17831:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "17823:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17823:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17797:38:6"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17845:0:6"
									},
									"scope": 2266,
									"src": "17773:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "18250:88:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18285:47:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array.slot",
																		"nodeType": "YulIdentifier",
																		"src": "18306:10:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "18318:3:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "18299:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18299:23:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18299:23:6"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2258,
														"isOffset": false,
														"isSlot": true,
														"src": "18306:10:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2260,
														"isOffset": false,
														"isSlot": false,
														"src": "18318:3:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2263,
												"nodeType": "InlineAssembly",
												"src": "18260:72:6"
											}
										]
									},
									"documentation": {
										"id": 2255,
										"nodeType": "StructuredDocumentation",
										"src": "17939:234:6",
										"text": " @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."
									},
									"id": 2265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeSetLength",
									"nameLocation": "18187:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "18221:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "18203:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18203:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2257,
													"nodeType": "ArrayTypeName",
													"src": "18203:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "18236:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "18228:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18228:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18202:38:6"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18250:0:6"
									},
									"scope": 2266,
									"src": "18178:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2267,
							"src": "459:17881:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "183:18158:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Comparators.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Comparators.sol",
					"exportedSymbols": {
						"Comparators": [
							2298
						]
					},
					"id": 2299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Comparators",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2269,
								"nodeType": "StructuredDocumentation",
								"src": "131:92:7",
								"text": " @dev Provides a set of functions to compare values.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2298,
							"linearizedBaseContracts": [
								2298
							],
							"name": "Comparators",
							"nameLocation": "232:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "313:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2271,
														"src": "330:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "334:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "330:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2277,
												"id": 2281,
												"nodeType": "Return",
												"src": "323:12:7"
											}
										]
									},
									"id": 2283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lt",
									"nameLocation": "259:2:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "270:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "262:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "281:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "273:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:22:7"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "307:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "307:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:6:7"
									},
									"scope": 2298,
									"src": "250:92:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "411:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2285,
														"src": "428:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2287,
														"src": "432:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "428:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2291,
												"id": 2295,
												"nodeType": "Return",
												"src": "421:12:7"
											}
										]
									},
									"id": 2297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gt",
									"nameLocation": "357:2:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "368:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "360:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "379:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "371:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:22:7"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "405:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "405:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:6:7"
									},
									"scope": 2298,
									"src": "348:92:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2299,
							"src": "224:218:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "105:338:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2328
						]
					},
					"id": 2329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2300,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2301,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2328,
							"linearizedBaseContracts": [
								2328
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2306,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2305,
												"id": 2308,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 2328,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2318,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2315,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2314,
												"id": 2317,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 2319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 2328,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2326,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2323,
												"id": 2325,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 2327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 2328,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2329,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							2380
						]
					},
					"id": 2381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2331,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:9",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2380,
							"linearizedBaseContracts": [
								2380
							],
							"name": "Panic",
							"nameLocation": "665:5:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:9",
										"text": "@dev generic / unspecified error"
									},
									"id": 2335,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2380,
									"src": "718:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 2334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2336,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:9",
										"text": "@dev used by the assert() builtin"
									},
									"id": 2339,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2380,
									"src": "806:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 2338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:9",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 2343,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2380,
									"src": "897:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2341,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 2342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2344,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:9",
										"text": "@dev division or modulo by zero"
									},
									"id": 2347,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2380,
									"src": "990:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2345,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 2346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2348,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:9",
										"text": "@dev enum conversion error"
									},
									"id": 2351,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 2380,
									"src": "1080:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 2350,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2352,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:9",
										"text": "@dev invalid encoding in storage"
									},
									"id": 2355,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:9",
									"nodeType": "VariableDeclaration",
									"scope": 2380,
									"src": "1181:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2353,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 2354,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:9",
										"text": "@dev empty array pop"
									},
									"id": 2359,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2380,
									"src": "1271:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2357,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 2358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2360,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:9",
										"text": "@dev array out of bounds access"
									},
									"id": 2363,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 2380,
									"src": "1365:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2361,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 2362,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2364,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:9",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 2367,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2380,
									"src": "1493:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2365,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 2366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2368,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:9",
										"text": "@dev calling invalid internal function"
									},
									"id": 2371,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:9",
									"nodeType": "VariableDeclaration",
									"scope": 2380,
									"src": "1593:58:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2369,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 2370,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2378,
										"nodeType": "Block",
										"src": "1819:151:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1854:110:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:9",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:9",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:24:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:9",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1905:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:9",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:9"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2374,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2377,
												"nodeType": "InlineAssembly",
												"src": "1829:135:9"
											}
										]
									},
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:9",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 2379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "1791:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:9"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:9"
									},
									"scope": 2380,
									"src": "1776:194:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2381,
							"src": "657:1315:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/SlotDerivation.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/SlotDerivation.sol",
					"exportedSymbols": {
						"SlotDerivation": [
							2510
						]
					},
					"id": 2511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "199:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SlotDerivation",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2383,
								"nodeType": "StructuredDocumentation",
								"src": "225:1372:10",
								"text": " @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2510,
							"linearizedBaseContracts": [
								2510
							],
							"name": "SlotDerivation",
							"nameLocation": "1606:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2392,
										"nodeType": "Block",
										"src": "1789:194:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1824:153:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1845:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "namespace",
																								"nodeType": "YulIdentifier",
																								"src": "1869:9:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1880:4:10",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1865:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1865:20:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "namespace",
																								"nodeType": "YulIdentifier",
																								"src": "1893:9:10"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "1887:5:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1887:16:10"
																					}
																				],
																				"functionName": {
																					"name": "keccak256",
																					"nodeType": "YulIdentifier",
																					"src": "1855:9:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1855:49:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1906:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1851:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1851:57:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1838:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1838:71:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1922:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1944:4:10",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1950:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "1934:9:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:21:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1961:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:37:10"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "1922:4:10"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2386,
														"isOffset": false,
														"isSlot": false,
														"src": "1869:9:10",
														"valueSize": 1
													},
													{
														"declaration": 2386,
														"isOffset": false,
														"isSlot": false,
														"src": "1893:9:10",
														"valueSize": 1
													},
													{
														"declaration": 2389,
														"isOffset": false,
														"isSlot": false,
														"src": "1922:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2391,
												"nodeType": "InlineAssembly",
												"src": "1799:178:10"
											}
										]
									},
									"documentation": {
										"id": 2384,
										"nodeType": "StructuredDocumentation",
										"src": "1627:74:10",
										"text": " @dev Derive an ERC-7201 slot from a string (namespace)."
									},
									"id": 2393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc7201Slot",
									"nameLocation": "1715:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "namespace",
												"nameLocation": "1741:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "1727:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:25:10"
									},
									"returnParameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1783:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "1775:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2388,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:14:10"
									},
									"scope": 2510,
									"src": "1706:277:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2414,
										"nodeType": "Block",
										"src": "2175:86:10",
										"statements": [
											{
												"id": 2413,
												"nodeType": "UncheckedBlock",
												"src": "2185:70:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2407,
																				"name": "slot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2396,
																				"src": "2232:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2224:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2405,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2224:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2224:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2409,
																		"name": "pos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2398,
																		"src": "2240:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2224:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2403,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"functionReturnParameters": 2402,
														"id": 2412,
														"nodeType": "Return",
														"src": "2209:35:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2394,
										"nodeType": "StructuredDocumentation",
										"src": "1989:99:10",
										"text": " @dev Add an offset to a slot to get the n-th element of a structure or an array."
									},
									"id": 2415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "offset",
									"nameLocation": "2102:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2117:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "2109:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2131:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "2123:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2108:27:10"
									},
									"returnParameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2167:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "2159:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2400,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2158:16:10"
									},
									"scope": 2510,
									"src": "2093:168:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2424,
										"nodeType": "Block",
										"src": "2464:127:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2499:86:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2520:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2526:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2513:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2544:31:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2564:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2570:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2554:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:21:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2544:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2421,
														"isOffset": false,
														"isSlot": false,
														"src": "2544:6:10",
														"valueSize": 1
													},
													{
														"declaration": 2418,
														"isOffset": false,
														"isSlot": false,
														"src": "2526:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2423,
												"nodeType": "InlineAssembly",
												"src": "2474:111:10"
											}
										]
									},
									"documentation": {
										"id": 2416,
										"nodeType": "StructuredDocumentation",
										"src": "2267:118:10",
										"text": " @dev Derive the location of the first element in an array from the slot where the length is stored."
									},
									"id": 2425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveArray",
									"nameLocation": "2399:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2419:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "2411:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2417,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2410:14:10"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2456:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "2448:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2420,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:16:10"
									},
									"scope": 2510,
									"src": "2390:201:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2436,
										"nodeType": "Block",
										"src": "2769:179:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2804:138:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2825:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"name": "key",
																				"nodeType": "YulIdentifier",
																				"src": "2835:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2844:2:10",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2852:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2848:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2848:6:10"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "2840:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2840:15:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2831:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2831:25:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2818:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2818:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2818:39:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:4:10",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2883:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2870:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2901:31:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2921:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2927:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2911:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:21:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2901:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2430,
														"isOffset": false,
														"isSlot": false,
														"src": "2835:3:10",
														"valueSize": 1
													},
													{
														"declaration": 2433,
														"isOffset": false,
														"isSlot": false,
														"src": "2901:6:10",
														"valueSize": 1
													},
													{
														"declaration": 2428,
														"isOffset": false,
														"isSlot": false,
														"src": "2883:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2435,
												"nodeType": "InlineAssembly",
												"src": "2779:163:10"
											}
										]
									},
									"documentation": {
										"id": 2426,
										"nodeType": "StructuredDocumentation",
										"src": "2597:78:10",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 2437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "2689:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "2703:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2427,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2725:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "2717:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:27:10"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2761:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "2753:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2432,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:16:10"
									},
									"scope": 2510,
									"src": "2680:268:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2448,
										"nodeType": "Block",
										"src": "3123:173:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3158:132:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3179:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "key",
																						"nodeType": "YulIdentifier",
																						"src": "3199:3:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3192:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3192:11:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3185:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:19:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3172:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3172:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3172:33:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3225:4:10",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3231:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3218:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3218:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3249:31:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3275:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3259:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:21:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3249:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2442,
														"isOffset": false,
														"isSlot": false,
														"src": "3199:3:10",
														"valueSize": 1
													},
													{
														"declaration": 2445,
														"isOffset": false,
														"isSlot": false,
														"src": "3249:6:10",
														"valueSize": 1
													},
													{
														"declaration": 2440,
														"isOffset": false,
														"isSlot": false,
														"src": "3231:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2447,
												"nodeType": "InlineAssembly",
												"src": "3133:157:10"
											}
										]
									},
									"documentation": {
										"id": 2438,
										"nodeType": "StructuredDocumentation",
										"src": "2954:78:10",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 2449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "3046:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3068:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "3060:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2439,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3060:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3079:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "3074:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3074:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3059:24:10"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3115:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "3107:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2444,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:16:10"
									},
									"scope": 2510,
									"src": "3037:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "3474:157:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3509:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3530:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "key",
																		"nodeType": "YulIdentifier",
																		"src": "3536:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:17:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:17:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3560:4:10",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3566:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3553:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3553:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3553:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3584:31:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3604:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3610:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3594:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:21:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2454,
														"isOffset": false,
														"isSlot": false,
														"src": "3536:3:10",
														"valueSize": 1
													},
													{
														"declaration": 2457,
														"isOffset": false,
														"isSlot": false,
														"src": "3584:6:10",
														"valueSize": 1
													},
													{
														"declaration": 2452,
														"isOffset": false,
														"isSlot": false,
														"src": "3566:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2459,
												"nodeType": "InlineAssembly",
												"src": "3484:141:10"
											}
										]
									},
									"documentation": {
										"id": 2450,
										"nodeType": "StructuredDocumentation",
										"src": "3302:78:10",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "3394:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3416:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "3408:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3430:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "3422:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2453,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3407:27:10"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3466:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "3458:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2456,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3458:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3457:16:10"
									},
									"scope": 2510,
									"src": "3385:246:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2472,
										"nodeType": "Block",
										"src": "3809:157:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3844:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3865:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "key",
																		"nodeType": "YulIdentifier",
																		"src": "3871:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3858:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3858:17:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3858:17:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3895:4:10",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3901:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3888:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3919:31:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3939:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3945:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3929:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3929:21:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2466,
														"isOffset": false,
														"isSlot": false,
														"src": "3871:3:10",
														"valueSize": 1
													},
													{
														"declaration": 2469,
														"isOffset": false,
														"isSlot": false,
														"src": "3919:6:10",
														"valueSize": 1
													},
													{
														"declaration": 2464,
														"isOffset": false,
														"isSlot": false,
														"src": "3901:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2471,
												"nodeType": "InlineAssembly",
												"src": "3819:141:10"
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "3637:78:10",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 2473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "3729:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3751:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "3743:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2463,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3765:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "3757:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3742:27:10"
									},
									"returnParameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3801:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "3793:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2468,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3793:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3792:16:10"
									},
									"scope": 2510,
									"src": "3720:246:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "4143:157:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4178:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4199:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "key",
																		"nodeType": "YulIdentifier",
																		"src": "4205:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:17:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4192:17:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4229:4:10",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4235:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4222:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4222:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4222:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4253:31:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4273:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4263:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4263:21:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2478,
														"isOffset": false,
														"isSlot": false,
														"src": "4205:3:10",
														"valueSize": 1
													},
													{
														"declaration": 2481,
														"isOffset": false,
														"isSlot": false,
														"src": "4253:6:10",
														"valueSize": 1
													},
													{
														"declaration": 2476,
														"isOffset": false,
														"isSlot": false,
														"src": "4235:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2483,
												"nodeType": "InlineAssembly",
												"src": "4153:141:10"
											}
										]
									},
									"documentation": {
										"id": 2474,
										"nodeType": "StructuredDocumentation",
										"src": "3972:78:10",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "4064:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4086:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "4078:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2475,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4099:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "4092:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2477,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4092:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4077:26:10"
									},
									"returnParameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4135:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "4127:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2480,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4126:16:10"
									},
									"scope": 2510,
									"src": "4055:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2496,
										"nodeType": "Block",
										"src": "4484:326:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4519:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4533:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nodeType": "YulIdentifier",
																		"src": "4553:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4547:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4547:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4537:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4570:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nodeType": "YulIdentifier",
																		"src": "4587:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4583:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4583:14:10"
															},
															"variables": [
																{
																	"name": "begin",
																	"nodeType": "YulTypedName",
																	"src": "4574:5:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4610:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nodeType": "YulIdentifier",
																		"src": "4625:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4632:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:18:10"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "4614:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4652:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4671:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4665:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:10:10"
															},
															"variables": [
																{
																	"name": "cache",
																	"nodeType": "YulTypedName",
																	"src": "4656:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4695:3:10"
																	},
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4700:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:17:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4688:17:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4718:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nodeType": "YulIdentifier",
																		"src": "4738:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4749:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4757:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4745:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4745:17:10"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4728:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:35:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4783:3:10"
																	},
																	{
																		"name": "cache",
																		"nodeType": "YulIdentifier",
																		"src": "4788:5:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:18:10"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2490,
														"isOffset": false,
														"isSlot": false,
														"src": "4553:3:10",
														"valueSize": 1
													},
													{
														"declaration": 2490,
														"isOffset": false,
														"isSlot": false,
														"src": "4587:3:10",
														"valueSize": 1
													},
													{
														"declaration": 2493,
														"isOffset": false,
														"isSlot": false,
														"src": "4718:6:10",
														"valueSize": 1
													},
													{
														"declaration": 2488,
														"isOffset": false,
														"isSlot": false,
														"src": "4700:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2495,
												"nodeType": "InlineAssembly",
												"src": "4494:310:10"
											}
										]
									},
									"documentation": {
										"id": 2486,
										"nodeType": "StructuredDocumentation",
										"src": "4306:78:10",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 2497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "4398:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4420:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "4412:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4440:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "4426:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4426:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:33:10"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4476:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "4468:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2492,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4467:16:10"
									},
									"scope": 2510,
									"src": "4389:421:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2508,
										"nodeType": "Block",
										"src": "4993:326:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5028:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5042:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nodeType": "YulIdentifier",
																		"src": "5062:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5056:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5056:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5046:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5079:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nodeType": "YulIdentifier",
																		"src": "5096:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5101:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5092:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:14:10"
															},
															"variables": [
																{
																	"name": "begin",
																	"nodeType": "YulTypedName",
																	"src": "5083:5:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5119:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nodeType": "YulIdentifier",
																		"src": "5134:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5141:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:10"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "5123:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5161:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5180:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5174:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:10:10"
															},
															"variables": [
																{
																	"name": "cache",
																	"nodeType": "YulTypedName",
																	"src": "5165:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5204:3:10"
																	},
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5209:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5197:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5197:17:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5197:17:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5227:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "begin",
																		"nodeType": "YulIdentifier",
																		"src": "5247:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5266:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5254:17:10"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "5237:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5237:35:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5227:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5292:3:10"
																	},
																	{
																		"name": "cache",
																		"nodeType": "YulIdentifier",
																		"src": "5297:5:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5285:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5285:18:10"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2502,
														"isOffset": false,
														"isSlot": false,
														"src": "5062:3:10",
														"valueSize": 1
													},
													{
														"declaration": 2502,
														"isOffset": false,
														"isSlot": false,
														"src": "5096:3:10",
														"valueSize": 1
													},
													{
														"declaration": 2505,
														"isOffset": false,
														"isSlot": false,
														"src": "5227:6:10",
														"valueSize": 1
													},
													{
														"declaration": 2500,
														"isOffset": false,
														"isSlot": false,
														"src": "5209:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2507,
												"nodeType": "InlineAssembly",
												"src": "5003:310:10"
											}
										]
									},
									"documentation": {
										"id": 2498,
										"nodeType": "StructuredDocumentation",
										"src": "4816:78:10",
										"text": " @dev Derive the location of a mapping element from the key."
									},
									"id": 2509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deriveMapping",
									"nameLocation": "4908:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4930:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "4922:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2499,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4922:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4949:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "4936:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4936:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4921:32:10"
									},
									"returnParameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4985:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "4977:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4977:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4976:16:10"
									},
									"scope": 2510,
									"src": "4899:420:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2511,
							"src": "1598:3723:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "199:5123:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2634
						]
					},
					"id": 2635,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2513,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:11",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2634,
							"linearizedBaseContracts": [
								2634
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2516,
									"members": [
										{
											"constant": false,
											"id": 2515,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2516,
											"src": "1462:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2514,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:11",
									"nodeType": "StructDefinition",
									"scope": 2634,
									"src": "1433:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2519,
									"members": [
										{
											"constant": false,
											"id": 2518,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2519,
											"src": "1517:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2517,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:11",
									"nodeType": "StructDefinition",
									"scope": 2634,
									"src": "1488:46:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2522,
									"members": [
										{
											"constant": false,
											"id": 2521,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2522,
											"src": "1569:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2520,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:11",
									"nodeType": "StructDefinition",
									"scope": 2634,
									"src": "1540:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2525,
									"members": [
										{
											"constant": false,
											"id": 2524,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2525,
											"src": "1624:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2523,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:11",
									"nodeType": "StructDefinition",
									"scope": 2634,
									"src": "1595:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2528,
									"members": [
										{
											"constant": false,
											"id": 2527,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2528,
											"src": "1678:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2526,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:11",
									"nodeType": "StructDefinition",
									"scope": 2634,
									"src": "1650:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2531,
									"members": [
										{
											"constant": false,
											"id": 2530,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2531,
											"src": "1731:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2529,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:11",
									"nodeType": "StructDefinition",
									"scope": 2634,
									"src": "1703:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2534,
									"members": [
										{
											"constant": false,
											"id": 2533,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2534,
											"src": "1783:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2532,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:11",
									"nodeType": "StructDefinition",
									"scope": 2634,
									"src": "1756:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2544,
										"nodeType": "Block",
										"src": "1983:79:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2018:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2032:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2042:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2541,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2537,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2543,
												"nodeType": "InlineAssembly",
												"src": "1993:63:11"
											}
										]
									},
									"documentation": {
										"id": 2535,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:11",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "1923:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:11"
									},
									"returnParameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "1960:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2516_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2539,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2516,
														"src": "1960:11:11"
													},
													"referencedDeclaration": 2516,
													"src": "1960:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2516_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:11"
									},
									"scope": 2634,
									"src": "1899:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2555,
										"nodeType": "Block",
										"src": "2243:79:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2278:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2292:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2302:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2552,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2548,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2554,
												"nodeType": "InlineAssembly",
												"src": "2253:63:11"
											}
										]
									},
									"documentation": {
										"id": 2546,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:11",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "2183:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2547,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:11"
									},
									"returnParameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "2220:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2519_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2550,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2519,
														"src": "2220:11:11"
													},
													"referencedDeclaration": 2519,
													"src": "2220:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2519_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:11"
									},
									"scope": 2634,
									"src": "2159:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2566,
										"nodeType": "Block",
										"src": "2503:79:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2538:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2552:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2562:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2563,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2559,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2565,
												"nodeType": "InlineAssembly",
												"src": "2513:63:11"
											}
										]
									},
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:11",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "2443:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2558,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:11"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "2480:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2522_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2562,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2561,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2522,
														"src": "2480:11:11"
													},
													"referencedDeclaration": 2522,
													"src": "2480:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2522_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:11"
									},
									"scope": 2634,
									"src": "2419:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2577,
										"nodeType": "Block",
										"src": "2763:79:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2798:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2812:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2822:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2574,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2570,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2576,
												"nodeType": "InlineAssembly",
												"src": "2773:63:11"
											}
										]
									},
									"documentation": {
										"id": 2568,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:11",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "2703:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2569,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:11"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "2740:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2525_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2572,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2525,
														"src": "2740:11:11"
													},
													"referencedDeclaration": 2525,
													"src": "2740:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2525_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:11"
									},
									"scope": 2634,
									"src": "2679:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2588,
										"nodeType": "Block",
										"src": "3020:79:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3055:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3069:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3079:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2585,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2581,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2587,
												"nodeType": "InlineAssembly",
												"src": "3030:63:11"
											}
										]
									},
									"documentation": {
										"id": 2579,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:11",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "2961:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2580,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:11"
									},
									"returnParameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "2998:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2528_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2583,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2528,
														"src": "2998:10:11"
													},
													"referencedDeclaration": 2528,
													"src": "2998:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2528_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:11"
									},
									"scope": 2634,
									"src": "2938:161:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2599,
										"nodeType": "Block",
										"src": "3277:79:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3312:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3326:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3336:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2596,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2592,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2598,
												"nodeType": "InlineAssembly",
												"src": "3287:63:11"
											}
										]
									},
									"documentation": {
										"id": 2590,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:11",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "3218:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2591,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:11"
									},
									"returnParameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "3255:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2531_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2595,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2594,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2531,
														"src": "3255:10:11"
													},
													"referencedDeclaration": 2531,
													"src": "3255:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2531_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:11"
									},
									"scope": 2634,
									"src": "3195:161:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2610,
										"nodeType": "Block",
										"src": "3558:85:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3593:44:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3607:20:11",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3617:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2607,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2603,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2609,
												"nodeType": "InlineAssembly",
												"src": "3568:69:11"
											}
										]
									},
									"documentation": {
										"id": 2601,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:11",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "3491:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:11"
									},
									"returnParameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "3536:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2531_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2605,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2531,
														"src": "3536:10:11"
													},
													"referencedDeclaration": 2531,
													"src": "3536:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2531_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:11"
									},
									"scope": 2634,
									"src": "3468:175:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2621,
										"nodeType": "Block",
										"src": "3818:79:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3853:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3867:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3877:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2618,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2614,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2620,
												"nodeType": "InlineAssembly",
												"src": "3828:63:11"
											}
										]
									},
									"documentation": {
										"id": 2612,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:11",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "3760:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2613,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:11"
									},
									"returnParameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "3797:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2534_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2617,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2616,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2534,
														"src": "3797:9:11"
													},
													"referencedDeclaration": 2534,
													"src": "3797:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2534_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:11"
									},
									"scope": 2634,
									"src": "3738:159:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2632,
										"nodeType": "Block",
										"src": "4094:85:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4129:44:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4143:20:11",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "4153:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2629,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2625,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2631,
												"nodeType": "InlineAssembly",
												"src": "4104:69:11"
											}
										]
									},
									"documentation": {
										"id": 2623,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:11",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "4029:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:11"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "4073:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2534_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2628,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2627,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2534,
														"src": "4073:9:11"
													},
													"referencedDeclaration": 2534,
													"src": "4073:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2534_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:11"
									},
									"scope": 2634,
									"src": "4007:172:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2635,
							"src": "1407:2774:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2658
						],
						"IERC165": [
							2670
						]
					},
					"id": 2659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2636,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2659,
							"sourceUnit": 2671,
							"src": "140:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2637,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2670,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2640,
										"name": "IERC165",
										"nameLocations": [
											"688:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2670,
										"src": "688:7:12"
									},
									"id": 2641,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2639,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2658,
							"linearizedBaseContracts": [
								2658,
								2670
							],
							"name": "ERC165",
							"nameLocation": "678:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2669
									],
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "845:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2649,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2644,
														"src": "862:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2651,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2670,
																	"src": "882:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2670_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2670_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2650,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2670",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2648,
												"id": 2655,
												"nodeType": "Return",
												"src": "855:47:12"
											}
										]
									},
									"documentation": {
										"id": 2642,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "790:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2643,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:12"
									},
									"returnParameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "839:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:12"
									},
									"scope": 2658,
									"src": "763:146:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2659,
							"src": "660:251:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2670
						]
					},
					"id": 2671,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2661,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:13",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2670,
							"linearizedBaseContracts": [
								2670
							],
							"name": "IERC165",
							"nameLocation": "432:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2662,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "818:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2663,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:13"
									},
									"returnParameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "861:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:13"
									},
									"scope": 2670,
									"src": "791:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2671,
							"src": "422:447:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							4276
						],
						"Panic": [
							2380
						],
						"SafeCast": [
							6041
						]
					},
					"id": 4277,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2672,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 2674,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4277,
							"sourceUnit": 2381,
							"src": "129:35:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2673,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2380,
										"src": "137:5:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 2676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4277,
							"sourceUnit": 6042,
							"src": "165:40:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2675,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 6041,
										"src": "173:8:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2677,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:14",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 4276,
							"linearizedBaseContracts": [
								4276
							],
							"name": "Math",
							"nameLocation": "289:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 2682,
									"members": [
										{
											"id": 2678,
											"name": "Floor",
											"nameLocation": "324:5:14",
											"nodeType": "EnumValue",
											"src": "324:5:14"
										},
										{
											"id": 2679,
											"name": "Ceil",
											"nameLocation": "367:4:14",
											"nodeType": "EnumValue",
											"src": "367:4:14"
										},
										{
											"id": 2680,
											"name": "Trunc",
											"nameLocation": "409:5:14",
											"nodeType": "EnumValue",
											"src": "409:5:14"
										},
										{
											"id": 2681,
											"name": "Expand",
											"nameLocation": "439:6:14",
											"nodeType": "EnumValue",
											"src": "439:6:14"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:14",
									"nodeType": "EnumDefinition",
									"src": "300:169:14"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "677:140:14",
										"statements": [
											{
												"id": 2712,
												"nodeType": "UncheckedBlock",
												"src": "687:124:14",
												"statements": [
													{
														"assignments": [
															2695
														],
														"declarations": [
															{
																"constant": false,
																"id": 2695,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 2712,
																"src": "711:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2694,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2699,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2696,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2685,
																"src": "723:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2697,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2687,
																"src": "727:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2700,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "746:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2701,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2685,
																"src": "750:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2707,
														"nodeType": "IfStatement",
														"src": "742:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2705,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2693,
															"id": 2706,
															"nodeType": "Return",
															"src": "753:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2709,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2695,
																	"src": "798:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2710,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2693,
														"id": 2711,
														"nodeType": "Return",
														"src": "784:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2683,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:14",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "602:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "613:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:14"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "647:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2689,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "661:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:14"
									},
									"scope": 4276,
									"src": "586:231:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2741,
										"nodeType": "Block",
										"src": "1028:113:14",
										"statements": [
											{
												"id": 2740,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2726,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2719,
																"src": "1066:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2727,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2717,
																"src": "1070:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2733,
														"nodeType": "IfStatement",
														"src": "1062:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2731,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2725,
															"id": 2732,
															"nodeType": "Return",
															"src": "1073:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2735,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2717,
																		"src": "1118:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2736,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2719,
																		"src": "1122:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2738,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2725,
														"id": 2739,
														"nodeType": "Return",
														"src": "1104:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:14",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "953:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "964:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:14"
									},
									"returnParameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "998:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1012:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:14"
									},
									"scope": 4276,
									"src": "937:204:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2783,
										"nodeType": "Block",
										"src": "1355:417:14",
										"statements": [
											{
												"id": 2782,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2745,
																"src": "1623:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2761,
														"nodeType": "IfStatement",
														"src": "1619:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2759,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2753,
															"id": 2760,
															"nodeType": "Return",
															"src": "1631:16:14"
														}
													},
													{
														"assignments": [
															2763
														],
														"declarations": [
															{
																"constant": false,
																"id": 2763,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 2782,
																"src": "1661:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2767,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2764,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2745,
																"src": "1673:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2765,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2747,
																"src": "1677:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2768,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2763,
																	"src": "1696:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2769,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2745,
																	"src": "1700:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2771,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2747,
																"src": "1705:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2777,
														"nodeType": "IfStatement",
														"src": "1692:33:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2775,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2753,
															"id": 2776,
															"nodeType": "Return",
															"src": "1708:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2779,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2763,
																	"src": "1753:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2780,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2753,
														"id": 2781,
														"nodeType": "Return",
														"src": "1739:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2743,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:14",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "1280:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "1291:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:14"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "1325:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "1339:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:14"
									},
									"scope": 4276,
									"src": "1264:508:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2811,
										"nodeType": "Block",
										"src": "1987:114:14",
										"statements": [
											{
												"id": 2810,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2796,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "2025:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2803,
														"nodeType": "IfStatement",
														"src": "2021:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2801,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2795,
															"id": 2802,
															"nodeType": "Return",
															"src": "2033:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2805,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2787,
																		"src": "2078:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2806,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "2082:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2808,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2795,
														"id": 2809,
														"nodeType": "Return",
														"src": "2064:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2785,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:14",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 2812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "1912:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "1923:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:14"
									},
									"returnParameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "1957:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "1971:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:14"
									},
									"scope": 4276,
									"src": "1896:205:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2839,
										"nodeType": "Block",
										"src": "2326:114:14",
										"statements": [
											{
												"id": 2838,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2824,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2817,
																"src": "2364:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2831,
														"nodeType": "IfStatement",
														"src": "2360:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2829,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2823,
															"id": 2830,
															"nodeType": "Return",
															"src": "2372:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2833,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2815,
																		"src": "2417:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2834,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2817,
																		"src": "2421:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2836,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2823,
														"id": 2837,
														"nodeType": "Return",
														"src": "2403:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2813,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:14",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 2840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "2251:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "2262:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:14"
									},
									"returnParameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "2296:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "2310:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:14"
									},
									"scope": 4276,
									"src": "2235:205:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2866,
										"nodeType": "Block",
										"src": "2912:207:14",
										"statements": [
											{
												"id": 2865,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:14",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2852,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2847,
																"src": "3060:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2855,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2853,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2845,
																						"src": "3066:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 2854,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2847,
																						"src": "3070:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2856,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2859,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2843,
																					"src": "3091:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 2857,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 6041,
																					"src": "3075:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 2858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:14",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 6040,
																				"src": "3075:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 2860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2862,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2851,
														"id": 2864,
														"nodeType": "Return",
														"src": "3053:49:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2841,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:14",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 2867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "2842:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "2858:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "2869:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:14"
									},
									"returnParameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "2903:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:14"
									},
									"scope": 4276,
									"src": "2825:294:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2885,
										"nodeType": "Block",
										"src": "3256:44:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2878,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2870,
																"src": "3281:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2879,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "3285:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2881,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2870,
															"src": "3288:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2882,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2872,
															"src": "3291:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2877,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2867,
														"src": "3273:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2876,
												"id": 2884,
												"nodeType": "Return",
												"src": "3266:27:14"
											}
										]
									},
									"documentation": {
										"id": 2868,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:14",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "3202:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "3213:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:14"
									},
									"returnParameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "3247:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:14"
									},
									"scope": 4276,
									"src": "3189:111:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2904,
										"nodeType": "Block",
										"src": "3438:44:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2897,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2889,
																"src": "3463:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2898,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2891,
																"src": "3467:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2900,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2889,
															"src": "3470:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2901,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2891,
															"src": "3473:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2896,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2867,
														"src": "3455:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2895,
												"id": 2903,
												"nodeType": "Return",
												"src": "3448:27:14"
											}
										]
									},
									"documentation": {
										"id": 2887,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:14",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "3384:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "3395:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:14"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "3429:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:14"
									},
									"scope": 4276,
									"src": "3371:111:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2927,
										"nodeType": "Block",
										"src": "3666:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2915,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2908,
																	"src": "3721:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2916,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2910,
																	"src": "3725:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2918,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2919,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2908,
																		"src": "3731:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2920,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2910,
																		"src": "3735:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2922,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2914,
												"id": 2926,
												"nodeType": "Return",
												"src": "3713:28:14"
											}
										]
									},
									"documentation": {
										"id": 2906,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:14",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "3612:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "3623:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:14"
									},
									"returnParameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "3657:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:14"
									},
									"scope": 4276,
									"src": "3595:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2968,
										"nodeType": "Block",
										"src": "4040:633:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2938,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2933,
														"src": "4054:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2949,
												"nodeType": "IfStatement",
												"src": "4050:150:14",
												"trueBody": {
													"id": 2948,
													"nodeType": "Block",
													"src": "4062:138:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2944,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "4166:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$2380_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:14",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2347,
																		"src": "4166:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2941,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2380,
																		"src": "4154:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$2380_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:14",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2379,
																	"src": "4154:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2947,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:14"
														}
													]
												}
											},
											{
												"id": 2967,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:14",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2952,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2931,
																			"src": "4630:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2950,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "4614:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "4614:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2958,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2956,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2931,
																							"src": "4641:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2957,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2959,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2960,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2933,
																				"src": "4650:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2964,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2937,
														"id": 2966,
														"nodeType": "Return",
														"src": "4607:49:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2929,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:14",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "3986:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "3997:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:14"
									},
									"returnParameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "4031:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:14"
									},
									"scope": 4276,
									"src": "3969:704:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3105,
										"nodeType": "Block",
										"src": "5094:4128:14",
										"statements": [
											{
												"id": 3104,
												"nodeType": "UncheckedBlock",
												"src": "5104:4112:14",
												"statements": [
													{
														"assignments": [
															2982
														],
														"declarations": [
															{
																"constant": false,
																"id": 2982,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5441:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 3104,
																"src": "5433:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2981,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2986,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2983,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2972,
																"src": "5449:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2984,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2974,
																"src": "5453:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5433:21:14"
													},
													{
														"assignments": [
															2988
														],
														"declarations": [
															{
																"constant": false,
																"id": 2988,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5521:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 3104,
																"src": "5513:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2987,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5513:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2989,
														"nodeType": "VariableDeclarationStatement",
														"src": "5513:13:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5593:122:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5628:1:14"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5631:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5638:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5634:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5621:20:14"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "5615:2:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5658:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "5675:2:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5679:5:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5671:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "5690:2:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5694:5:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5687:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5687:13:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5667:34:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5658:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2982,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2982,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2988,
																"isOffset": false,
																"isSlot": false,
																"src": "5658:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2972,
																"isOffset": false,
																"isSlot": false,
																"src": "5628:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2974,
																"isOffset": false,
																"isSlot": false,
																"src": "5631:1:14",
																"valueSize": 1
															}
														],
														"id": 2990,
														"nodeType": "InlineAssembly",
														"src": "5584:131:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2991,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2988,
																"src": "5796:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5805:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5796:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2999,
														"nodeType": "IfStatement",
														"src": "5792:368:14",
														"trueBody": {
															"id": 2998,
															"nodeType": "Block",
															"src": "5808:352:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2994,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2982,
																			"src": "6126:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2995,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "6134:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6126:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2980,
																	"id": 2997,
																	"nodeType": "Return",
																	"src": "6119:26:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3000,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2976,
																"src": "6270:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3001,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2988,
																"src": "6285:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6270:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3018,
														"nodeType": "IfStatement",
														"src": "6266:143:14",
														"trueBody": {
															"id": 3017,
															"nodeType": "Block",
															"src": "6292:117:14",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3009,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3007,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2976,
																							"src": "6330:11:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 3008,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6345:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6330:16:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 3010,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2380,
																							"src": "6348:5:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$2380_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 3011,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6354:16:14",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2347,
																						"src": "6348:22:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 3012,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2380,
																							"src": "6372:5:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$2380_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 3013,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6378:14:14",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2343,
																						"src": "6372:20:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 3006,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2867,
																					"src": "6322:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6322:71:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 3003,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2380,
																				"src": "6310:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$2380_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 3005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6316:5:14",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2379,
																			"src": "6310:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 3015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6310:84:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3016,
																	"nodeType": "ExpressionStatement",
																	"src": "6310:84:14"
																}
															]
														}
													},
													{
														"assignments": [
															3020
														],
														"declarations": [
															{
																"constant": false,
																"id": 3020,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6672:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 3104,
																"src": "6664:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3019,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6664:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3021,
														"nodeType": "VariableDeclarationStatement",
														"src": "6664:17:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6704:291:14",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6773:38:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "6793:1:14"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:14"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6799:11:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "6786:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6786:25:14"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "6773:9:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6893:41:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "6916:9:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "6927:5:14"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "6913:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6913:20:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6902:32:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "6893:5:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6951:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:14"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6960:21:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2976,
																"isOffset": false,
																"isSlot": false,
																"src": "6799:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2982,
																"isOffset": false,
																"isSlot": false,
																"src": "6927:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2982,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2982,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2988,
																"isOffset": false,
																"isSlot": false,
																"src": "6893:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2988,
																"isOffset": false,
																"isSlot": false,
																"src": "6906:5:14",
																"valueSize": 1
															},
															{
																"declaration": 3020,
																"isOffset": false,
																"isSlot": false,
																"src": "6773:9:14",
																"valueSize": 1
															},
															{
																"declaration": 3020,
																"isOffset": false,
																"isSlot": false,
																"src": "6916:9:14",
																"valueSize": 1
															},
															{
																"declaration": 3020,
																"isOffset": false,
																"isSlot": false,
																"src": "6971:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2972,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2974,
																"isOffset": false,
																"isSlot": false,
																"src": "6796:1:14",
																"valueSize": 1
															}
														],
														"id": 3022,
														"nodeType": "InlineAssembly",
														"src": "6695:300:14"
													},
													{
														"assignments": [
															3024
														],
														"declarations": [
															{
																"constant": false,
																"id": 3024,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7207:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 3104,
																"src": "7199:12:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3023,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3031,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3025,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2976,
																"src": "7214:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 3026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7229:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 3027,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "7233:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7229:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3029,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7228:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7214:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7199:46:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "7268:366:14",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "7333:37:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "7352:11:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "7365:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7348:22:14"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "7333:11:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7437:25:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "7450:5:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "7457:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7446:16:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "7437:5:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7581:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7601:1:14",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "7604:4:14"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7597:12:14"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "7611:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7593:23:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7589:31:14"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "7581:4:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2976,
																"isOffset": false,
																"isSlot": false,
																"src": "7333:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2976,
																"isOffset": false,
																"isSlot": false,
																"src": "7352:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2982,
																"isOffset": false,
																"isSlot": false,
																"src": "7437:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2982,
																"isOffset": false,
																"isSlot": false,
																"src": "7450:5:14",
																"valueSize": 1
															},
															{
																"declaration": 3024,
																"isOffset": false,
																"isSlot": false,
																"src": "7365:4:14",
																"valueSize": 1
															},
															{
																"declaration": 3024,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:4:14",
																"valueSize": 1
															},
															{
																"declaration": 3024,
																"isOffset": false,
																"isSlot": false,
																"src": "7581:4:14",
																"valueSize": 1
															},
															{
																"declaration": 3024,
																"isOffset": false,
																"isSlot": false,
																"src": "7604:4:14",
																"valueSize": 1
															},
															{
																"declaration": 3024,
																"isOffset": false,
																"isSlot": false,
																"src": "7611:4:14",
																"valueSize": 1
															}
														],
														"id": 3032,
														"nodeType": "InlineAssembly",
														"src": "7259:375:14"
													},
													{
														"expression": {
															"id": 3037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3033,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2982,
																"src": "7700:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3034,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2988,
																	"src": "7709:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3035,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3024,
																	"src": "7717:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3038,
														"nodeType": "ExpressionStatement",
														"src": "7700:21:14"
													},
													{
														"assignments": [
															3040
														],
														"declarations": [
															{
																"constant": false,
																"id": 3040,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8064:7:14",
																"nodeType": "VariableDeclaration",
																"scope": 3104,
																"src": "8056:15:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3039,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8056:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3047,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 3041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8075:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 3042,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "8079:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3044,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8074:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8094:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8074:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8056:39:14"
													},
													{
														"expression": {
															"id": 3054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3048,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3040,
																"src": "8312:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8323:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3050,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2976,
																		"src": "8327:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3051,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3040,
																		"src": "8341:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8323:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8312:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3055,
														"nodeType": "ExpressionStatement",
														"src": "8312:36:14"
													},
													{
														"expression": {
															"id": 3062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3056,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3040,
																"src": "8382:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8393:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3058,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2976,
																		"src": "8397:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3059,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3040,
																		"src": "8411:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8397:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8393:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8382:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3063,
														"nodeType": "ExpressionStatement",
														"src": "8382:36:14"
													},
													{
														"expression": {
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3064,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3040,
																"src": "8454:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8465:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3066,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2976,
																		"src": "8469:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3067,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3040,
																		"src": "8483:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8469:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8454:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3071,
														"nodeType": "ExpressionStatement",
														"src": "8454:36:14"
													},
													{
														"expression": {
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3072,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3040,
																"src": "8525:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3074,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2976,
																		"src": "8540:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3075,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3040,
																		"src": "8554:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8536:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8525:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3079,
														"nodeType": "ExpressionStatement",
														"src": "8525:36:14"
													},
													{
														"expression": {
															"id": 3086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3080,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3040,
																"src": "8598:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3082,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2976,
																		"src": "8613:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3083,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3040,
																		"src": "8627:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8613:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8609:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8598:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3087,
														"nodeType": "ExpressionStatement",
														"src": "8598:36:14"
													},
													{
														"expression": {
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3088,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3040,
																"src": "8672:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3090,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2976,
																		"src": "8687:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3091,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3040,
																		"src": "8701:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8687:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8672:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3095,
														"nodeType": "ExpressionStatement",
														"src": "8672:36:14"
													},
													{
														"expression": {
															"id": 3100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3096,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2979,
																"src": "9154:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3097,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "9163:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3098,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3040,
																	"src": "9171:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9163:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9154:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3101,
														"nodeType": "ExpressionStatement",
														"src": "9154:24:14"
													},
													{
														"expression": {
															"id": 3102,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2979,
															"src": "9199:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2980,
														"id": 3103,
														"nodeType": "Return",
														"src": "9192:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2970,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:14",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 3106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "5012:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "5023:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "5034:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:14"
									},
									"returnParameters": {
										"id": 2980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2979,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "5078:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:14"
									},
									"scope": 4276,
									"src": "4996:4226:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3142,
										"nodeType": "Block",
										"src": "9461:128:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3122,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3109,
																"src": "9485:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3123,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3111,
																"src": "9488:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3124,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3113,
																"src": "9491:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3121,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																3106,
																3143
															],
															"referencedDeclaration": 3106,
															"src": "9478:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9478:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3129,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3116,
																			"src": "9539:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$2682",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$2682",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 3128,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4275,
																		"src": "9522:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2682_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 3130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9522:26:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 3132,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3109,
																				"src": "9559:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 3133,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3111,
																				"src": "9562:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 3134,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3113,
																				"src": "9565:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 3131,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9552:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9552:25:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9580:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9552:29:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9522:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 3126,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6041,
																"src": "9506:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 3127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9515:6:14",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6040,
															"src": "9506:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 3139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9506:76:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:104:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3120,
												"id": 3141,
												"nodeType": "Return",
												"src": "9471:111:14"
											}
										]
									},
									"documentation": {
										"id": 3107,
										"nodeType": "StructuredDocumentation",
										"src": "9228:118:14",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 3143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9360:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9375:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "9367:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9367:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9386:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "9378:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9397:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "9389:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9419:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "9410:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2682",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3115,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3114,
														"name": "Rounding",
														"nameLocations": [
															"9410:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2682,
														"src": "9410:8:14"
													},
													"referencedDeclaration": 2682,
													"src": "9410:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2682",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9366:62:14"
									},
									"returnParameters": {
										"id": 3120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "9452:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:9:14"
									},
									"scope": 4276,
									"src": "9351:238:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3239,
										"nodeType": "Block",
										"src": "10223:1849:14",
										"statements": [
											{
												"id": 3238,
												"nodeType": "UncheckedBlock",
												"src": "10233:1833:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3153,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3148,
																"src": "10261:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10266:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10261:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3158,
														"nodeType": "IfStatement",
														"src": "10257:20:14",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 3156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10276:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3152,
															"id": 3157,
															"nodeType": "Return",
															"src": "10269:8:14"
														}
													},
													{
														"assignments": [
															3160
														],
														"declarations": [
															{
																"constant": false,
																"id": 3160,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10756:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 3238,
																"src": "10748:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3159,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10748:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3164,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3161,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3146,
																"src": "10768:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 3162,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3148,
																"src": "10772:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10748:25:14"
													},
													{
														"assignments": [
															3166
														],
														"declarations": [
															{
																"constant": false,
																"id": 3166,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10795:3:14",
																"nodeType": "VariableDeclaration",
																"scope": 3238,
																"src": "10787:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3165,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10787:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3168,
														"initialValue": {
															"id": 3167,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3148,
															"src": "10801:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10787:15:14"
													},
													{
														"assignments": [
															3170
														],
														"declarations": [
															{
																"constant": false,
																"id": 3170,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10945:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 3238,
																"src": "10938:8:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 3169,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3172,
														"initialValue": {
															"hexValue": "30",
															"id": 3171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10949:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10938:12:14"
													},
													{
														"assignments": [
															3174
														],
														"declarations": [
															{
																"constant": false,
																"id": 3174,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10971:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 3238,
																"src": "10964:8:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 3173,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10964:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3176,
														"initialValue": {
															"hexValue": "31",
															"id": 3175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10975:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10964:12:14"
													},
													{
														"body": {
															"id": 3213,
															"nodeType": "Block",
															"src": "11014:882:14",
															"statements": [
																{
																	"assignments": [
																		3181
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3181,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11040:8:14",
																			"nodeType": "VariableDeclaration",
																			"scope": 3213,
																			"src": "11032:16:14",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 3180,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11032:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3185,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3182,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3166,
																			"src": "11051:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 3183,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "11057:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11051:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11032:34:14"
																},
																{
																	"expression": {
																		"id": 3196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 3186,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3166,
																					"src": "11086:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3187,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3160,
																					"src": "11091:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3188,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11085:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 3189,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3160,
																					"src": "11191:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3190,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3166,
																						"src": "11436:3:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3193,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3191,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3160,
																							"src": "11442:9:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 3192,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3181,
																							"src": "11454:8:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11442:20:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11436:26:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3195,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11104:376:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11085:395:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3197,
																	"nodeType": "ExpressionStatement",
																	"src": "11085:395:14"
																},
																{
																	"expression": {
																		"id": 3211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 3198,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3170,
																					"src": "11500:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 3199,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3174,
																					"src": "11503:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 3200,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11499:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 3201,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3174,
																					"src": "11585:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 3209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3202,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3170,
																						"src": "11839:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 3208,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3203,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3174,
																							"src": "11843:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 3206,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3181,
																									"src": "11854:8:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 3205,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11847:6:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 3204,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11847:6:14",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 3207,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11847:16:14",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11843:20:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11839:24:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 3210,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11508:373:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11499:382:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3212,
																	"nodeType": "ExpressionStatement",
																	"src": "11499:382:14"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3177,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3160,
																"src": "10998:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10998:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3214,
														"nodeType": "WhileStatement",
														"src": "10991:905:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3215,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3166,
																"src": "11914:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 3216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11921:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11914:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3220,
														"nodeType": "IfStatement",
														"src": "11910:22:14",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 3218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11931:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3152,
															"id": 3219,
															"nodeType": "Return",
															"src": "11924:8:14"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3222,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3170,
																		"src": "11983:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11987:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11983:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3225,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3148,
																		"src": "11990:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 3229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "12002:2:14",
																				"subExpression": {
																					"id": 3228,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3170,
																					"src": "12003:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 3227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11994:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 3226,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11994:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11994:11:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11990:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3234,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3170,
																			"src": "12015:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 3233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12007:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3232,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12007:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12007:10:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3221,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2867,
																"src": "11975:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11975:43:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3152,
														"id": 3237,
														"nodeType": "Return",
														"src": "11968:50:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3144,
										"nodeType": "StructuredDocumentation",
										"src": "9595:553:14",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 3240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10162:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10177:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "10169:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10188:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "10180:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:22:14"
									},
									"returnParameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "10214:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10213:9:14"
									},
									"scope": 4276,
									"src": "10153:1919:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3260,
										"nodeType": "Block",
										"src": "12672:82:14",
										"statements": [
											{
												"id": 3259,
												"nodeType": "UncheckedBlock",
												"src": "12682:66:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 3252,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3243,
																	"src": "12725:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3253,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3245,
																		"src": "12728:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 3254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12732:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12728:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3256,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3245,
																	"src": "12735:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3250,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4276,
																	"src": "12713:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$4276_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 3251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:6:14",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3297,
																"src": "12713:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 3257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12713:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3249,
														"id": 3258,
														"nodeType": "Return",
														"src": "12706:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3241,
										"nodeType": "StructuredDocumentation",
										"src": "12078:514:14",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 3261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "12606:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3243,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12626:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3261,
												"src": "12618:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12618:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3245,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "12637:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3261,
												"src": "12629:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12617:22:14"
									},
									"returnParameters": {
										"id": 3249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3261,
												"src": "12663:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:9:14"
									},
									"scope": 4276,
									"src": "12597:157:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3296,
										"nodeType": "Block",
										"src": "13524:174:14",
										"statements": [
											{
												"assignments": [
													3274,
													3276
												],
												"declarations": [
													{
														"constant": false,
														"id": 3274,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13540:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 3296,
														"src": "13535:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3273,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13535:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3276,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13557:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3296,
														"src": "13549:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13549:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3282,
												"initialValue": {
													"arguments": [
														{
															"id": 3278,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3264,
															"src": "13577:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3279,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3266,
															"src": "13580:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3280,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3268,
															"src": "13583:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3277,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3321,
															3403
														],
														"referencedDeclaration": 3321,
														"src": "13567:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 3281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13567:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13534:51:14"
											},
											{
												"condition": {
													"id": 3284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13599:8:14",
													"subExpression": {
														"id": 3283,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3274,
														"src": "13600:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3293,
												"nodeType": "IfStatement",
												"src": "13595:74:14",
												"trueBody": {
													"id": 3292,
													"nodeType": "Block",
													"src": "13609:60:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3288,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "13635:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$2380_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 3289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13641:16:14",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2347,
																		"src": "13635:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3285,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2380,
																		"src": "13623:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$2380_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 3287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13629:5:14",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2379,
																	"src": "13623:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 3290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13623:35:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3291,
															"nodeType": "ExpressionStatement",
															"src": "13623:35:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3294,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3276,
													"src": "13685:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3272,
												"id": 3295,
												"nodeType": "Return",
												"src": "13678:13:14"
											}
										]
									},
									"documentation": {
										"id": 3262,
										"nodeType": "StructuredDocumentation",
										"src": "12760:678:14",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 3297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "13452:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13467:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "13459:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3266,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13478:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "13470:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13489:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "13481:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:33:14"
									},
									"returnParameters": {
										"id": 3272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3297,
												"src": "13515:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13515:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13514:9:14"
									},
									"scope": 4276,
									"src": "13443:255:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3320,
										"nodeType": "Block",
										"src": "14552:1493:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3311,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3304,
														"src": "14566:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14571:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14566:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3318,
												"nodeType": "IfStatement",
												"src": "14562:29:14",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 3314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14582:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 3315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14589:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 3316,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14581:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 3310,
													"id": 3317,
													"nodeType": "Return",
													"src": "14574:17:14"
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14626:1413:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14640:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14657:4:14",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14651:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14651:11:14"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "14644:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15563:17:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15563:17:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15604:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15609:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15600:14:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15593:28:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15593:28:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15645:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15650:4:14",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15641:14:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15634:28:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15634:28:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15686:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15691:4:14",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15682:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15682:14:14"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "15698:1:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15675:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15675:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15675:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15724:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15729:4:14",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15720:14:14"
																	},
																	{
																		"name": "e",
																		"nodeType": "YulIdentifier",
																		"src": "15736:1:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15713:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15713:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15767:4:14",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15758:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15758:14:14"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15751:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15751:25:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15938:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "15960:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15960:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15967:4:14",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15973:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:14",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:14",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15990:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nodeType": "YulIdentifier",
																	"src": "15949:10:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15949:46:14"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "15938:7:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16008:21:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16024:4:14",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16018:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16018:11:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3300,
														"isOffset": false,
														"isSlot": false,
														"src": "15698:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3302,
														"isOffset": false,
														"isSlot": false,
														"src": "15736:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3304,
														"isOffset": false,
														"isSlot": false,
														"src": "15774:1:14",
														"valueSize": 1
													},
													{
														"declaration": 3309,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:6:14",
														"valueSize": 1
													},
													{
														"declaration": 3307,
														"isOffset": false,
														"isSlot": false,
														"src": "15938:7:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 3319,
												"nodeType": "InlineAssembly",
												"src": "14601:1438:14"
											}
										]
									},
									"documentation": {
										"id": 3298,
										"nodeType": "StructuredDocumentation",
										"src": "13704:738:14",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 3321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "14456:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14474:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3321,
												"src": "14466:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3302,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "14485:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3321,
												"src": "14477:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14477:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "14496:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3321,
												"src": "14488:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:33:14"
									},
									"returnParameters": {
										"id": 3310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14527:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3321,
												"src": "14522:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14522:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3309,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14544:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3321,
												"src": "14536:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14536:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14521:30:14"
									},
									"scope": 4276,
									"src": "14447:1598:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3356,
										"nodeType": "Block",
										"src": "16242:179:14",
										"statements": [
											{
												"assignments": [
													3334,
													3336
												],
												"declarations": [
													{
														"constant": false,
														"id": 3334,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16258:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 3356,
														"src": "16253:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3333,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16253:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3336,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16280:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3356,
														"src": "16267:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3335,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16267:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3342,
												"initialValue": {
													"arguments": [
														{
															"id": 3338,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3324,
															"src": "16300:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 3339,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3326,
															"src": "16303:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 3340,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3328,
															"src": "16306:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3337,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3321,
															3403
														],
														"referencedDeclaration": 3403,
														"src": "16290:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 3341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16252:56:14"
											},
											{
												"condition": {
													"id": 3344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16322:8:14",
													"subExpression": {
														"id": 3343,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3334,
														"src": "16323:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3353,
												"nodeType": "IfStatement",
												"src": "16318:74:14",
												"trueBody": {
													"id": 3352,
													"nodeType": "Block",
													"src": "16332:60:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3348,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "16358:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$2380_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 3349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16364:16:14",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2347,
																		"src": "16358:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3345,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2380,
																		"src": "16346:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$2380_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 3347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16352:5:14",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2379,
																	"src": "16346:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 3350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:35:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3351,
															"nodeType": "ExpressionStatement",
															"src": "16346:35:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3354,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3336,
													"src": "16408:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 3332,
												"id": 3355,
												"nodeType": "Return",
												"src": "16401:13:14"
											}
										]
									},
									"documentation": {
										"id": 3322,
										"nodeType": "StructuredDocumentation",
										"src": "16051:85:14",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 3357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "16150:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16170:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "16157:14:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16157:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3326,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16186:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "16173:14:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16173:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16202:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "16189:14:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16189:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:48:14"
									},
									"returnParameters": {
										"id": 3332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "16228:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16228:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16227:14:14"
									},
									"scope": 4276,
									"src": "16141:280:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3402,
										"nodeType": "Block",
										"src": "16675:771:14",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 3372,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3364,
															"src": "16700:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3371,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3436,
														"src": "16689:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 3373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16689:13:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3381,
												"nodeType": "IfStatement",
												"src": "16685:47:14",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 3374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16712:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16729:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16719:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 3375,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16723:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 3378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16719:12:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 3379,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16711:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 3370,
													"id": 3380,
													"nodeType": "Return",
													"src": "16704:28:14"
												}
											},
											{
												"assignments": [
													3383
												],
												"declarations": [
													{
														"constant": false,
														"id": 3383,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16751:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3402,
														"src": "16743:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3382,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16743:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3386,
												"initialValue": {
													"expression": {
														"id": 3384,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3364,
														"src": "16758:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 3385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16760:6:14",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16758:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16743:23:14"
											},
											{
												"expression": {
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3387,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3369,
														"src": "16848:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3390,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3360,
																	"src": "16874:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 3391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16876:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16874:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3392,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3362,
																	"src": "16884:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 3393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16886:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16884:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3394,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3383,
																"src": "16894:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3395,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3360,
																"src": "16900:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 3396,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3362,
																"src": "16903:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 3397,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3364,
																"src": "16906:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 3388,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16857:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 3389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16861:12:14",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16857:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 3398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16857:51:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16848:60:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 3400,
												"nodeType": "ExpressionStatement",
												"src": "16848:60:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16944:496:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16958:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16973:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16973:17:14"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nodeType": "YulTypedName",
																	"src": "16962:7:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17080:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "17102:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17102:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17109:4:14",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nodeType": "YulIdentifier",
																		"src": "17115:7:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "17130:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17124:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17124:13:14"
																	},
																	{
																		"name": "dataPtr",
																		"nodeType": "YulIdentifier",
																		"src": "17139:7:14"
																	},
																	{
																		"name": "mLen",
																		"nodeType": "YulIdentifier",
																		"src": "17148:4:14"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nodeType": "YulIdentifier",
																	"src": "17091:10:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17091:62:14"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "17080:7:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:14"
																	},
																	{
																		"name": "mLen",
																		"nodeType": "YulIdentifier",
																		"src": "17317:4:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17302:20:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17302:20:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17405:4:14",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17415:7:14"
																			},
																			{
																				"name": "mLen",
																				"nodeType": "YulIdentifier",
																				"src": "17424:4:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17398:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17398:32:14"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3383,
														"isOffset": false,
														"isSlot": false,
														"src": "17148:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3383,
														"isOffset": false,
														"isSlot": false,
														"src": "17317:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3383,
														"isOffset": false,
														"isSlot": false,
														"src": "17424:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3369,
														"isOffset": false,
														"isSlot": false,
														"src": "16977:6:14",
														"valueSize": 1
													},
													{
														"declaration": 3369,
														"isOffset": false,
														"isSlot": false,
														"src": "17130:6:14",
														"valueSize": 1
													},
													{
														"declaration": 3369,
														"isOffset": false,
														"isSlot": false,
														"src": "17309:6:14",
														"valueSize": 1
													},
													{
														"declaration": 3367,
														"isOffset": false,
														"isSlot": false,
														"src": "17080:7:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 3401,
												"nodeType": "InlineAssembly",
												"src": "16919:521:14"
											}
										]
									},
									"documentation": {
										"id": 3358,
										"nodeType": "StructuredDocumentation",
										"src": "16427:88:14",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 3403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16529:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16561:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3403,
												"src": "16548:14:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16548:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3362,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16585:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3403,
												"src": "16572:14:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16572:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3364,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3403,
												"src": "16596:14:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16596:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16538:78:14"
									},
									"returnParameters": {
										"id": 3370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3367,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "16645:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3403,
												"src": "16640:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3366,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16640:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16667:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3403,
												"src": "16654:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16654:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:35:14"
									},
									"scope": 4276,
									"src": "16520:926:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3435,
										"nodeType": "Block",
										"src": "17601:176:14",
										"statements": [
											{
												"body": {
													"id": 3431,
													"nodeType": "Block",
													"src": "17658:92:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 3426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3422,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3406,
																		"src": "17676:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3424,
																	"indexExpression": {
																		"id": 3423,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3412,
																		"src": "17686:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17676:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17692:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17676:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3430,
															"nodeType": "IfStatement",
															"src": "17672:68:14",
															"trueBody": {
																"id": 3429,
																"nodeType": "Block",
																"src": "17695:45:14",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 3427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17720:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 3410,
																		"id": 3428,
																		"nodeType": "Return",
																		"src": "17713:12:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3415,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3412,
														"src": "17631:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3416,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3406,
															"src": "17635:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17645:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17635:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17631:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3432,
												"initializationExpression": {
													"assignments": [
														3412
													],
													"declarations": [
														{
															"constant": false,
															"id": 3412,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17624:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3432,
															"src": "17616:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3411,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17616:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3414,
													"initialValue": {
														"hexValue": "30",
														"id": 3413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17628:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17616:13:14"
												},
												"loopExpression": {
													"expression": {
														"id": 3420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17653:3:14",
														"subExpression": {
															"id": 3419,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3412,
															"src": "17655:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3421,
													"nodeType": "ExpressionStatement",
													"src": "17653:3:14"
												},
												"nodeType": "ForStatement",
												"src": "17611:139:14"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3433,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3410,
												"id": 3434,
												"nodeType": "Return",
												"src": "17759:11:14"
											}
										]
									},
									"documentation": {
										"id": 3404,
										"nodeType": "StructuredDocumentation",
										"src": "17452:72:14",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 3436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "17538:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3406,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "17562:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "17549:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17549:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17548:24:14"
									},
									"returnParameters": {
										"id": 3410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "17595:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17595:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17594:6:14"
									},
									"scope": 4276,
									"src": "17529:248:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3654,
										"nodeType": "Block",
										"src": "18137:5124:14",
										"statements": [
											{
												"id": 3653,
												"nodeType": "UncheckedBlock",
												"src": "18147:5108:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3444,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3439,
																"src": "18241:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 3445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18246:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18241:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3450,
														"nodeType": "IfStatement",
														"src": "18237:53:14",
														"trueBody": {
															"id": 3449,
															"nodeType": "Block",
															"src": "18249:41:14",
															"statements": [
																{
																	"expression": {
																		"id": 3447,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3439,
																		"src": "18274:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 3443,
																	"id": 3448,
																	"nodeType": "Return",
																	"src": "18267:8:14"
																}
															]
														}
													},
													{
														"assignments": [
															3452
														],
														"declarations": [
															{
																"constant": false,
																"id": 3452,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "19225:2:14",
																"nodeType": "VariableDeclaration",
																"scope": 3653,
																"src": "19217:10:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3451,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19217:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3454,
														"initialValue": {
															"id": 3453,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3439,
															"src": "19230:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19217:14:14"
													},
													{
														"assignments": [
															3456
														],
														"declarations": [
															{
																"constant": false,
																"id": 3456,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "19253:2:14",
																"nodeType": "VariableDeclaration",
																"scope": 3653,
																"src": "19245:10:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3455,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3458,
														"initialValue": {
															"hexValue": "31",
															"id": 3457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19258:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19245:14:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3459,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "19278:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 3462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19285:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 3461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19290:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19285:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 3463,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19284:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "19278:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3474,
														"nodeType": "IfStatement",
														"src": "19274:92:14",
														"trueBody": {
															"id": 3473,
															"nodeType": "Block",
															"src": "19296:70:14",
															"statements": [
																{
																	"expression": {
																		"id": 3467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3465,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3452,
																			"src": "19314:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19321:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19314:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3468,
																	"nodeType": "ExpressionStatement",
																	"src": "19314:10:14"
																},
																{
																	"expression": {
																		"id": 3471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3469,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3456,
																			"src": "19342:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19349:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19342:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3472,
																	"nodeType": "ExpressionStatement",
																	"src": "19342:9:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3475,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "19383:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 3478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19390:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 3477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19395:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19390:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 3479,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19389:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "19383:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3490,
														"nodeType": "IfStatement",
														"src": "19379:90:14",
														"trueBody": {
															"id": 3489,
															"nodeType": "Block",
															"src": "19400:69:14",
															"statements": [
																{
																	"expression": {
																		"id": 3483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3481,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3452,
																			"src": "19418:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19425:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19418:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3484,
																	"nodeType": "ExpressionStatement",
																	"src": "19418:9:14"
																},
																{
																	"expression": {
																		"id": 3487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3485,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3456,
																			"src": "19445:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19445:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3488,
																	"nodeType": "ExpressionStatement",
																	"src": "19445:9:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3491,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "19486:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 3494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19493:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 3493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19498:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19493:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 3495,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19492:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "19486:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3506,
														"nodeType": "IfStatement",
														"src": "19482:90:14",
														"trueBody": {
															"id": 3505,
															"nodeType": "Block",
															"src": "19503:69:14",
															"statements": [
																{
																	"expression": {
																		"id": 3499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3497,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3452,
																			"src": "19521:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19528:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19521:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3500,
																	"nodeType": "ExpressionStatement",
																	"src": "19521:9:14"
																},
																{
																	"expression": {
																		"id": 3503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3501,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3456,
																			"src": "19548:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19555:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19548:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3504,
																	"nodeType": "ExpressionStatement",
																	"src": "19548:9:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3507,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "19589:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 3510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19596:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 3509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19601:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19596:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 3511,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19595:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "19589:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3522,
														"nodeType": "IfStatement",
														"src": "19585:89:14",
														"trueBody": {
															"id": 3521,
															"nodeType": "Block",
															"src": "19606:68:14",
															"statements": [
																{
																	"expression": {
																		"id": 3515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3513,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3452,
																			"src": "19624:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19631:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19624:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3516,
																	"nodeType": "ExpressionStatement",
																	"src": "19624:9:14"
																},
																{
																	"expression": {
																		"id": 3519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3517,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3456,
																			"src": "19651:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19658:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19651:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3520,
																	"nodeType": "ExpressionStatement",
																	"src": "19651:8:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3523,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "19691:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 3526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19698:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 3525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19703:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19698:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 3527,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19697:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19691:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3538,
														"nodeType": "IfStatement",
														"src": "19687:87:14",
														"trueBody": {
															"id": 3537,
															"nodeType": "Block",
															"src": "19707:67:14",
															"statements": [
																{
																	"expression": {
																		"id": 3531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3529,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3452,
																			"src": "19725:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19732:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19725:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3532,
																	"nodeType": "ExpressionStatement",
																	"src": "19725:8:14"
																},
																{
																	"expression": {
																		"id": 3535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3533,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3456,
																			"src": "19751:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19758:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19751:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3536,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:8:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3539,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "19791:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 3542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19798:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 3541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19803:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19798:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 3543,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19797:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19791:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3554,
														"nodeType": "IfStatement",
														"src": "19787:87:14",
														"trueBody": {
															"id": 3553,
															"nodeType": "Block",
															"src": "19807:67:14",
															"statements": [
																{
																	"expression": {
																		"id": 3547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3545,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3452,
																			"src": "19825:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19832:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19825:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3548,
																	"nodeType": "ExpressionStatement",
																	"src": "19825:8:14"
																},
																{
																	"expression": {
																		"id": 3551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3549,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3456,
																			"src": "19851:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19858:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19851:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3552,
																	"nodeType": "ExpressionStatement",
																	"src": "19851:8:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3555,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "19891:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 3558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19898:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 3557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19903:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19898:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 3559,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19897:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19891:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3566,
														"nodeType": "IfStatement",
														"src": "19887:61:14",
														"trueBody": {
															"id": 3565,
															"nodeType": "Block",
															"src": "19907:41:14",
															"statements": [
																{
																	"expression": {
																		"id": 3563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3561,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3456,
																			"src": "19925:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19932:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19925:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3564,
																	"nodeType": "ExpressionStatement",
																	"src": "19925:8:14"
																}
															]
														}
													},
													{
														"expression": {
															"id": 3574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3567,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3456,
																"src": "20368:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 3568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20374:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3569,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3456,
																				"src": "20378:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20374:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3571,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20373:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20385:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20373:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20368:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3575,
														"nodeType": "ExpressionStatement",
														"src": "20368:18:14"
													},
													{
														"expression": {
															"id": 3585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3576,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3456,
																"src": "22273:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3577,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3456,
																				"src": "22279:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3578,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3439,
																					"src": "22284:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3579,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3456,
																					"src": "22288:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22284:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22279:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3582,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22278:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22295:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22278:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22273:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3586,
														"nodeType": "ExpressionStatement",
														"src": "22273:23:14"
													},
													{
														"expression": {
															"id": 3596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3587,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3456,
																"src": "22382:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3588,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3456,
																				"src": "22388:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3589,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3439,
																					"src": "22393:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3590,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3456,
																					"src": "22397:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22393:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22388:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3593,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22387:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22404:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22387:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3597,
														"nodeType": "ExpressionStatement",
														"src": "22382:23:14"
													},
													{
														"expression": {
															"id": 3607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3598,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3456,
																"src": "22493:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3599,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3456,
																				"src": "22499:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3600,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3439,
																					"src": "22504:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3601,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3456,
																					"src": "22508:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22504:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22499:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3604,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22498:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22515:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22498:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22493:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3608,
														"nodeType": "ExpressionStatement",
														"src": "22493:23:14"
													},
													{
														"expression": {
															"id": 3618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3609,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3456,
																"src": "22602:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3610,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3456,
																				"src": "22608:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3611,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3439,
																					"src": "22613:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3612,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3456,
																					"src": "22617:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22613:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22608:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3615,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22607:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22624:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22607:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22602:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3619,
														"nodeType": "ExpressionStatement",
														"src": "22602:23:14"
													},
													{
														"expression": {
															"id": 3629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3620,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3456,
																"src": "22712:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3621,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3456,
																				"src": "22718:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3622,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3439,
																					"src": "22723:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3623,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3456,
																					"src": "22727:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22723:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22718:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3626,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22717:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22734:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22717:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22712:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3630,
														"nodeType": "ExpressionStatement",
														"src": "22712:23:14"
													},
													{
														"expression": {
															"id": 3640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3631,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3456,
																"src": "22822:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3632,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3456,
																				"src": "22828:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3633,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3439,
																					"src": "22833:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3634,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3456,
																					"src": "22837:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22833:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22828:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3637,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22827:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22827:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22822:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3641,
														"nodeType": "ExpressionStatement",
														"src": "22822:23:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3642,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3456,
																"src": "23211:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3645,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3456,
																			"src": "23232:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3646,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3439,
																				"src": "23237:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3647,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3456,
																				"src": "23241:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23237:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23232:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3643,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "23216:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23225:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "23216:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23216:28:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23211:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3443,
														"id": 3652,
														"nodeType": "Return",
														"src": "23204:40:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3437,
										"nodeType": "StructuredDocumentation",
										"src": "17783:292:14",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 3655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18089:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3439,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18102:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3655,
												"src": "18094:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18094:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18093:11:14"
									},
									"returnParameters": {
										"id": 3443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3655,
												"src": "18128:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:14"
									},
									"scope": 4276,
									"src": "18080:5181:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3688,
										"nodeType": "Block",
										"src": "23434:171:14",
										"statements": [
											{
												"id": 3687,
												"nodeType": "UncheckedBlock",
												"src": "23444:155:14",
												"statements": [
													{
														"assignments": [
															3667
														],
														"declarations": [
															{
																"constant": false,
																"id": 3667,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23476:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 3687,
																"src": "23468:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3666,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23468:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3671,
														"initialValue": {
															"arguments": [
																{
																	"id": 3669,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3658,
																	"src": "23490:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3668,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3655,
																	3689
																],
																"referencedDeclaration": 3655,
																"src": "23485:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23485:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23468:24:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3672,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3667,
																"src": "23513:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3676,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3661,
																					"src": "23555:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2682",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2682",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3675,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4275,
																				"src": "23538:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2682_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23538:26:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3680,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3678,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3667,
																					"src": "23568:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3679,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3667,
																					"src": "23577:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23568:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3681,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3658,
																				"src": "23586:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23568:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "23538:49:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3673,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "23522:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23531:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "23522:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23522:66:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23513:75:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3665,
														"id": 3686,
														"nodeType": "Return",
														"src": "23506:82:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3656,
										"nodeType": "StructuredDocumentation",
										"src": "23267:86:14",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23367:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3658,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23380:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "23372:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23372:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3661,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23392:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "23383:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2682",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3659,
														"name": "Rounding",
														"nameLocations": [
															"23383:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2682,
														"src": "23383:8:14"
													},
													"referencedDeclaration": 2682,
													"src": "23383:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2682",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23371:30:14"
									},
									"returnParameters": {
										"id": 3665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "23425:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23425:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23424:9:14"
									},
									"scope": 4276,
									"src": "23358:247:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3884,
										"nodeType": "Block",
										"src": "23796:981:14",
										"statements": [
											{
												"assignments": [
													3698
												],
												"declarations": [
													{
														"constant": false,
														"id": 3698,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23814:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3884,
														"src": "23806:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3697,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23806:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3700,
												"initialValue": {
													"hexValue": "30",
													"id": 3699,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23823:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23806:18:14"
											},
											{
												"assignments": [
													3702
												],
												"declarations": [
													{
														"constant": false,
														"id": 3702,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23842:3:14",
														"nodeType": "VariableDeclaration",
														"scope": 3884,
														"src": "23834:11:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23834:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3703,
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:11:14"
											},
											{
												"id": 3881,
												"nodeType": "UncheckedBlock",
												"src": "23855:893:14",
												"statements": [
													{
														"expression": {
															"id": 3718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3704,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "23879:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 3705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23885:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3708,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3692,
																				"src": "23907:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 3714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 3711,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3709,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23916:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 3710,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23921:3:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23916:8:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 3712,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23915:10:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3713,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23928:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23915:14:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23907:22:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3706,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6041,
																			"src": "23891:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23900:6:14",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6040,
																		"src": "23891:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23891:39:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23885:45:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23879:51:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3719,
														"nodeType": "ExpressionStatement",
														"src": "23879:51:14"
													},
													{
														"expression": {
															"id": 3722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3720,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "23944:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3721,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "23954:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23944:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3723,
														"nodeType": "ExpressionStatement",
														"src": "23944:13:14"
													},
													{
														"expression": {
															"id": 3726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3724,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3698,
																"src": "23971:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3725,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "23981:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23971:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3727,
														"nodeType": "ExpressionStatement",
														"src": "23971:13:14"
													},
													{
														"expression": {
															"id": 3742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3728,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "23999:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 3729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24005:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3732,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3692,
																				"src": "24026:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 3738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 3735,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3733,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24035:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 3734,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24040:2:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "24035:7:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 3736,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24034:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24046:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24034:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "24026:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3730,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6041,
																			"src": "24010:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24019:6:14",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6040,
																		"src": "24010:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24010:38:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24005:43:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23999:49:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3743,
														"nodeType": "ExpressionStatement",
														"src": "23999:49:14"
													},
													{
														"expression": {
															"id": 3746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3744,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "24062:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3745,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24072:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24062:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3747,
														"nodeType": "ExpressionStatement",
														"src": "24062:13:14"
													},
													{
														"expression": {
															"id": 3750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3748,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3698,
																"src": "24089:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3749,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24099:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24089:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3751,
														"nodeType": "ExpressionStatement",
														"src": "24089:13:14"
													},
													{
														"expression": {
															"id": 3766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3752,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24117:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 3753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24123:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3756,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3692,
																				"src": "24144:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 3762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 3759,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3757,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24153:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 3758,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24158:2:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "24153:7:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 3760,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24152:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3761,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24164:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24152:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "24144:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3754,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6041,
																			"src": "24128:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24137:6:14",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6040,
																		"src": "24128:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24128:38:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24123:43:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24117:49:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3767,
														"nodeType": "ExpressionStatement",
														"src": "24117:49:14"
													},
													{
														"expression": {
															"id": 3770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3768,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "24180:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3769,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24190:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24180:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3771,
														"nodeType": "ExpressionStatement",
														"src": "24180:13:14"
													},
													{
														"expression": {
															"id": 3774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3772,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3698,
																"src": "24207:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3773,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24217:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24207:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3775,
														"nodeType": "ExpressionStatement",
														"src": "24207:13:14"
													},
													{
														"expression": {
															"id": 3790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3776,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24235:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 3777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3780,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3692,
																				"src": "24262:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 3786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 3783,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3781,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24271:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 3782,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24276:2:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "24271:7:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 3784,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24270:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3785,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24282:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24270:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "24262:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3778,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6041,
																			"src": "24246:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24255:6:14",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6040,
																		"src": "24246:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24246:38:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24241:43:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24235:49:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3791,
														"nodeType": "ExpressionStatement",
														"src": "24235:49:14"
													},
													{
														"expression": {
															"id": 3794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3792,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "24298:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3793,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24308:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24298:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3795,
														"nodeType": "ExpressionStatement",
														"src": "24298:13:14"
													},
													{
														"expression": {
															"id": 3798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3796,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3698,
																"src": "24325:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3797,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24335:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24325:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3799,
														"nodeType": "ExpressionStatement",
														"src": "24325:13:14"
													},
													{
														"expression": {
															"id": 3814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3800,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24353:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 3801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24359:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3804,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3692,
																				"src": "24379:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 3810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 3807,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3805,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24388:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 3806,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24393:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "24388:6:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 3808,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24387:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3809,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24398:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24387:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "24379:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3802,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6041,
																			"src": "24363:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24372:6:14",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6040,
																		"src": "24363:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24363:37:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24359:41:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24353:47:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3815,
														"nodeType": "ExpressionStatement",
														"src": "24353:47:14"
													},
													{
														"expression": {
															"id": 3818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3816,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "24414:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3817,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24424:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24414:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3819,
														"nodeType": "ExpressionStatement",
														"src": "24414:13:14"
													},
													{
														"expression": {
															"id": 3822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3820,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3698,
																"src": "24441:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3821,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24451:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24441:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3823,
														"nodeType": "ExpressionStatement",
														"src": "24441:13:14"
													},
													{
														"expression": {
															"id": 3838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3824,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24469:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 3825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24475:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3828,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3692,
																				"src": "24495:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 3834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 3831,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3829,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24504:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 3830,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24509:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "24504:6:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 3832,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24503:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3833,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24514:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24503:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "24495:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3826,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6041,
																			"src": "24479:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24488:6:14",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6040,
																		"src": "24479:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24479:37:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24475:41:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24469:47:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3839,
														"nodeType": "ExpressionStatement",
														"src": "24469:47:14"
													},
													{
														"expression": {
															"id": 3842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3840,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "24530:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3841,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24540:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24530:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3843,
														"nodeType": "ExpressionStatement",
														"src": "24530:13:14"
													},
													{
														"expression": {
															"id": 3846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3844,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3698,
																"src": "24557:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3845,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24567:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24557:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3847,
														"nodeType": "ExpressionStatement",
														"src": "24557:13:14"
													},
													{
														"expression": {
															"id": 3862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3848,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24585:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24591:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3852,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3692,
																				"src": "24611:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 3858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 3855,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3853,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24620:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 3854,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24625:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "24620:6:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 3856,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24619:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3857,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24630:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24619:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "24611:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3850,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6041,
																			"src": "24595:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24604:6:14",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6040,
																		"src": "24595:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24595:37:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24591:41:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24585:47:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3863,
														"nodeType": "ExpressionStatement",
														"src": "24585:47:14"
													},
													{
														"expression": {
															"id": 3866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3864,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "24646:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3865,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24656:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24646:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3867,
														"nodeType": "ExpressionStatement",
														"src": "24646:13:14"
													},
													{
														"expression": {
															"id": 3870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3868,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3698,
																"src": "24673:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3869,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3702,
																"src": "24683:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24673:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3871,
														"nodeType": "ExpressionStatement",
														"src": "24673:13:14"
													},
													{
														"expression": {
															"id": 3879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3872,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3698,
																"src": "24701:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3875,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3692,
																			"src": "24727:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 3876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24735:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24727:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3873,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "24711:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24720:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "24711:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24711:26:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24701:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3880,
														"nodeType": "ExpressionStatement",
														"src": "24701:36:14"
													}
												]
											},
											{
												"expression": {
													"id": 3882,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3698,
													"src": "24764:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3696,
												"id": 3883,
												"nodeType": "Return",
												"src": "24757:13:14"
											}
										]
									},
									"documentation": {
										"id": 3690,
										"nodeType": "StructuredDocumentation",
										"src": "23611:119:14",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23744:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23757:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3885,
												"src": "23749:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23749:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:15:14"
									},
									"returnParameters": {
										"id": 3696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3885,
												"src": "23787:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23787:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:9:14"
									},
									"scope": 4276,
									"src": "23735:1042:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3918,
										"nodeType": "Block",
										"src": "25010:175:14",
										"statements": [
											{
												"id": 3917,
												"nodeType": "UncheckedBlock",
												"src": "25020:159:14",
												"statements": [
													{
														"assignments": [
															3897
														],
														"declarations": [
															{
																"constant": false,
																"id": 3897,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25052:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 3917,
																"src": "25044:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3896,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25044:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3901,
														"initialValue": {
															"arguments": [
																{
																	"id": 3899,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3888,
																	"src": "25066:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3898,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3885,
																	3919
																],
																"referencedDeclaration": 3885,
																"src": "25061:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25061:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25044:28:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3902,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3897,
																"src": "25093:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3906,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3891,
																					"src": "25135:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2682",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2682",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3905,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4275,
																				"src": "25118:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2682_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25118:26:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 3908,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25148:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 3909,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3897,
																					"src": "25153:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25148:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3911,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3888,
																				"src": "25162:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25148:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25118:49:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3903,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "25102:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25111:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "25102:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25102:66:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25093:75:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3895,
														"id": 3916,
														"nodeType": "Return",
														"src": "25086:82:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3886,
										"nodeType": "StructuredDocumentation",
										"src": "24783:142:14",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24939:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3888,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24952:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3919,
												"src": "24944:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3891,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24968:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3919,
												"src": "24959:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2682",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3890,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3889,
														"name": "Rounding",
														"nameLocations": [
															"24959:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2682,
														"src": "24959:8:14"
													},
													"referencedDeclaration": 2682,
													"src": "24959:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2682",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:34:14"
									},
									"returnParameters": {
										"id": 3895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3919,
												"src": "25001:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25001:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25000:9:14"
									},
									"scope": 4276,
									"src": "24930:255:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4047,
										"nodeType": "Block",
										"src": "25378:854:14",
										"statements": [
											{
												"assignments": [
													3928
												],
												"declarations": [
													{
														"constant": false,
														"id": 3928,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25396:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 4047,
														"src": "25388:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25388:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3930,
												"initialValue": {
													"hexValue": "30",
													"id": 3929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25405:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25388:18:14"
											},
											{
												"id": 4044,
												"nodeType": "UncheckedBlock",
												"src": "25416:787:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3931,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3922,
																"src": "25444:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25453:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25459:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25453:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "25444:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3947,
														"nodeType": "IfStatement",
														"src": "25440:103:14",
														"trueBody": {
															"id": 3946,
															"nodeType": "Block",
															"src": "25463:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 3940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3936,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3922,
																			"src": "25481:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3937,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25490:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25496:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "25490:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "25481:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3941,
																	"nodeType": "ExpressionStatement",
																	"src": "25481:17:14"
																},
																{
																	"expression": {
																		"id": 3944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3942,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3928,
																			"src": "25516:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25526:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25516:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3945,
																	"nodeType": "ExpressionStatement",
																	"src": "25516:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3948,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3922,
																"src": "25560:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25569:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25575:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25569:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "25560:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3964,
														"nodeType": "IfStatement",
														"src": "25556:103:14",
														"trueBody": {
															"id": 3963,
															"nodeType": "Block",
															"src": "25579:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 3957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3953,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3922,
																			"src": "25597:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3954,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25606:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "25606:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "25597:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3958,
																	"nodeType": "ExpressionStatement",
																	"src": "25597:17:14"
																},
																{
																	"expression": {
																		"id": 3961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3959,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3928,
																			"src": "25632:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25642:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25632:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3962,
																	"nodeType": "ExpressionStatement",
																	"src": "25632:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3965,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3922,
																"src": "25676:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25685:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25691:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25685:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25676:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3981,
														"nodeType": "IfStatement",
														"src": "25672:103:14",
														"trueBody": {
															"id": 3980,
															"nodeType": "Block",
															"src": "25695:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 3974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3970,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3922,
																			"src": "25713:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25722:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25728:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25722:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25713:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3975,
																	"nodeType": "ExpressionStatement",
																	"src": "25713:17:14"
																},
																{
																	"expression": {
																		"id": 3978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3976,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3928,
																			"src": "25748:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25758:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25748:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3979,
																	"nodeType": "ExpressionStatement",
																	"src": "25748:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3982,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3922,
																"src": "25792:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25801:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25807:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25801:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25792:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3998,
														"nodeType": "IfStatement",
														"src": "25788:100:14",
														"trueBody": {
															"id": 3997,
															"nodeType": "Block",
															"src": "25810:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 3991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3987,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3922,
																			"src": "25828:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3988,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25837:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25843:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25837:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25828:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3992,
																	"nodeType": "ExpressionStatement",
																	"src": "25828:16:14"
																},
																{
																	"expression": {
																		"id": 3995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3993,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3928,
																			"src": "25862:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25872:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25862:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3996,
																	"nodeType": "ExpressionStatement",
																	"src": "25862:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3999,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3922,
																"src": "25905:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 4002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 4000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 4001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25920:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25914:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25905:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 4015,
														"nodeType": "IfStatement",
														"src": "25901:100:14",
														"trueBody": {
															"id": 4014,
															"nodeType": "Block",
															"src": "25923:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 4008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 4004,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3922,
																			"src": "25941:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 4007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 4005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25950:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 4006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25956:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25950:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25941:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 4009,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:16:14"
																},
																{
																	"expression": {
																		"id": 4012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 4010,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3928,
																			"src": "25975:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 4011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25975:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 4013,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4016,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3922,
																"src": "26018:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 4019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 4017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 4018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26033:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26027:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "26018:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 4032,
														"nodeType": "IfStatement",
														"src": "26014:100:14",
														"trueBody": {
															"id": 4031,
															"nodeType": "Block",
															"src": "26036:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 4025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 4021,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3922,
																			"src": "26054:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 4024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 4022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26063:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 4023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26069:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "26063:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "26054:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 4026,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:16:14"
																},
																{
																	"expression": {
																		"id": 4029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 4027,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3928,
																			"src": "26088:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 4028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26098:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26088:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 4030,
																	"nodeType": "ExpressionStatement",
																	"src": "26088:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4033,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3922,
																"src": "26131:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 4036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 4034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26140:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 4035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26146:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26140:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "26131:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 4043,
														"nodeType": "IfStatement",
														"src": "26127:66:14",
														"trueBody": {
															"id": 4042,
															"nodeType": "Block",
															"src": "26149:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 4040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 4038,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3928,
																			"src": "26167:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 4039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26177:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26167:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 4041,
																	"nodeType": "ExpressionStatement",
																	"src": "26167:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 4045,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3928,
													"src": "26219:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3926,
												"id": 4046,
												"nodeType": "Return",
												"src": "26212:13:14"
											}
										]
									},
									"documentation": {
										"id": 3920,
										"nodeType": "StructuredDocumentation",
										"src": "25191:120:14",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 4048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25325:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3922,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25339:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 4048,
												"src": "25331:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25330:15:14"
									},
									"returnParameters": {
										"id": 3926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4048,
												"src": "25369:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25369:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25368:9:14"
									},
									"scope": 4276,
									"src": "25316:916:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4081,
										"nodeType": "Block",
										"src": "26467:177:14",
										"statements": [
											{
												"id": 4080,
												"nodeType": "UncheckedBlock",
												"src": "26477:161:14",
												"statements": [
													{
														"assignments": [
															4060
														],
														"declarations": [
															{
																"constant": false,
																"id": 4060,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26509:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 4080,
																"src": "26501:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 4059,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26501:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 4064,
														"initialValue": {
															"arguments": [
																{
																	"id": 4062,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4051,
																	"src": "26524:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4061,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4048,
																	4082
																],
																"referencedDeclaration": 4048,
																"src": "26518:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 4063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26518:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26501:29:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4065,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4060,
																"src": "26551:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 4076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 4069,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4054,
																					"src": "26593:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2682",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2682",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 4068,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4275,
																				"src": "26576:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2682_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 4070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26576:26:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 4073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 4071,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26606:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 4072,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4060,
																					"src": "26612:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26606:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 4074,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4051,
																				"src": "26621:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26606:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26576:50:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 4066,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "26560:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 4067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26569:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "26560:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 4077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26560:67:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26551:76:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4058,
														"id": 4079,
														"nodeType": "Return",
														"src": "26544:83:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4049,
										"nodeType": "StructuredDocumentation",
										"src": "26238:143:14",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 4082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "26395:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4051,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26409:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 4082,
												"src": "26401:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26401:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4054,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26425:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 4082,
												"src": "26416:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2682",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 4053,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4052,
														"name": "Rounding",
														"nameLocations": [
															"26416:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2682,
														"src": "26416:8:14"
													},
													"referencedDeclaration": 2682,
													"src": "26416:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2682",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26400:34:14"
									},
									"returnParameters": {
										"id": 4058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4082,
												"src": "26458:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26458:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26457:9:14"
									},
									"scope": 4276,
									"src": "26386:258:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4218,
										"nodeType": "Block",
										"src": "26964:674:14",
										"statements": [
											{
												"assignments": [
													4091
												],
												"declarations": [
													{
														"constant": false,
														"id": 4091,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26982:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 4218,
														"src": "26974:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26974:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4093,
												"initialValue": {
													"hexValue": "30",
													"id": 4092,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26991:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26974:18:14"
											},
											{
												"assignments": [
													4095
												],
												"declarations": [
													{
														"constant": false,
														"id": 4095,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "27010:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 4218,
														"src": "27002:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4094,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27002:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4096,
												"nodeType": "VariableDeclarationStatement",
												"src": "27002:12:14"
											},
											{
												"id": 4215,
												"nodeType": "UncheckedBlock",
												"src": "27024:585:14",
												"statements": [
													{
														"expression": {
															"id": 4109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4097,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4095,
																"src": "27048:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4100,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4085,
																			"src": "27071:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 4106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 4103,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 4101,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27080:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 4102,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27085:3:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "27080:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 4104,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27079:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 4105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27092:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27079:14:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "27071:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 4098,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "27055:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 4099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27064:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "27055:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 4108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27055:39:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27048:46:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4110,
														"nodeType": "ExpressionStatement",
														"src": "27048:46:14"
													},
													{
														"expression": {
															"id": 4115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4111,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4085,
																"src": "27108:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4112,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4095,
																	"src": "27118:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 4113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27125:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27118:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27108:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4116,
														"nodeType": "ExpressionStatement",
														"src": "27108:20:14"
													},
													{
														"expression": {
															"id": 4121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4117,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4091,
																"src": "27142:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4118,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4095,
																	"src": "27152:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 4119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27159:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27152:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27142:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4122,
														"nodeType": "ExpressionStatement",
														"src": "27142:19:14"
													},
													{
														"expression": {
															"id": 4135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4123,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4095,
																"src": "27176:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4126,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4085,
																			"src": "27199:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 4132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 4129,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 4127,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27208:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 4128,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27213:2:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "27208:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 4130,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27207:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 4131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27219:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27207:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "27199:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 4124,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "27183:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 4125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27192:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "27183:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 4134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27183:38:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27176:45:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4136,
														"nodeType": "ExpressionStatement",
														"src": "27176:45:14"
													},
													{
														"expression": {
															"id": 4141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4137,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4085,
																"src": "27235:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4138,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4095,
																	"src": "27245:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 4139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27252:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27245:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27235:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4142,
														"nodeType": "ExpressionStatement",
														"src": "27235:19:14"
													},
													{
														"expression": {
															"id": 4147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4143,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4091,
																"src": "27268:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4144,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4095,
																	"src": "27278:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 4145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27285:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27278:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27268:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4148,
														"nodeType": "ExpressionStatement",
														"src": "27268:18:14"
													},
													{
														"expression": {
															"id": 4161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4149,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4095,
																"src": "27301:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4152,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4085,
																			"src": "27324:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 4158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 4155,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 4153,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27333:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 4154,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27338:2:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "27333:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 4156,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27332:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 4157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27344:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27332:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "27324:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 4150,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "27308:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 4151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27317:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "27308:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 4160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27308:38:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27301:45:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4162,
														"nodeType": "ExpressionStatement",
														"src": "27301:45:14"
													},
													{
														"expression": {
															"id": 4167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4163,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4085,
																"src": "27360:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4164,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4095,
																	"src": "27370:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 4165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27377:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27370:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27360:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4168,
														"nodeType": "ExpressionStatement",
														"src": "27360:19:14"
													},
													{
														"expression": {
															"id": 4173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4169,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4091,
																"src": "27393:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4170,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4095,
																	"src": "27403:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 4171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27410:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27403:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27393:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4174,
														"nodeType": "ExpressionStatement",
														"src": "27393:18:14"
													},
													{
														"expression": {
															"id": 4187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4175,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4095,
																"src": "27426:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4178,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4085,
																			"src": "27449:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 4184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 4181,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 4179,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27458:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 4180,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27463:2:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "27458:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 4182,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27457:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 4183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27469:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27457:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "27449:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 4176,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "27433:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 4177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27442:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "27433:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 4186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27433:38:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27426:45:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4188,
														"nodeType": "ExpressionStatement",
														"src": "27426:45:14"
													},
													{
														"expression": {
															"id": 4193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4189,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4085,
																"src": "27485:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4190,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4095,
																	"src": "27495:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 4191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27502:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27495:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27485:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4194,
														"nodeType": "ExpressionStatement",
														"src": "27485:19:14"
													},
													{
														"expression": {
															"id": 4199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4195,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4091,
																"src": "27518:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4196,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4095,
																	"src": "27528:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 4197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27535:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27528:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4200,
														"nodeType": "ExpressionStatement",
														"src": "27518:18:14"
													},
													{
														"expression": {
															"id": 4213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 4201,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4091,
																"src": "27551:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4204,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4085,
																			"src": "27577:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 4210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 4207,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 4205,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27586:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 4206,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27591:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "27586:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 4208,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27585:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 4209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27596:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27585:12:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "27577:20:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 4202,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "27561:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 4203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27570:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "27561:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 4212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27561:37:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27551:47:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 4214,
														"nodeType": "ExpressionStatement",
														"src": "27551:47:14"
													}
												]
											},
											{
												"expression": {
													"id": 4216,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4091,
													"src": "27625:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4089,
												"id": 4217,
												"nodeType": "Return",
												"src": "27618:13:14"
											}
										]
									},
									"documentation": {
										"id": 4083,
										"nodeType": "StructuredDocumentation",
										"src": "26650:246:14",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 4219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26910:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4085,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26925:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 4219,
												"src": "26917:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26917:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:15:14"
									},
									"returnParameters": {
										"id": 4089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4219,
												"src": "26955:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26955:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26954:9:14"
									},
									"scope": 4276,
									"src": "26901:737:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4255,
										"nodeType": "Block",
										"src": "27875:184:14",
										"statements": [
											{
												"id": 4254,
												"nodeType": "UncheckedBlock",
												"src": "27885:168:14",
												"statements": [
													{
														"assignments": [
															4231
														],
														"declarations": [
															{
																"constant": false,
																"id": 4231,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27917:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 4254,
																"src": "27909:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 4230,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27909:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 4235,
														"initialValue": {
															"arguments": [
																{
																	"id": 4233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4222,
																	"src": "27933:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4232,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4219,
																	4256
																],
																"referencedDeclaration": 4219,
																"src": "27926:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 4234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27909:30:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4236,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4231,
																"src": "27960:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 4250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 4240,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4225,
																					"src": "28002:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2682",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2682",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 4239,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4275,
																				"src": "27985:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2682_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 4241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27985:26:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 4247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 4242,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28015:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 4245,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 4243,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4231,
																								"src": "28021:6:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 4244,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "28031:1:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "28021:11:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 4246,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28020:13:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28015:18:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 4248,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4222,
																				"src": "28036:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28015:26:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27985:56:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 4237,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6041,
																		"src": "27969:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$6041_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 4238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27978:6:14",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6040,
																	"src": "27969:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 4251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27969:73:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27960:82:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4229,
														"id": 4253,
														"nodeType": "Return",
														"src": "27953:89:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4220,
										"nodeType": "StructuredDocumentation",
										"src": "27644:144:14",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 4256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27802:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27817:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 4256,
												"src": "27809:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27809:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4225,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27833:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 4256,
												"src": "27824:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2682",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 4224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4223,
														"name": "Rounding",
														"nameLocations": [
															"27824:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2682,
														"src": "27824:8:14"
													},
													"referencedDeclaration": 2682,
													"src": "27824:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2682",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27808:34:14"
									},
									"returnParameters": {
										"id": 4229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4256,
												"src": "27866:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27865:9:14"
									},
									"scope": 4276,
									"src": "27793:266:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4274,
										"nodeType": "Block",
										"src": "28257:48:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 4272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 4270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 4267,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4260,
																	"src": "28280:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2682",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2682",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 4266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 4265,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "28274:5:14",
																	"typeDescriptions": {}
																}
															},
															"id": 4268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:15:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 4269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "28274:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 4271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28297:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28274:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4264,
												"id": 4273,
												"nodeType": "Return",
												"src": "28267:31:14"
											}
										]
									},
									"documentation": {
										"id": 4257,
										"nodeType": "StructuredDocumentation",
										"src": "28065:113:14",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 4275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "28192:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4260,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28218:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 4275,
												"src": "28209:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2682",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 4259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4258,
														"name": "Rounding",
														"nameLocations": [
															"28209:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2682,
														"src": "28209:8:14"
													},
													"referencedDeclaration": 2682,
													"src": "28209:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2682",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28208:19:14"
									},
									"returnParameters": {
										"id": 4264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4275,
												"src": "28251:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28251:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:6:14"
									},
									"scope": 4276,
									"src": "28183:122:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4277,
							"src": "281:28026:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:28205:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							6041
						]
					},
					"id": 6042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4278,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4279,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:15",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 6041,
							"linearizedBaseContracts": [
								6041
							],
							"name": "SafeCast",
							"nameLocation": "777:8:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 4280,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:15",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 4286,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4282,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 4286,
												"src": "902:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4281,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4286,
												"src": "914:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:15"
									},
									"src": "865:64:15"
								},
								{
									"documentation": {
										"id": 4287,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:15",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 4291,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4291,
												"src": "1049:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4288,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:15"
									},
									"src": "1015:48:15"
								},
								{
									"documentation": {
										"id": 4292,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:15",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 4298,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4294,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 4298,
												"src": "1177:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4293,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4298,
												"src": "1189:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4295,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:15"
									},
									"src": "1141:62:15"
								},
								{
									"documentation": {
										"id": 4299,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:15",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 4303,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4301,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4303,
												"src": "1323:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:15"
									},
									"src": "1289:49:15"
								},
								{
									"body": {
										"id": 4330,
										"nodeType": "Block",
										"src": "1695:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4311,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4306,
														"src": "1709:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 4313,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 4312,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 4316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4324,
												"nodeType": "IfStatement",
												"src": "1705:105:15",
												"trueBody": {
													"id": 4323,
													"nodeType": "Block",
													"src": "1736:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 4319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 4320,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4306,
																		"src": "1793:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4318,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "1757:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4322,
															"nodeType": "RevertStatement",
															"src": "1750:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4327,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4306,
															"src": "1834:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 4325,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 4310,
												"id": 4329,
												"nodeType": "Return",
												"src": "1819:21:15"
											}
										]
									},
									"documentation": {
										"id": 4304,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:15",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 4331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4306,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4331,
												"src": "1648:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:15"
									},
									"returnParameters": {
										"id": 4310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4331,
												"src": "1686:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 4308,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:15"
									},
									"scope": 6041,
									"src": "1629:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4358,
										"nodeType": "Block",
										"src": "2204:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4339,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4334,
														"src": "2218:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 4341,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 4340,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 4344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4352,
												"nodeType": "IfStatement",
												"src": "2214:105:15",
												"trueBody": {
													"id": 4351,
													"nodeType": "Block",
													"src": "2245:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 4347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 4348,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4334,
																		"src": "2302:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4346,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "2266:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4350,
															"nodeType": "RevertStatement",
															"src": "2259:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4355,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4334,
															"src": "2343:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 4353,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 4338,
												"id": 4357,
												"nodeType": "Return",
												"src": "2328:21:15"
											}
										]
									},
									"documentation": {
										"id": 4332,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:15",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 4359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4359,
												"src": "2157:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:15"
									},
									"returnParameters": {
										"id": 4338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4359,
												"src": "2195:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 4336,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:15"
									},
									"scope": 6041,
									"src": "2138:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4386,
										"nodeType": "Block",
										"src": "2713:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4367,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4362,
														"src": "2727:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 4369,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 4368,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 4372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4380,
												"nodeType": "IfStatement",
												"src": "2723:105:15",
												"trueBody": {
													"id": 4379,
													"nodeType": "Block",
													"src": "2754:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 4375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 4376,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4362,
																		"src": "2811:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4374,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "2775:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4378,
															"nodeType": "RevertStatement",
															"src": "2768:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4383,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4362,
															"src": "2852:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 4381,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 4366,
												"id": 4385,
												"nodeType": "Return",
												"src": "2837:21:15"
											}
										]
									},
									"documentation": {
										"id": 4360,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:15",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 4387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4387,
												"src": "2666:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:15"
									},
									"returnParameters": {
										"id": 4366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4387,
												"src": "2704:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 4364,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:15"
									},
									"scope": 6041,
									"src": "2647:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4414,
										"nodeType": "Block",
										"src": "3222:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4395,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4390,
														"src": "3236:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 4397,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 4396,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 4400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4408,
												"nodeType": "IfStatement",
												"src": "3232:105:15",
												"trueBody": {
													"id": 4407,
													"nodeType": "Block",
													"src": "3263:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 4403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 4404,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4390,
																		"src": "3320:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4402,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "3284:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4406,
															"nodeType": "RevertStatement",
															"src": "3277:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4411,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4390,
															"src": "3361:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 4409,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 4394,
												"id": 4413,
												"nodeType": "Return",
												"src": "3346:21:15"
											}
										]
									},
									"documentation": {
										"id": 4388,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:15",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 4415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4415,
												"src": "3175:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:15"
									},
									"returnParameters": {
										"id": 4394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4415,
												"src": "3213:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 4392,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:15"
									},
									"scope": 6041,
									"src": "3156:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4442,
										"nodeType": "Block",
										"src": "3731:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4423,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4418,
														"src": "3745:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 4425,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 4424,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 4428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4436,
												"nodeType": "IfStatement",
												"src": "3741:105:15",
												"trueBody": {
													"id": 4435,
													"nodeType": "Block",
													"src": "3772:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 4431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 4432,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4418,
																		"src": "3829:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4430,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "3793:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4434,
															"nodeType": "RevertStatement",
															"src": "3786:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4439,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4418,
															"src": "3870:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 4437,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 4422,
												"id": 4441,
												"nodeType": "Return",
												"src": "3855:21:15"
											}
										]
									},
									"documentation": {
										"id": 4416,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:15",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 4443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4443,
												"src": "3684:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:15"
									},
									"returnParameters": {
										"id": 4422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4443,
												"src": "3722:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 4420,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:15"
									},
									"scope": 6041,
									"src": "3665:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4470,
										"nodeType": "Block",
										"src": "4240:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4451,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4446,
														"src": "4254:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 4453,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 4452,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 4456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4464,
												"nodeType": "IfStatement",
												"src": "4250:105:15",
												"trueBody": {
													"id": 4463,
													"nodeType": "Block",
													"src": "4281:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 4459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 4460,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4446,
																		"src": "4338:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4458,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "4302:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4462,
															"nodeType": "RevertStatement",
															"src": "4295:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4467,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4446,
															"src": "4379:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 4465,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 4450,
												"id": 4469,
												"nodeType": "Return",
												"src": "4364:21:15"
											}
										]
									},
									"documentation": {
										"id": 4444,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:15",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 4471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4446,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4471,
												"src": "4193:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:15"
									},
									"returnParameters": {
										"id": 4450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4471,
												"src": "4231:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 4448,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:15"
									},
									"scope": 6041,
									"src": "4174:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4498,
										"nodeType": "Block",
										"src": "4749:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4479,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4474,
														"src": "4763:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 4481,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 4480,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 4484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4492,
												"nodeType": "IfStatement",
												"src": "4759:105:15",
												"trueBody": {
													"id": 4491,
													"nodeType": "Block",
													"src": "4790:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 4487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 4488,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4474,
																		"src": "4847:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4486,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "4811:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4490,
															"nodeType": "RevertStatement",
															"src": "4804:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4495,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4474,
															"src": "4888:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 4493,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 4478,
												"id": 4497,
												"nodeType": "Return",
												"src": "4873:21:15"
											}
										]
									},
									"documentation": {
										"id": 4472,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:15",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 4499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4499,
												"src": "4702:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:15"
									},
									"returnParameters": {
										"id": 4478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4499,
												"src": "4740:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 4476,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:15"
									},
									"scope": 6041,
									"src": "4683:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4526,
										"nodeType": "Block",
										"src": "5258:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4507,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4502,
														"src": "5272:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 4509,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 4508,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 4512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4520,
												"nodeType": "IfStatement",
												"src": "5268:105:15",
												"trueBody": {
													"id": 4519,
													"nodeType": "Block",
													"src": "5299:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 4515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 4516,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4502,
																		"src": "5356:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4514,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "5320:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4518,
															"nodeType": "RevertStatement",
															"src": "5313:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4523,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4502,
															"src": "5397:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 4521,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 4506,
												"id": 4525,
												"nodeType": "Return",
												"src": "5382:21:15"
											}
										]
									},
									"documentation": {
										"id": 4500,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:15",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 4527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4527,
												"src": "5211:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:15"
									},
									"returnParameters": {
										"id": 4506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4527,
												"src": "5249:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 4504,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:15"
									},
									"scope": 6041,
									"src": "5192:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4554,
										"nodeType": "Block",
										"src": "5767:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4535,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4530,
														"src": "5781:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 4537,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 4536,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 4540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4548,
												"nodeType": "IfStatement",
												"src": "5777:105:15",
												"trueBody": {
													"id": 4547,
													"nodeType": "Block",
													"src": "5808:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 4543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 4544,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4530,
																		"src": "5865:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4542,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "5829:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4546,
															"nodeType": "RevertStatement",
															"src": "5822:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4551,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4530,
															"src": "5906:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 4549,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 4534,
												"id": 4553,
												"nodeType": "Return",
												"src": "5891:21:15"
											}
										]
									},
									"documentation": {
										"id": 4528,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:15",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 4555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4530,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4555,
												"src": "5720:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:15"
									},
									"returnParameters": {
										"id": 4534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4555,
												"src": "5758:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 4532,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:15"
									},
									"scope": 6041,
									"src": "5701:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4582,
										"nodeType": "Block",
										"src": "6276:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4563,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4558,
														"src": "6290:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 4565,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 4564,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 4568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4576,
												"nodeType": "IfStatement",
												"src": "6286:105:15",
												"trueBody": {
													"id": 4575,
													"nodeType": "Block",
													"src": "6317:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 4571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 4572,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4558,
																		"src": "6374:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4570,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "6338:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4574,
															"nodeType": "RevertStatement",
															"src": "6331:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4579,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4558,
															"src": "6415:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 4577,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 4562,
												"id": 4581,
												"nodeType": "Return",
												"src": "6400:21:15"
											}
										]
									},
									"documentation": {
										"id": 4556,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:15",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 4583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4583,
												"src": "6229:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:15"
									},
									"returnParameters": {
										"id": 4562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4583,
												"src": "6267:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 4560,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:15"
									},
									"scope": 6041,
									"src": "6210:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4610,
										"nodeType": "Block",
										"src": "6785:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4591,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4586,
														"src": "6799:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 4593,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 4592,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 4596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4604,
												"nodeType": "IfStatement",
												"src": "6795:105:15",
												"trueBody": {
													"id": 4603,
													"nodeType": "Block",
													"src": "6826:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 4599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 4600,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4586,
																		"src": "6883:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4598,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "6847:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4602,
															"nodeType": "RevertStatement",
															"src": "6840:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4586,
															"src": "6924:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 4605,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 4590,
												"id": 4609,
												"nodeType": "Return",
												"src": "6909:21:15"
											}
										]
									},
									"documentation": {
										"id": 4584,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:15",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 4611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4611,
												"src": "6738:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:15"
									},
									"returnParameters": {
										"id": 4590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4611,
												"src": "6776:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 4588,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:15"
									},
									"scope": 6041,
									"src": "6719:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4638,
										"nodeType": "Block",
										"src": "7294:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4619,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4614,
														"src": "7308:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 4621,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 4620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 4624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4632,
												"nodeType": "IfStatement",
												"src": "7304:105:15",
												"trueBody": {
													"id": 4631,
													"nodeType": "Block",
													"src": "7335:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 4627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 4628,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4614,
																		"src": "7392:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4626,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "7356:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4630,
															"nodeType": "RevertStatement",
															"src": "7349:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4614,
															"src": "7433:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 4633,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 4618,
												"id": 4637,
												"nodeType": "Return",
												"src": "7418:21:15"
											}
										]
									},
									"documentation": {
										"id": 4612,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:15",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 4639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4639,
												"src": "7247:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:15"
									},
									"returnParameters": {
										"id": 4618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4639,
												"src": "7285:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4616,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:15"
									},
									"scope": 6041,
									"src": "7228:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4666,
										"nodeType": "Block",
										"src": "7803:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4647,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4642,
														"src": "7817:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 4649,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 4648,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 4652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4660,
												"nodeType": "IfStatement",
												"src": "7813:105:15",
												"trueBody": {
													"id": 4659,
													"nodeType": "Block",
													"src": "7844:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 4655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 4656,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4642,
																		"src": "7901:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4654,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "7865:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4658,
															"nodeType": "RevertStatement",
															"src": "7858:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4663,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4642,
															"src": "7942:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 4661,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 4646,
												"id": 4665,
												"nodeType": "Return",
												"src": "7927:21:15"
											}
										]
									},
									"documentation": {
										"id": 4640,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:15",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 4667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4667,
												"src": "7756:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:15"
									},
									"returnParameters": {
										"id": 4646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4667,
												"src": "7794:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 4644,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:15"
									},
									"scope": 6041,
									"src": "7737:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4694,
										"nodeType": "Block",
										"src": "8312:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4675,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4670,
														"src": "8326:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 4677,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 4676,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 4680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4688,
												"nodeType": "IfStatement",
												"src": "8322:105:15",
												"trueBody": {
													"id": 4687,
													"nodeType": "Block",
													"src": "8353:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 4683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 4684,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4670,
																		"src": "8410:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4682,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "8374:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4686,
															"nodeType": "RevertStatement",
															"src": "8367:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4691,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4670,
															"src": "8451:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 4689,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 4674,
												"id": 4693,
												"nodeType": "Return",
												"src": "8436:21:15"
											}
										]
									},
									"documentation": {
										"id": 4668,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:15",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 4695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4670,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4695,
												"src": "8265:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:15"
									},
									"returnParameters": {
										"id": 4674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4695,
												"src": "8303:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 4672,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:15"
									},
									"scope": 6041,
									"src": "8246:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4722,
										"nodeType": "Block",
										"src": "8821:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4703,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4698,
														"src": "8835:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 4705,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 4704,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 4708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4716,
												"nodeType": "IfStatement",
												"src": "8831:105:15",
												"trueBody": {
													"id": 4715,
													"nodeType": "Block",
													"src": "8862:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 4711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 4712,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4698,
																		"src": "8919:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4710,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "8883:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4714,
															"nodeType": "RevertStatement",
															"src": "8876:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4719,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4698,
															"src": "8960:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 4717,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 4702,
												"id": 4721,
												"nodeType": "Return",
												"src": "8945:21:15"
											}
										]
									},
									"documentation": {
										"id": 4696,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:15",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 4723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4698,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4723,
												"src": "8774:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:15"
									},
									"returnParameters": {
										"id": 4702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4723,
												"src": "8812:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 4700,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:15"
									},
									"scope": 6041,
									"src": "8755:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4750,
										"nodeType": "Block",
										"src": "9330:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4731,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4726,
														"src": "9344:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 4733,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 4732,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 4736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4744,
												"nodeType": "IfStatement",
												"src": "9340:105:15",
												"trueBody": {
													"id": 4743,
													"nodeType": "Block",
													"src": "9371:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 4739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 4740,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4726,
																		"src": "9428:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4738,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "9392:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4742,
															"nodeType": "RevertStatement",
															"src": "9385:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4747,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4726,
															"src": "9469:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 4745,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 4730,
												"id": 4749,
												"nodeType": "Return",
												"src": "9454:21:15"
											}
										]
									},
									"documentation": {
										"id": 4724,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:15",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 4751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4751,
												"src": "9283:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:15"
									},
									"returnParameters": {
										"id": 4730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4751,
												"src": "9321:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4728,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:15"
									},
									"scope": 6041,
									"src": "9264:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4778,
										"nodeType": "Block",
										"src": "9839:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4759,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4754,
														"src": "9853:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 4761,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 4760,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 4764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4772,
												"nodeType": "IfStatement",
												"src": "9849:105:15",
												"trueBody": {
													"id": 4771,
													"nodeType": "Block",
													"src": "9880:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 4767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 4768,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4754,
																		"src": "9937:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4766,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "9901:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4770,
															"nodeType": "RevertStatement",
															"src": "9894:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4754,
															"src": "9978:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 4773,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 4758,
												"id": 4777,
												"nodeType": "Return",
												"src": "9963:21:15"
											}
										]
									},
									"documentation": {
										"id": 4752,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:15",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 4779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4754,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4779,
												"src": "9792:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:15"
									},
									"returnParameters": {
										"id": 4758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4779,
												"src": "9830:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 4756,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:15"
									},
									"scope": 6041,
									"src": "9773:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4806,
										"nodeType": "Block",
										"src": "10348:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4787,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4782,
														"src": "10362:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 4789,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 4788,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 4792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4800,
												"nodeType": "IfStatement",
												"src": "10358:105:15",
												"trueBody": {
													"id": 4799,
													"nodeType": "Block",
													"src": "10389:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 4795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 4796,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4782,
																		"src": "10446:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4794,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "10410:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4798,
															"nodeType": "RevertStatement",
															"src": "10403:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4803,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4782,
															"src": "10487:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 4801,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 4786,
												"id": 4805,
												"nodeType": "Return",
												"src": "10472:21:15"
											}
										]
									},
									"documentation": {
										"id": 4780,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:15",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 4807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4782,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4807,
												"src": "10301:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:15"
									},
									"returnParameters": {
										"id": 4786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4807,
												"src": "10339:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 4784,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:15"
									},
									"scope": 6041,
									"src": "10282:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4834,
										"nodeType": "Block",
										"src": "10857:152:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4815,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4810,
														"src": "10871:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 4817,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 4816,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 4820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4828,
												"nodeType": "IfStatement",
												"src": "10867:105:15",
												"trueBody": {
													"id": 4827,
													"nodeType": "Block",
													"src": "10898:74:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 4823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 4824,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4810,
																		"src": "10955:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4822,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "10919:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4826,
															"nodeType": "RevertStatement",
															"src": "10912:49:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4831,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4810,
															"src": "10996:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 4829,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 4832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 4814,
												"id": 4833,
												"nodeType": "Return",
												"src": "10981:21:15"
											}
										]
									},
									"documentation": {
										"id": 4808,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:15",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 4835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4835,
												"src": "10810:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:15"
									},
									"returnParameters": {
										"id": 4814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4835,
												"src": "10848:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 4812,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:15"
									},
									"scope": 6041,
									"src": "10791:218:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4862,
										"nodeType": "Block",
										"src": "11360:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4843,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4838,
														"src": "11374:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 4845,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 4844,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 4848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4856,
												"nodeType": "IfStatement",
												"src": "11370:103:15",
												"trueBody": {
													"id": 4855,
													"nodeType": "Block",
													"src": "11400:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 4851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 4852,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4838,
																		"src": "11456:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4850,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "11421:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4854,
															"nodeType": "RevertStatement",
															"src": "11414:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4859,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4838,
															"src": "11496:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 4857,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 4860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 4842,
												"id": 4861,
												"nodeType": "Return",
												"src": "11482:20:15"
											}
										]
									},
									"documentation": {
										"id": 4836,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:15",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4838,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4863,
												"src": "11314:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:15"
									},
									"returnParameters": {
										"id": 4842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4863,
												"src": "11352:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4840,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:15"
									},
									"scope": 6041,
									"src": "11296:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4890,
										"nodeType": "Block",
										"src": "11860:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4871,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4866,
														"src": "11874:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 4873,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 4872,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 4876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4884,
												"nodeType": "IfStatement",
												"src": "11870:103:15",
												"trueBody": {
													"id": 4883,
													"nodeType": "Block",
													"src": "11900:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4880,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4866,
																		"src": "11956:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4878,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "11921:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4882,
															"nodeType": "RevertStatement",
															"src": "11914:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4887,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4866,
															"src": "11996:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 4885,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 4888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 4870,
												"id": 4889,
												"nodeType": "Return",
												"src": "11982:20:15"
											}
										]
									},
									"documentation": {
										"id": 4864,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:15",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4866,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4891,
												"src": "11814:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:15"
									},
									"returnParameters": {
										"id": 4870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4891,
												"src": "11852:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 4868,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:15"
									},
									"scope": 6041,
									"src": "11796:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4918,
										"nodeType": "Block",
										"src": "12360:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4899,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4894,
														"src": "12374:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 4901,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 4900,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 4904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4912,
												"nodeType": "IfStatement",
												"src": "12370:103:15",
												"trueBody": {
													"id": 4911,
													"nodeType": "Block",
													"src": "12400:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4908,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4894,
																		"src": "12456:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4906,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "12421:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4910,
															"nodeType": "RevertStatement",
															"src": "12414:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4915,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4894,
															"src": "12496:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 4913,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 4916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 4898,
												"id": 4917,
												"nodeType": "Return",
												"src": "12482:20:15"
											}
										]
									},
									"documentation": {
										"id": 4892,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:15",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4894,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4919,
												"src": "12314:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:15"
									},
									"returnParameters": {
										"id": 4898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4919,
												"src": "12352:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 4896,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:15"
									},
									"scope": 6041,
									"src": "12296:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4946,
										"nodeType": "Block",
										"src": "12860:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4927,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4922,
														"src": "12874:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 4929,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 4928,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 4932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4940,
												"nodeType": "IfStatement",
												"src": "12870:103:15",
												"trueBody": {
													"id": 4939,
													"nodeType": "Block",
													"src": "12900:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4936,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4922,
																		"src": "12956:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4934,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "12921:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4938,
															"nodeType": "RevertStatement",
															"src": "12914:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4922,
															"src": "12996:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 4941,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 4944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 4926,
												"id": 4945,
												"nodeType": "Return",
												"src": "12982:20:15"
											}
										]
									},
									"documentation": {
										"id": 4920,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:15",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4922,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4947,
												"src": "12814:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:15"
									},
									"returnParameters": {
										"id": 4926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4947,
												"src": "12852:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 4924,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:15"
									},
									"scope": 6041,
									"src": "12796:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4974,
										"nodeType": "Block",
										"src": "13360:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4955,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4950,
														"src": "13374:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 4957,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 4956,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 4960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4968,
												"nodeType": "IfStatement",
												"src": "13370:103:15",
												"trueBody": {
													"id": 4967,
													"nodeType": "Block",
													"src": "13400:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4964,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4950,
																		"src": "13456:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4962,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "13421:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4966,
															"nodeType": "RevertStatement",
															"src": "13414:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4971,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4950,
															"src": "13496:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 4969,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 4972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 4954,
												"id": 4973,
												"nodeType": "Return",
												"src": "13482:20:15"
											}
										]
									},
									"documentation": {
										"id": 4948,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:15",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 4975,
												"src": "13314:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:15"
									},
									"returnParameters": {
										"id": 4954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4975,
												"src": "13352:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4952,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:15"
									},
									"scope": 6041,
									"src": "13296:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5002,
										"nodeType": "Block",
										"src": "13860:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4983,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4978,
														"src": "13874:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 4985,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 4984,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 4988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4996,
												"nodeType": "IfStatement",
												"src": "13870:103:15",
												"trueBody": {
													"id": 4995,
													"nodeType": "Block",
													"src": "13900:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4992,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4978,
																		"src": "13956:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4990,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "13921:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 4993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4994,
															"nodeType": "RevertStatement",
															"src": "13914:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4999,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4978,
															"src": "13996:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 4997,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 5000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 4982,
												"id": 5001,
												"nodeType": "Return",
												"src": "13982:20:15"
											}
										]
									},
									"documentation": {
										"id": 4976,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:15",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 5003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4978,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5003,
												"src": "13814:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:15"
									},
									"returnParameters": {
										"id": 4982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5003,
												"src": "13852:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 4980,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:15"
									},
									"scope": 6041,
									"src": "13796:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5030,
										"nodeType": "Block",
										"src": "14360:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5011,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5006,
														"src": "14374:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 5014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 5013,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 5012,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 5015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 5016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5024,
												"nodeType": "IfStatement",
												"src": "14370:103:15",
												"trueBody": {
													"id": 5023,
													"nodeType": "Block",
													"src": "14400:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 5019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 5020,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5006,
																		"src": "14456:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5018,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "14421:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 5021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5022,
															"nodeType": "RevertStatement",
															"src": "14414:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5027,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5006,
															"src": "14496:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 5025,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 5028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 5010,
												"id": 5029,
												"nodeType": "Return",
												"src": "14482:20:15"
											}
										]
									},
									"documentation": {
										"id": 5004,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:15",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 5031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5006,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5031,
												"src": "14314:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:15"
									},
									"returnParameters": {
										"id": 5010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5031,
												"src": "14352:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 5008,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:15"
									},
									"scope": 6041,
									"src": "14296:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5058,
										"nodeType": "Block",
										"src": "14860:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5039,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5034,
														"src": "14874:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 5042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 5041,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 5040,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 5043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 5044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5052,
												"nodeType": "IfStatement",
												"src": "14870:103:15",
												"trueBody": {
													"id": 5051,
													"nodeType": "Block",
													"src": "14900:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 5047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 5048,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5034,
																		"src": "14956:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5046,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "14921:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 5049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5050,
															"nodeType": "RevertStatement",
															"src": "14914:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5055,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5034,
															"src": "14996:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 5053,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 5056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 5038,
												"id": 5057,
												"nodeType": "Return",
												"src": "14982:20:15"
											}
										]
									},
									"documentation": {
										"id": 5032,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:15",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 5059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5034,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5059,
												"src": "14814:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:15"
									},
									"returnParameters": {
										"id": 5038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5059,
												"src": "14852:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 5036,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:15"
									},
									"scope": 6041,
									"src": "14796:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5086,
										"nodeType": "Block",
										"src": "15360:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5067,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5062,
														"src": "15374:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 5070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 5069,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 5068,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 5071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 5072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5080,
												"nodeType": "IfStatement",
												"src": "15370:103:15",
												"trueBody": {
													"id": 5079,
													"nodeType": "Block",
													"src": "15400:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 5075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 5076,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5062,
																		"src": "15456:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5074,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "15421:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 5077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5078,
															"nodeType": "RevertStatement",
															"src": "15414:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5083,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5062,
															"src": "15496:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 5081,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 5084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 5066,
												"id": 5085,
												"nodeType": "Return",
												"src": "15482:20:15"
											}
										]
									},
									"documentation": {
										"id": 5060,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:15",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 5087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5087,
												"src": "15314:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:15"
									},
									"returnParameters": {
										"id": 5066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5087,
												"src": "15352:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 5064,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:15"
									},
									"scope": 6041,
									"src": "15296:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5114,
										"nodeType": "Block",
										"src": "15860:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5095,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5090,
														"src": "15874:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 5098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 5097,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 5096,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 5099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 5100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5108,
												"nodeType": "IfStatement",
												"src": "15870:103:15",
												"trueBody": {
													"id": 5107,
													"nodeType": "Block",
													"src": "15900:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 5103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 5104,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5090,
																		"src": "15956:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5102,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "15921:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 5105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5106,
															"nodeType": "RevertStatement",
															"src": "15914:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5111,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5090,
															"src": "15996:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 5109,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 5112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 5094,
												"id": 5113,
												"nodeType": "Return",
												"src": "15982:20:15"
											}
										]
									},
									"documentation": {
										"id": 5088,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:15",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 5115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5115,
												"src": "15814:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:15"
									},
									"returnParameters": {
										"id": 5094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5115,
												"src": "15852:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 5092,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:15"
									},
									"scope": 6041,
									"src": "15796:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5142,
										"nodeType": "Block",
										"src": "16360:149:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5123,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5118,
														"src": "16374:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 5126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 5125,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 5124,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 5127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 5128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5136,
												"nodeType": "IfStatement",
												"src": "16370:103:15",
												"trueBody": {
													"id": 5135,
													"nodeType": "Block",
													"src": "16400:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 5131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 5132,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5118,
																		"src": "16456:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5130,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "16421:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 5133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5134,
															"nodeType": "RevertStatement",
															"src": "16414:48:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5139,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5118,
															"src": "16496:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 5137,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 5140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 5122,
												"id": 5141,
												"nodeType": "Return",
												"src": "16482:20:15"
											}
										]
									},
									"documentation": {
										"id": 5116,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:15",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 5143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5143,
												"src": "16314:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:15"
									},
									"returnParameters": {
										"id": 5122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5143,
												"src": "16352:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 5120,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:15"
									},
									"scope": 6041,
									"src": "16296:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5170,
										"nodeType": "Block",
										"src": "16854:146:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5151,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5146,
														"src": "16868:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 5154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 5153,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 5152,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 5155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 5156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:15",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5164,
												"nodeType": "IfStatement",
												"src": "16864:101:15",
												"trueBody": {
													"id": 5163,
													"nodeType": "Block",
													"src": "16893:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 5159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 5160,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5146,
																		"src": "16948:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5158,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4286,
																	"src": "16914:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 5161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5162,
															"nodeType": "RevertStatement",
															"src": "16907:47:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5167,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5146,
															"src": "16987:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 5165,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:15",
															"typeDescriptions": {}
														}
													},
													"id": 5168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 5150,
												"id": 5169,
												"nodeType": "Return",
												"src": "16974:19:15"
											}
										]
									},
									"documentation": {
										"id": 5144,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:15",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 5171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5171,
												"src": "16809:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:15"
									},
									"returnParameters": {
										"id": 5150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5171,
												"src": "16847:5:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 5148,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:15"
									},
									"scope": 6041,
									"src": "16792:208:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5193,
										"nodeType": "Block",
										"src": "17236:128:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5179,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5174,
														"src": "17250:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 5180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5187,
												"nodeType": "IfStatement",
												"src": "17246:81:15",
												"trueBody": {
													"id": 5186,
													"nodeType": "Block",
													"src": "17261:66:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 5183,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5174,
																		"src": "17310:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5182,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4291,
																	"src": "17282:27:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$__$",
																		"typeString": "function (int256) pure"
																	}
																},
																"id": 5184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5185,
															"nodeType": "RevertStatement",
															"src": "17275:41:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5190,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5174,
															"src": "17351:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 5188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 5191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5178,
												"id": 5192,
												"nodeType": "Return",
												"src": "17336:21:15"
											}
										]
									},
									"documentation": {
										"id": 5172,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:15",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 5194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5174,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5194,
												"src": "17190:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5173,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:15"
									},
									"returnParameters": {
										"id": 5178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5194,
												"src": "17227:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:15"
									},
									"scope": 6041,
									"src": "17171:193:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5219,
										"nodeType": "Block",
										"src": "17761:150:15",
										"statements": [
											{
												"expression": {
													"id": 5207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5202,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5200,
														"src": "17771:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5205,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5197,
																"src": "17791:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 5203,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 5208,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5209,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5200,
														"src": "17811:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5210,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5197,
														"src": "17825:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5218,
												"nodeType": "IfStatement",
												"src": "17807:98:15",
												"trueBody": {
													"id": 5217,
													"nodeType": "Block",
													"src": "17832:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 5213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 5214,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5197,
																		"src": "17888:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5212,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "17853:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5216,
															"nodeType": "RevertStatement",
															"src": "17846:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5195,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:15",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 5220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5220,
												"src": "17705:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5196,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:15"
									},
									"returnParameters": {
										"id": 5201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5200,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5220,
												"src": "17742:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 5199,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:15"
									},
									"scope": 6041,
									"src": "17687:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5245,
										"nodeType": "Block",
										"src": "18308:150:15",
										"statements": [
											{
												"expression": {
													"id": 5233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5228,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5226,
														"src": "18318:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5231,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5223,
																"src": "18338:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 5229,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 5234,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5235,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5226,
														"src": "18358:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5236,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5223,
														"src": "18372:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5244,
												"nodeType": "IfStatement",
												"src": "18354:98:15",
												"trueBody": {
													"id": 5243,
													"nodeType": "Block",
													"src": "18379:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 5239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 5240,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5223,
																		"src": "18435:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5238,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "18400:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5242,
															"nodeType": "RevertStatement",
															"src": "18393:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5221,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:15",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 5246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5223,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5246,
												"src": "18252:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5222,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:15"
									},
									"returnParameters": {
										"id": 5227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5226,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5246,
												"src": "18289:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 5225,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:15"
									},
									"scope": 6041,
									"src": "18234:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5271,
										"nodeType": "Block",
										"src": "18855:150:15",
										"statements": [
											{
												"expression": {
													"id": 5259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5254,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5252,
														"src": "18865:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5257,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5249,
																"src": "18885:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 5255,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 5260,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5261,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5252,
														"src": "18905:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5262,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5249,
														"src": "18919:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5270,
												"nodeType": "IfStatement",
												"src": "18901:98:15",
												"trueBody": {
													"id": 5269,
													"nodeType": "Block",
													"src": "18926:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 5265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 5266,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5249,
																		"src": "18982:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5264,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "18947:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5268,
															"nodeType": "RevertStatement",
															"src": "18940:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5247,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:15",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 5272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5249,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5272,
												"src": "18799:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5248,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:15"
									},
									"returnParameters": {
										"id": 5253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5252,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5272,
												"src": "18836:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 5251,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:15"
									},
									"scope": 6041,
									"src": "18781:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5297,
										"nodeType": "Block",
										"src": "19402:150:15",
										"statements": [
											{
												"expression": {
													"id": 5285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5280,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5278,
														"src": "19412:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5283,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5275,
																"src": "19432:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 5281,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 5286,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5287,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5278,
														"src": "19452:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5288,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5275,
														"src": "19466:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5296,
												"nodeType": "IfStatement",
												"src": "19448:98:15",
												"trueBody": {
													"id": 5295,
													"nodeType": "Block",
													"src": "19473:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 5291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 5292,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5275,
																		"src": "19529:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5290,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "19494:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5294,
															"nodeType": "RevertStatement",
															"src": "19487:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5273,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:15",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 5298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5298,
												"src": "19346:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5274,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:15"
									},
									"returnParameters": {
										"id": 5279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5278,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5298,
												"src": "19383:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 5277,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:15"
									},
									"scope": 6041,
									"src": "19328:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5323,
										"nodeType": "Block",
										"src": "19949:150:15",
										"statements": [
											{
												"expression": {
													"id": 5311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5306,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5304,
														"src": "19959:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5309,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5301,
																"src": "19979:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 5307,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 5312,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5313,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5304,
														"src": "19999:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5314,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5301,
														"src": "20013:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5322,
												"nodeType": "IfStatement",
												"src": "19995:98:15",
												"trueBody": {
													"id": 5321,
													"nodeType": "Block",
													"src": "20020:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 5317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 5318,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5301,
																		"src": "20076:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5316,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "20041:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5320,
															"nodeType": "RevertStatement",
															"src": "20034:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5299,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:15",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 5324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5301,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5324,
												"src": "19893:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5300,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:15"
									},
									"returnParameters": {
										"id": 5305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5304,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5324,
												"src": "19930:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 5303,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:15"
									},
									"scope": 6041,
									"src": "19875:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5349,
										"nodeType": "Block",
										"src": "20496:150:15",
										"statements": [
											{
												"expression": {
													"id": 5337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5332,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5330,
														"src": "20506:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5335,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5327,
																"src": "20526:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 5333,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 5338,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5339,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5330,
														"src": "20546:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5340,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5327,
														"src": "20560:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5348,
												"nodeType": "IfStatement",
												"src": "20542:98:15",
												"trueBody": {
													"id": 5347,
													"nodeType": "Block",
													"src": "20567:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 5343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 5344,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5327,
																		"src": "20623:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5342,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "20588:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5346,
															"nodeType": "RevertStatement",
															"src": "20581:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5325,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:15",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 5350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5327,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5350,
												"src": "20440:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5326,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:15"
									},
									"returnParameters": {
										"id": 5331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5330,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5350,
												"src": "20477:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 5329,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:15"
									},
									"scope": 6041,
									"src": "20422:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5375,
										"nodeType": "Block",
										"src": "21043:150:15",
										"statements": [
											{
												"expression": {
													"id": 5363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5358,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5356,
														"src": "21053:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5361,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5353,
																"src": "21073:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 5359,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 5364,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5365,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5356,
														"src": "21093:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5366,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5353,
														"src": "21107:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5374,
												"nodeType": "IfStatement",
												"src": "21089:98:15",
												"trueBody": {
													"id": 5373,
													"nodeType": "Block",
													"src": "21114:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 5369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 5370,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5353,
																		"src": "21170:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5368,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "21135:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5372,
															"nodeType": "RevertStatement",
															"src": "21128:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5351,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:15",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 5376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5353,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5376,
												"src": "20987:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5352,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:15"
									},
									"returnParameters": {
										"id": 5357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5356,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5376,
												"src": "21024:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 5355,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:15"
									},
									"scope": 6041,
									"src": "20969:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5401,
										"nodeType": "Block",
										"src": "21590:150:15",
										"statements": [
											{
												"expression": {
													"id": 5389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5384,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5382,
														"src": "21600:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5387,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5379,
																"src": "21620:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 5385,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 5390,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5391,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5382,
														"src": "21640:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5392,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5379,
														"src": "21654:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5400,
												"nodeType": "IfStatement",
												"src": "21636:98:15",
												"trueBody": {
													"id": 5399,
													"nodeType": "Block",
													"src": "21661:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 5395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 5396,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5379,
																		"src": "21717:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5394,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "21682:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5398,
															"nodeType": "RevertStatement",
															"src": "21675:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5377,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:15",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 5402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5402,
												"src": "21534:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5378,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:15"
									},
									"returnParameters": {
										"id": 5383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5382,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5402,
												"src": "21571:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 5381,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:15"
									},
									"scope": 6041,
									"src": "21516:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5427,
										"nodeType": "Block",
										"src": "22137:150:15",
										"statements": [
											{
												"expression": {
													"id": 5415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5410,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5408,
														"src": "22147:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5413,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5405,
																"src": "22167:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 5411,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 5416,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5417,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5408,
														"src": "22187:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5418,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5405,
														"src": "22201:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5426,
												"nodeType": "IfStatement",
												"src": "22183:98:15",
												"trueBody": {
													"id": 5425,
													"nodeType": "Block",
													"src": "22208:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 5421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 5422,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5405,
																		"src": "22264:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5420,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "22229:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5424,
															"nodeType": "RevertStatement",
															"src": "22222:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5403,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:15",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 5428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5428,
												"src": "22081:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5404,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:15"
									},
									"returnParameters": {
										"id": 5409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5408,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5428,
												"src": "22118:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 5407,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:15"
									},
									"scope": 6041,
									"src": "22063:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5453,
										"nodeType": "Block",
										"src": "22684:150:15",
										"statements": [
											{
												"expression": {
													"id": 5441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5436,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5434,
														"src": "22694:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5439,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5431,
																"src": "22714:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 5437,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 5442,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5443,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5434,
														"src": "22734:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5444,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5431,
														"src": "22748:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5452,
												"nodeType": "IfStatement",
												"src": "22730:98:15",
												"trueBody": {
													"id": 5451,
													"nodeType": "Block",
													"src": "22755:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 5447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 5448,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5431,
																		"src": "22811:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5446,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "22776:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5450,
															"nodeType": "RevertStatement",
															"src": "22769:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5429,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:15",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 5454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5454,
												"src": "22628:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5430,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:15"
									},
									"returnParameters": {
										"id": 5435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5434,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5454,
												"src": "22665:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 5433,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:15"
									},
									"scope": 6041,
									"src": "22610:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5479,
										"nodeType": "Block",
										"src": "23231:150:15",
										"statements": [
											{
												"expression": {
													"id": 5467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5462,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5460,
														"src": "23241:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5465,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5457,
																"src": "23261:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 5463,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 5468,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5469,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5460,
														"src": "23281:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5470,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5457,
														"src": "23295:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5478,
												"nodeType": "IfStatement",
												"src": "23277:98:15",
												"trueBody": {
													"id": 5477,
													"nodeType": "Block",
													"src": "23302:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 5473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 5474,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5457,
																		"src": "23358:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5472,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "23323:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5476,
															"nodeType": "RevertStatement",
															"src": "23316:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5455,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:15",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 5480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5480,
												"src": "23175:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5456,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:15"
									},
									"returnParameters": {
										"id": 5461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5460,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5480,
												"src": "23212:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 5459,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:15"
									},
									"scope": 6041,
									"src": "23157:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5505,
										"nodeType": "Block",
										"src": "23778:150:15",
										"statements": [
											{
												"expression": {
													"id": 5493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5488,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5486,
														"src": "23788:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5491,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5483,
																"src": "23808:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 5489,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 5494,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5495,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5486,
														"src": "23828:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5496,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5483,
														"src": "23842:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5504,
												"nodeType": "IfStatement",
												"src": "23824:98:15",
												"trueBody": {
													"id": 5503,
													"nodeType": "Block",
													"src": "23849:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 5499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 5500,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5483,
																		"src": "23905:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5498,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "23870:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5502,
															"nodeType": "RevertStatement",
															"src": "23863:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5481,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:15",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 5506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5506,
												"src": "23722:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5482,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:15"
									},
									"returnParameters": {
										"id": 5487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5486,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5506,
												"src": "23759:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 5485,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:15"
									},
									"scope": 6041,
									"src": "23704:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5531,
										"nodeType": "Block",
										"src": "24325:150:15",
										"statements": [
											{
												"expression": {
													"id": 5519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5514,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5512,
														"src": "24335:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5517,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5509,
																"src": "24355:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 5515,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 5520,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5521,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5512,
														"src": "24375:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5522,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5509,
														"src": "24389:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5530,
												"nodeType": "IfStatement",
												"src": "24371:98:15",
												"trueBody": {
													"id": 5529,
													"nodeType": "Block",
													"src": "24396:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 5525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 5526,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5509,
																		"src": "24452:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5524,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "24417:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5528,
															"nodeType": "RevertStatement",
															"src": "24410:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5507,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:15",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 5532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5532,
												"src": "24269:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5508,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:15"
									},
									"returnParameters": {
										"id": 5513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5512,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5532,
												"src": "24306:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 5511,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:15"
									},
									"scope": 6041,
									"src": "24251:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5557,
										"nodeType": "Block",
										"src": "24872:150:15",
										"statements": [
											{
												"expression": {
													"id": 5545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5540,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5538,
														"src": "24882:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5543,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5535,
																"src": "24902:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 5541,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 5546,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5547,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5538,
														"src": "24922:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5548,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5535,
														"src": "24936:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5556,
												"nodeType": "IfStatement",
												"src": "24918:98:15",
												"trueBody": {
													"id": 5555,
													"nodeType": "Block",
													"src": "24943:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 5551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 5552,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5535,
																		"src": "24999:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5550,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "24964:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5554,
															"nodeType": "RevertStatement",
															"src": "24957:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5533,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:15",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 5558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5535,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5558,
												"src": "24816:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5534,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:15"
									},
									"returnParameters": {
										"id": 5539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5538,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5558,
												"src": "24853:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 5537,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:15"
									},
									"scope": 6041,
									"src": "24798:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5583,
										"nodeType": "Block",
										"src": "25419:150:15",
										"statements": [
											{
												"expression": {
													"id": 5571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5566,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5564,
														"src": "25429:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5569,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5561,
																"src": "25449:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 5567,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 5572,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5573,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5564,
														"src": "25469:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5574,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5561,
														"src": "25483:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5582,
												"nodeType": "IfStatement",
												"src": "25465:98:15",
												"trueBody": {
													"id": 5581,
													"nodeType": "Block",
													"src": "25490:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 5577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 5578,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5561,
																		"src": "25546:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5576,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "25511:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5580,
															"nodeType": "RevertStatement",
															"src": "25504:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5559,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:15",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 5584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5561,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5584,
												"src": "25363:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5560,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:15"
									},
									"returnParameters": {
										"id": 5565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5564,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5584,
												"src": "25400:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 5563,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:15"
									},
									"scope": 6041,
									"src": "25345:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5609,
										"nodeType": "Block",
										"src": "25966:150:15",
										"statements": [
											{
												"expression": {
													"id": 5597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5592,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5590,
														"src": "25976:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5595,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5587,
																"src": "25996:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 5593,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 5598,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5599,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5590,
														"src": "26016:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5600,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5587,
														"src": "26030:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5608,
												"nodeType": "IfStatement",
												"src": "26012:98:15",
												"trueBody": {
													"id": 5607,
													"nodeType": "Block",
													"src": "26037:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 5603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 5604,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5587,
																		"src": "26093:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5602,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "26058:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5606,
															"nodeType": "RevertStatement",
															"src": "26051:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5585,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:15",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 5610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5587,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5610,
												"src": "25910:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5586,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:15"
									},
									"returnParameters": {
										"id": 5591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5590,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5610,
												"src": "25947:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 5589,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:15"
									},
									"scope": 6041,
									"src": "25892:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5635,
										"nodeType": "Block",
										"src": "26513:150:15",
										"statements": [
											{
												"expression": {
													"id": 5623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5618,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5616,
														"src": "26523:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5621,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5613,
																"src": "26543:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 5619,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 5624,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5625,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5616,
														"src": "26563:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5626,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5613,
														"src": "26577:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5634,
												"nodeType": "IfStatement",
												"src": "26559:98:15",
												"trueBody": {
													"id": 5633,
													"nodeType": "Block",
													"src": "26584:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 5629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 5630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5613,
																		"src": "26640:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5628,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "26605:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5632,
															"nodeType": "RevertStatement",
															"src": "26598:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5611,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:15",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 5636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5636,
												"src": "26457:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5612,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:15"
									},
									"returnParameters": {
										"id": 5617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5616,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5636,
												"src": "26494:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 5615,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:15"
									},
									"scope": 6041,
									"src": "26439:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5661,
										"nodeType": "Block",
										"src": "27060:150:15",
										"statements": [
											{
												"expression": {
													"id": 5649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5644,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5642,
														"src": "27070:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5647,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5639,
																"src": "27090:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 5645,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 5650,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5651,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5642,
														"src": "27110:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5652,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5639,
														"src": "27124:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5660,
												"nodeType": "IfStatement",
												"src": "27106:98:15",
												"trueBody": {
													"id": 5659,
													"nodeType": "Block",
													"src": "27131:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 5655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 5656,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5639,
																		"src": "27187:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5654,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "27152:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5658,
															"nodeType": "RevertStatement",
															"src": "27145:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5637,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:15",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 5662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5662,
												"src": "27004:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5638,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:15"
									},
									"returnParameters": {
										"id": 5643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5642,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5662,
												"src": "27041:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 5641,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:15"
									},
									"scope": 6041,
									"src": "26986:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5687,
										"nodeType": "Block",
										"src": "27607:150:15",
										"statements": [
											{
												"expression": {
													"id": 5675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5670,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5668,
														"src": "27617:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5673,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5665,
																"src": "27637:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 5671,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 5674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 5676,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5677,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5668,
														"src": "27657:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5678,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5665,
														"src": "27671:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5686,
												"nodeType": "IfStatement",
												"src": "27653:98:15",
												"trueBody": {
													"id": 5685,
													"nodeType": "Block",
													"src": "27678:73:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 5681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 5682,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5665,
																		"src": "27734:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5680,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "27699:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5684,
															"nodeType": "RevertStatement",
															"src": "27692:48:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5663,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:15",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 5688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5665,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5688,
												"src": "27551:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5664,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:15"
									},
									"returnParameters": {
										"id": 5669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5668,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5688,
												"src": "27588:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 5667,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:15"
									},
									"scope": 6041,
									"src": "27533:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5713,
										"nodeType": "Block",
										"src": "28147:148:15",
										"statements": [
											{
												"expression": {
													"id": 5701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5696,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5694,
														"src": "28157:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5699,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5691,
																"src": "28176:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 5697,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 5702,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5703,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5694,
														"src": "28196:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5704,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5691,
														"src": "28210:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5712,
												"nodeType": "IfStatement",
												"src": "28192:97:15",
												"trueBody": {
													"id": 5711,
													"nodeType": "Block",
													"src": "28217:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 5707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 5708,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5691,
																		"src": "28272:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5706,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "28238:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5710,
															"nodeType": "RevertStatement",
															"src": "28231:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5689,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:15",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 5714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5714,
												"src": "28092:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5690,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:15"
									},
									"returnParameters": {
										"id": 5695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5694,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5714,
												"src": "28129:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 5693,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:15"
									},
									"scope": 6041,
									"src": "28075:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5739,
										"nodeType": "Block",
										"src": "28685:148:15",
										"statements": [
											{
												"expression": {
													"id": 5727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5722,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5720,
														"src": "28695:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5725,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5717,
																"src": "28714:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 5723,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 5728,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5729,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5720,
														"src": "28734:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5730,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5717,
														"src": "28748:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5738,
												"nodeType": "IfStatement",
												"src": "28730:97:15",
												"trueBody": {
													"id": 5737,
													"nodeType": "Block",
													"src": "28755:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 5733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 5734,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5717,
																		"src": "28810:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5732,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "28776:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5736,
															"nodeType": "RevertStatement",
															"src": "28769:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5715,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:15",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 5740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5740,
												"src": "28630:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5716,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:15"
									},
									"returnParameters": {
										"id": 5721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5720,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5740,
												"src": "28667:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 5719,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:15"
									},
									"scope": 6041,
									"src": "28613:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5765,
										"nodeType": "Block",
										"src": "29223:148:15",
										"statements": [
											{
												"expression": {
													"id": 5753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5748,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5746,
														"src": "29233:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5751,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5743,
																"src": "29252:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 5749,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 5754,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5755,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5746,
														"src": "29272:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5756,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5743,
														"src": "29286:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5764,
												"nodeType": "IfStatement",
												"src": "29268:97:15",
												"trueBody": {
													"id": 5763,
													"nodeType": "Block",
													"src": "29293:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 5759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 5760,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5743,
																		"src": "29348:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5758,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "29314:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5762,
															"nodeType": "RevertStatement",
															"src": "29307:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5741,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:15",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 5766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5766,
												"src": "29168:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5742,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:15"
									},
									"returnParameters": {
										"id": 5747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5746,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5766,
												"src": "29205:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 5745,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:15"
									},
									"scope": 6041,
									"src": "29151:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5791,
										"nodeType": "Block",
										"src": "29761:148:15",
										"statements": [
											{
												"expression": {
													"id": 5779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5774,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5772,
														"src": "29771:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5777,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5769,
																"src": "29790:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 5775,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 5780,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5781,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5772,
														"src": "29810:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5782,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5769,
														"src": "29824:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5790,
												"nodeType": "IfStatement",
												"src": "29806:97:15",
												"trueBody": {
													"id": 5789,
													"nodeType": "Block",
													"src": "29831:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 5785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 5786,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5769,
																		"src": "29886:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5784,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "29852:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5788,
															"nodeType": "RevertStatement",
															"src": "29845:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5767,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:15",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 5792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5792,
												"src": "29706:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5768,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:15"
									},
									"returnParameters": {
										"id": 5773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5772,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5792,
												"src": "29743:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 5771,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:15"
									},
									"scope": 6041,
									"src": "29689:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5817,
										"nodeType": "Block",
										"src": "30299:148:15",
										"statements": [
											{
												"expression": {
													"id": 5805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5800,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5798,
														"src": "30309:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5803,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5795,
																"src": "30328:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 5801,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 5806,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5807,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5798,
														"src": "30348:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5808,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5795,
														"src": "30362:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5816,
												"nodeType": "IfStatement",
												"src": "30344:97:15",
												"trueBody": {
													"id": 5815,
													"nodeType": "Block",
													"src": "30369:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 5811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 5812,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5795,
																		"src": "30424:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5810,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "30390:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5814,
															"nodeType": "RevertStatement",
															"src": "30383:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5793,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:15",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 5818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5818,
												"src": "30244:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5794,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:15"
									},
									"returnParameters": {
										"id": 5799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5798,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5818,
												"src": "30281:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 5797,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:15"
									},
									"scope": 6041,
									"src": "30227:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5843,
										"nodeType": "Block",
										"src": "30837:148:15",
										"statements": [
											{
												"expression": {
													"id": 5831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5826,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5824,
														"src": "30847:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5829,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5821,
																"src": "30866:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 5827,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 5832,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5833,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5824,
														"src": "30886:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5834,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5821,
														"src": "30900:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5842,
												"nodeType": "IfStatement",
												"src": "30882:97:15",
												"trueBody": {
													"id": 5841,
													"nodeType": "Block",
													"src": "30907:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 5837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 5838,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5821,
																		"src": "30962:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5836,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "30928:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5840,
															"nodeType": "RevertStatement",
															"src": "30921:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5819,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:15",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 5844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5821,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5844,
												"src": "30782:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5820,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:15"
									},
									"returnParameters": {
										"id": 5825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5824,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5844,
												"src": "30819:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 5823,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:15"
									},
									"scope": 6041,
									"src": "30765:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5869,
										"nodeType": "Block",
										"src": "31375:148:15",
										"statements": [
											{
												"expression": {
													"id": 5857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5852,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5850,
														"src": "31385:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5855,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5847,
																"src": "31404:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 5853,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 5858,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5859,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5850,
														"src": "31424:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5860,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5847,
														"src": "31438:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5868,
												"nodeType": "IfStatement",
												"src": "31420:97:15",
												"trueBody": {
													"id": 5867,
													"nodeType": "Block",
													"src": "31445:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 5863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 5864,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5847,
																		"src": "31500:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5862,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "31466:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5866,
															"nodeType": "RevertStatement",
															"src": "31459:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5845,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:15",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 5870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5847,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5870,
												"src": "31320:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5846,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:15"
									},
									"returnParameters": {
										"id": 5851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5850,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5870,
												"src": "31357:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 5849,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:15"
									},
									"scope": 6041,
									"src": "31303:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5895,
										"nodeType": "Block",
										"src": "31913:148:15",
										"statements": [
											{
												"expression": {
													"id": 5883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5878,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5876,
														"src": "31923:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5881,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5873,
																"src": "31942:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 5879,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 5884,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5885,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5876,
														"src": "31962:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5886,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5873,
														"src": "31976:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5894,
												"nodeType": "IfStatement",
												"src": "31958:97:15",
												"trueBody": {
													"id": 5893,
													"nodeType": "Block",
													"src": "31983:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 5889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 5890,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5873,
																		"src": "32038:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5888,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "32004:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5892,
															"nodeType": "RevertStatement",
															"src": "31997:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5871,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:15",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 5896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5873,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5896,
												"src": "31858:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5872,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:15"
									},
									"returnParameters": {
										"id": 5877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5876,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5896,
												"src": "31895:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 5875,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:15"
									},
									"scope": 6041,
									"src": "31841:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5921,
										"nodeType": "Block",
										"src": "32451:148:15",
										"statements": [
											{
												"expression": {
													"id": 5909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5904,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5902,
														"src": "32461:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5907,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5899,
																"src": "32480:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 5905,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 5910,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5911,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5902,
														"src": "32500:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5912,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5899,
														"src": "32514:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5920,
												"nodeType": "IfStatement",
												"src": "32496:97:15",
												"trueBody": {
													"id": 5919,
													"nodeType": "Block",
													"src": "32521:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 5915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 5916,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5899,
																		"src": "32576:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5914,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "32542:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5918,
															"nodeType": "RevertStatement",
															"src": "32535:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5897,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:15",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 5922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5899,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5922,
												"src": "32396:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5898,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:15"
									},
									"returnParameters": {
										"id": 5903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5902,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5922,
												"src": "32433:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 5901,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:15"
									},
									"scope": 6041,
									"src": "32379:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5947,
										"nodeType": "Block",
										"src": "32989:148:15",
										"statements": [
											{
												"expression": {
													"id": 5935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5930,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5928,
														"src": "32999:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5933,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5925,
																"src": "33018:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 5931,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 5936,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5937,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5928,
														"src": "33038:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5938,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5925,
														"src": "33052:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5946,
												"nodeType": "IfStatement",
												"src": "33034:97:15",
												"trueBody": {
													"id": 5945,
													"nodeType": "Block",
													"src": "33059:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 5941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 5942,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5925,
																		"src": "33114:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5940,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "33080:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5944,
															"nodeType": "RevertStatement",
															"src": "33073:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5923,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:15",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 5948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5948,
												"src": "32934:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5924,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:15"
									},
									"returnParameters": {
										"id": 5929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5928,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5948,
												"src": "32971:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 5927,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:15"
									},
									"scope": 6041,
									"src": "32917:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5973,
										"nodeType": "Block",
										"src": "33527:148:15",
										"statements": [
											{
												"expression": {
													"id": 5961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5956,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5954,
														"src": "33537:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5959,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5951,
																"src": "33556:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 5957,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 5960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 5962,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5963,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5954,
														"src": "33576:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5964,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5951,
														"src": "33590:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5972,
												"nodeType": "IfStatement",
												"src": "33572:97:15",
												"trueBody": {
													"id": 5971,
													"nodeType": "Block",
													"src": "33597:72:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 5967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 5968,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5951,
																		"src": "33652:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5966,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "33618:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5970,
															"nodeType": "RevertStatement",
															"src": "33611:47:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5949,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:15",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 5974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 5974,
												"src": "33472:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5950,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:15"
									},
									"returnParameters": {
										"id": 5955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5954,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 5974,
												"src": "33509:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 5953,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:15"
									},
									"scope": 6041,
									"src": "33455:220:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5999,
										"nodeType": "Block",
										"src": "34058:146:15",
										"statements": [
											{
												"expression": {
													"id": 5987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5982,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5980,
														"src": "34068:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5985,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5977,
																"src": "34086:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 5983,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:15",
																"typeDescriptions": {}
															}
														},
														"id": 5986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 5988,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5989,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5980,
														"src": "34106:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5990,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5977,
														"src": "34120:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5998,
												"nodeType": "IfStatement",
												"src": "34102:96:15",
												"trueBody": {
													"id": 5997,
													"nodeType": "Block",
													"src": "34127:71:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 5993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 5994,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5977,
																		"src": "34181:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5992,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4298,
																	"src": "34148:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 5995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5996,
															"nodeType": "RevertStatement",
															"src": "34141:46:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5975,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:15",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 6000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5977,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 6000,
												"src": "34004:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5976,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:15"
									},
									"returnParameters": {
										"id": 5981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5980,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 6000,
												"src": "34041:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 5979,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:15"
									},
									"scope": 6041,
									"src": "33988:216:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 6029,
										"nodeType": "Block",
										"src": "34444:250:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 6017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 6008,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6003,
														"src": "34557:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 6013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 6012,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:15",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 6011,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 6014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 6015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:15",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 6010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 6009,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 6016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 6023,
												"nodeType": "IfStatement",
												"src": "34553:105:15",
												"trueBody": {
													"id": 6022,
													"nodeType": "Block",
													"src": "34592:66:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 6019,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6003,
																		"src": "34641:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 6018,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4303,
																	"src": "34613:27:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 6020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 6021,
															"nodeType": "RevertStatement",
															"src": "34606:41:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 6026,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6003,
															"src": "34681:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 6025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 6024,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 6027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 6007,
												"id": 6028,
												"nodeType": "Return",
												"src": "34667:20:15"
											}
										]
									},
									"documentation": {
										"id": 6001,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:15",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 6030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6003,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 6030,
												"src": "34398:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:15"
									},
									"returnParameters": {
										"id": 6007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6030,
												"src": "34436:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6005,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:15"
									},
									"scope": 6041,
									"src": "34380:314:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 6039,
										"nodeType": "Block",
										"src": "34853:87:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "34888:46:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "34902:22:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "34907:17:15"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 6033,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:15",
														"valueSize": 1
													},
													{
														"declaration": 6036,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 6038,
												"nodeType": "InlineAssembly",
												"src": "34863:71:15"
											}
										]
									},
									"documentation": {
										"id": 6031,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:15",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 6040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6033,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 6040,
												"src": "34811:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:15"
									},
									"returnParameters": {
										"id": 6037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6036,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 6040,
												"src": "34842:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:15"
									},
									"scope": 6041,
									"src": "34795:145:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 6042,
							"src": "769:34173:15",
							"usedErrors": [
								4286,
								4291,
								4298,
								4303
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:15"
				},
				"id": 15
			},
			"Standard_ERC1155.sol": {
				"ast": {
					"absolutePath": "Standard_ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							2266
						],
						"Context": [
							2328
						],
						"ERC1155": [
							1053
						],
						"ERC1155Utils": [
							1388
						],
						"ERC165": [
							2658
						],
						"IERC1155": [
							1176
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1234
						],
						"IERC165": [
							2670
						],
						"Standart_ERC1155": [
							6073
						]
					},
					"id": 6074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 6043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 6044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 6074,
							"sourceUnit": 1054,
							"src": "60:59:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6045,
										"name": "ERC1155",
										"nameLocations": [
											"152:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1053,
										"src": "152:7:16"
									},
									"id": 6046,
									"nodeType": "InheritanceSpecifier",
									"src": "152:7:16"
								}
							],
							"canonicalName": "Standart_ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 6073,
							"linearizedBaseContracts": [
								6073,
								1053,
								136,
								1234,
								1176,
								2658,
								2670,
								2328
							],
							"name": "Standart_ERC1155",
							"nameLocation": "132:16:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "75794a3c",
									"id": 6048,
									"mutability": "mutable",
									"name": "nextTokenId",
									"nameLocation": "182:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 6073,
									"src": "167:26:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6047,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "167:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 6054,
										"nodeType": "Block",
										"src": "351:2:16",
										"statements": []
									},
									"id": 6055,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f6578616d706c652e636f6d2f6170692f6974656d2f7b69647d2e6a736f6e",
													"id": 6051,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "309:40:16",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4187f743cd1820c5afef0906cd3b4419c90fc3a98b6271dccd633167a3271d81",
														"typeString": "literal_string \"https://example.com/api/item/{id}.json\""
													},
													"value": "https://example.com/api/item/{id}.json"
												}
											],
											"id": 6052,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 6050,
												"name": "ERC1155",
												"nameLocations": [
													"301:7:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1053,
												"src": "301:7:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "301:49:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "298:2:16"
									},
									"returnParameters": {
										"id": 6053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:0:16"
									},
									"scope": 6073,
									"src": "287:66:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 6071,
										"nodeType": "Block",
										"src": "493:85:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 6061,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "510:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 6062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "514:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "510:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 6063,
															"name": "nextTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6048,
															"src": "522:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 6064,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6057,
															"src": "535:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 6065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "543:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 6060,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "504:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 6066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "504:42:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 6067,
												"nodeType": "ExpressionStatement",
												"src": "504:42:16"
											},
											{
												"expression": {
													"id": 6069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "557:13:16",
													"subExpression": {
														"id": 6068,
														"name": "nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6048,
														"src": "557:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 6070,
												"nodeType": "ExpressionStatement",
												"src": "557:13:16"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 6072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "463:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6057,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "476:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 6072,
												"src": "468:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:16:16"
									},
									"returnParameters": {
										"id": 6059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "493:0:16"
									},
									"scope": 6073,
									"src": "454:124:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 6074,
							"src": "123:458:16",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1073,
								1088,
								1097,
								1104
							]
						}
					],
					"src": "33:550:16"
				},
				"id": 16
			}
		}
	}
}